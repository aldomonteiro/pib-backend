{"version":3,"sources":["../../../src/api/bot/actionsController.js"],"names":["QTY_1","sendActions","action","bot","sender","pageID","multiple","split","data","payload","out","Elements","startTyping","id","Bot","wait","stopTyping","send","console","error","getFlavorsAndToppings","sizeID","flavorArray","flavorsWithPrice","Array","flavor","kind","pricing","price","toppings","toppingsNames","push","flavorsAndToppingsErr","inputCardapioReplyMsg","replyMsg","join","getOpenAndClose","weekDay","Date","getDay","openingTimes","openAndClose","isOpen","openTime","closeTime","mon_is_open","mon_open","mon_close","tue_is_open","tue_open","tue_close","wed_is_open","wed_open","wed_close","thu_is_open","thu_open","thu_close","fri_is_open","fri_open","fri_close","sat_is_open","sat_open","sat_close","sun_is_open","sun_open","sun_close","inputHorarioReplyMsg","strOpenTime","getHours","getMinutes","toString","padStart","strCloseTime"],"mappings":"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","sourcesContent":["import { getFlavors, getFlavorByName } from \"../controllers/flavorsController\";\nimport { getToppings, getToppingsNames } from \"../controllers/toppingsController\";\nimport { getOpeningTimes } from '../controllers/storesController';\nimport { getOnePricing } from '../controllers/pricingsController';\nimport { Bot, Elements } from 'facebook-messenger-bot';\nimport {\n    sendWelcomeMessage,\n    sendErrorMsg,\n    sendMainMenu,\n    sendCardapio,\n    askForPhone,\n    showPhone,\n    askToTypePhone,\n    askForQuantity,\n    askForQuantityMore,\n    showQuantity,\n    askForSize,\n    showSize,\n    askForFlavor,\n    showFlavor,\n    showOrderOrNextItem,\n    askForLocation,\n    confirmAddressOrAskLocation,\n    confirmLocationAddress,\n    showAddress,\n    confirmOrder,\n    askToTypeAddress,\n    confirmTypedText,\n    askForWantBeverage, askForBeverages, showBeverage, showNoBeverage,\n    sendHorario,\n    basicReply,\n    askForChangeOrder,\n    askForSplitFlavorOrConfirm,\n    askForFlavorOrConfirm,\n    askForSpecificItem,\n    updateItemAskOptions,\n    showOrderOrAskForPhone,\n    showSplit,\n    showFullOrder\n} from './botController';\n\n\nconst QTY_1 = [1, \"um\", \"uma\"];\n\n\nexport const sendActions = async ({ action, bot, sender, pageID, multiple, split, data, payload }) => {\n    try {\n        let out = new Elements();\n        switch (action) {\n            case 'SEND_WELCOME':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await sendWelcomeMessage(pageID, sender)\n                await Bot.wait(500);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n\n                break;\n            case 'SEND_CARDAPIO':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await sendCardapio(pageID);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n                break;\n\n            case 'ASK_FOR_PHONE':\n                await bot.startTyping(sender.id);\n                await Bot.wait(800);\n                out = await askForPhone(pageID, sender.id);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n                break;\n\n            case 'SHOW_PHONE':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await showPhone(pageID, sender.id, data);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n                break;\n\n            case 'SHOW_ADDRESS':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await showAddress(pageID, sender.id, data);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n                break;\n\n            case 'SHOW_ORDER_OR_ASK_FOR_PHONE':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await showOrderOrAskForPhone(pageID, sender.id);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n                break;\n\n            case 'ASK_TO_TYPE_PHONE':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await askToTypePhone(pageID, sender.id);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n                break;\n\n            case 'ASK_FOR_LOCATION':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await askForLocation();\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n                break;\n\n            case 'ASK_TO_TYPE_ADDRESS':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await askToTypeAddress(pageID, sender.id);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n                break;\n\n            case 'ASK_FOR_QUANTITY':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await askForQuantity(pageID, sender.id);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n                break;\n            case 'ASK_FOR_FLAVOR':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await askForFlavor(pageID, sender.id, multiple, split);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n                break;\n\n            case 'SHOW_FLAVOR':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await showFlavor(pageID, sender.id, data);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n                break;\n\n            case 'ASK_FOR_WANT_BEVERAGE':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await askForWantBeverage(pageID, sender.id);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n\n                break;\n\n            case 'SHOW_NO_BEVERAGE':\n                await bot.startTyping(sender.id);\n                await Bot.wait(200);\n                out = await showNoBeverage(pageID, sender.id, data);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n\n                break;\n            case 'ASK_FOR_BEVERAGE_OPTIONS':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await askForBeverages(pageID, sender.id, multiple);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n\n                break;\n\n            case 'SHOW_BEVERAGE':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await showBeverage(pageID, sender.id, data);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n\n                break;\n            case 'SHOW_FULL_ORDER':\n                // show summary\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await showFullOrder(pageID, sender.id);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n                break;\n            case 'CONFIRM_ORDER':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await confirmOrder(pageID, sender.id);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n\n                break;\n            default:\n                break;\n        }\n    } catch (sendActionsErr) {\n        console.error(action, sendActionsErr);\n        throw sendActionsErr;\n    }\n}\n\n\n/**\n * Returns array of flavors. If sizeID was passed, only returns flavors with price.\n * @param {*} pageID \n * @param {*} sizeID \n */\nexport const getFlavorsAndToppings = async (pageID, sizeID) => {\n    try {\n        const flavorArray = await getFlavors(pageID);\n        const flavorsWithPrice = new Array();\n        for (let flavor of flavorArray) {\n            if (sizeID) {\n                const pricing = await getOnePricing(pageID, flavor.kind, sizeID);\n                if (pricing) {\n                    flavor.price = pricing.price;\n                }\n            }\n            if (sizeID) {\n                if (flavor.price) {\n                    flavor.toppingsNames = await getToppingsNames(flavor.toppings);\n                    flavorsWithPrice.push(flavor);\n                }\n            } else {\n                flavor.toppingsNames = await getToppingsNames(flavor.toppings);\n                flavorsWithPrice.push(flavor);\n            }\n        }\n        return flavorsWithPrice;\n    } catch (flavorsAndToppingsErr) {\n        console.error({ flavorsAndToppingsErr });\n    }\n}\n\nexport const inputCardapioReplyMsg = (flavorArray) => {\n    let replyMsg = '';\n    if (flavorArray) {\n        for (const flavor of flavorArray) {\n            replyMsg = replyMsg + '*' + flavor.flavor + '*' + '\\n';\n            replyMsg = replyMsg + flavor.toppingsNames.join();\n            replyMsg = replyMsg + '\\n';\n        }\n    }\n    return replyMsg;\n}\n\nexport const getOpenAndClose = async (pageID) => {\n    // TODO: timezone from the store\n    const weekDay = (new Date()).getDay();\n\n    const openingTimes = await getOpeningTimes(pageID);\n\n    if (openingTimes) {\n        let openAndClose = { isOpen: false, openTime: null, closeTime: null };\n        if (weekDay === 1) {\n            openAndClose.isOpen = openingTimes.mon_is_open;\n            openAndClose.openTime = openingTimes.mon_open;\n            openAndClose.closeTime = openingTimes.mon_close;\n        } else if (weekDay === 2) {\n            openAndClose.isOpen = openingTimes.tue_is_open;\n            openAndClose.openTime = openingTimes.tue_open;\n            openAndClose.closeTime = openingTimes.tue_close;\n        } else if (weekDay === 3) {\n            openAndClose.isOpen = openingTimes.wed_is_open;\n            openAndClose.openTime = openingTimes.wed_open;\n            openAndClose.closeTime = openingTimes.wed_close;\n        } else if (weekDay === 4) {\n            openAndClose.isOpen = openingTimes.thu_is_open;\n            openAndClose.openTime = openingTimes.thu_open;\n            openAndClose.closeTime = openingTimes.thu_close;\n        } else if (weekDay === 5) {\n            openAndClose.isOpen = openingTimes.fri_is_open;\n            openAndClose.openTime = openingTimes.fri_open;\n            openAndClose.closeTime = openingTimes.fri_close;\n        } else if (weekDay === 6) {\n            openAndClose.isOpen = openingTimes.sat_is_open;\n            openAndClose.openTime = openingTimes.sat_open;\n            openAndClose.closeTime = openingTimes.sat_close;\n        }\n        else if (weekDay === 7) {\n            openAndClose.isOpen = openingTimes.sun_is_open;\n            openAndClose.openTime = openingTimes.sun_open;\n            openAndClose.closeTime = openingTimes.sun_close;\n        }\n        return openAndClose;\n    }\n    return null;\n}\n\nexport const inputHorarioReplyMsg = (openAndClose) => {\n    let replyMsg = '';\n    if (openAndClose) {\n        if (openAndClose.isOpen === true) {\n            const strOpenTime = new Date(openAndClose.openTime).getHours() + ':' + new Date(openAndClose.openTime).getMinutes().toString().padStart(2, '0');\n            const strCloseTime = new Date(openAndClose.closeTime).getHours() + ':' + new Date(openAndClose.closeTime).getMinutes().toString().padStart(2, '0');\n\n            replyMsg = 'Olá, hoje nosso horário de funcionamento é a partir das ';\n            replyMsg = replyMsg + strOpenTime + ' horas, até às ';\n            replyMsg = replyMsg + strCloseTime + ' horas.';\n        } else {\n            replyMsg = 'Olá, infelizmente hoje estamos fechados, então, não estamos aceitando pedidos. ';\n        }\n    }\n    return replyMsg;\n}\n"],"file":"actionsController.js"}