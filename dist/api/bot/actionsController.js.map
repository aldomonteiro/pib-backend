{"version":3,"sources":["../../../src/api/bot/actionsController.js"],"names":["QTY_1","sendActions","action","bot","sender","pageID","multiple","split","data","payload","out","Elements","startTyping","id","Bot","wait","stopTyping","send","phone","console","error","getFlavorsAndToppings","sizeID","flavorArray","flavorsWithPrice","Array","flavor","kind","pricing","price","toppings","toppingsNames","push","flavorsAndToppingsErr","inputCardapioReplyMsg","replyMsg","join","getOpenAndClose","weekDay","Date","getDay","openingTimes","openAndClose","isOpen","openTime","closeTime","mon_is_open","mon_open","mon_close","tue_is_open","tue_open","tue_close","wed_is_open","wed_open","wed_close","thu_is_open","thu_open","thu_close","fri_is_open","fri_open","fri_close","sat_is_open","sat_open","sat_close","sun_is_open","sun_open","sun_close","inputHorarioReplyMsg","strOpenTime","getHours","getMinutes","toString","padStart","strCloseTime"],"mappings":"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","sourcesContent":["import { getFlavors, getFlavorByName } from \"../controllers/flavorsController\";\nimport { getToppings, getToppingsNames } from \"../controllers/toppingsController\";\nimport { getOpeningTimes } from '../controllers/storesController';\nimport { getOnePricing } from '../controllers/pricingsController';\nimport { Bot, Elements } from 'facebook-messenger-bot';\nimport {\n    sendWelcomeMessage,\n    sendErrorMsg,\n    sendMainMenu,\n    sendCardapio,\n    askForPhone,\n    showPhone,\n    askToTypePhone,\n    askForQuantity,\n    askForQuantityMore,\n    showQuantity,\n    askForSize,\n    showSize,\n    askForFlavor,\n    showFlavor,\n    showOrderOrNextItem,\n    askForLocation,\n    confirmAddressOrAskLocation,\n    confirmLocationAddress,\n    showAddress,\n    confirmOrder,\n    askToTypeAddress,\n    confirmTypedText,\n    askForWantBeverage, askForBeverages, showBeverage, showNoBeverage,\n    sendHorario,\n    basicReply,\n    askForChangeOrder,\n    askForSplitFlavorOrConfirm,\n    askForFlavorOrConfirm,\n    askForSpecificItem,\n    updateItemAskOptions,\n    showOrderOrAskForPhone,\n    showSplit,\n    showFullOrder,\n    askForWantOrder\n} from './botController';\n\n\nconst QTY_1 = [1, \"um\", \"uma\"];\n\n\nexport const sendActions = async ({ action, bot, sender, pageID, multiple, split, data, payload }) => {\n    try {\n        let out = new Elements();\n        switch (action) {\n            case 'BASIC_REPLY':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await basicReply(data);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n\n                break;\n            case 'SEND_WELCOME':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await sendWelcomeMessage(pageID, sender)\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n\n                break;\n            case 'SEND_MAIN_MENU':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await sendMainMenu()\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n\n                break;\n\n            case 'SEND_CARDAPIO':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await sendCardapio(pageID);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n                break;\n            case 'ASK_FOR_ORDER':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await askForWantOrder(pageID, sender.id);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n                break;\n            case 'ASK_FOR_PHONE':\n                await bot.startTyping(sender.id);\n                await Bot.wait(800);\n                out = await askForPhone(pageID, sender.id);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n                break;\n\n            case 'SHOW_PHONE':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n\n                const phone = typeof data === 'undefined' ? payload : data;\n                out = await showPhone(pageID, sender.id, phone);\n\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n                break;\n\n            case 'SHOW_ADDRESS':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await showAddress(pageID, sender.id, data);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n                break;\n\n            case 'SHOW_ORDER_OR_ASK_FOR_PHONE':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await showOrderOrAskForPhone(pageID, sender.id);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n                break;\n\n            case 'ASK_TO_TYPE_PHONE':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await askToTypePhone(pageID, sender.id);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n                break;\n\n            case 'ASK_FOR_LOCATION':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await askForLocation();\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n                break;\n\n            case 'ASK_TO_TYPE_ADDRESS':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await askToTypeAddress(pageID, sender.id);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n                break;\n\n            case 'ASK_FOR_QUANTITY':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await askForQuantity(pageID, sender.id);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n                break;\n            case 'ASK_FOR_FLAVOR':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await askForFlavor(pageID, sender.id, multiple, split);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n                break;\n\n            case 'SHOW_FLAVOR':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await showFlavor(pageID, sender.id, data);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n                break;\n\n            case 'ASK_FOR_WANT_BEVERAGE':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await askForWantBeverage(pageID, sender.id);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n\n                break;\n\n            case 'SHOW_NO_BEVERAGE':\n                await bot.startTyping(sender.id);\n                await Bot.wait(200);\n                out = await showNoBeverage(pageID, sender.id, data);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n\n                break;\n            case 'ASK_FOR_BEVERAGE_OPTIONS':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await askForBeverages(pageID, sender.id, multiple);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n\n                break;\n\n            case 'SHOW_BEVERAGE':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await showBeverage(pageID, sender.id, data);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n\n                break;\n            case 'SHOW_FULL_ORDER':\n                // show summary\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await showFullOrder(pageID, sender.id);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n                break;\n            case 'CONFIRM_ORDER':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await confirmOrder(pageID, sender.id);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n\n                break;\n            default:\n                break;\n        }\n    } catch (sendActionsErr) {\n        console.error(action, sendActionsErr);\n        throw sendActionsErr;\n    }\n}\n\n\n/**\n * Returns array of flavors. If sizeID was passed, only returns flavors with price.\n * @param {*} pageID \n * @param {*} sizeID \n */\nexport const getFlavorsAndToppings = async (pageID, sizeID) => {\n    try {\n        const flavorArray = await getFlavors(pageID);\n        const flavorsWithPrice = new Array();\n        for (let flavor of flavorArray) {\n            if (sizeID) {\n                const pricing = await getOnePricing(pageID, flavor.kind, sizeID);\n                if (pricing) {\n                    flavor.price = pricing.price;\n                }\n            }\n            if (sizeID) {\n                if (flavor.price) {\n                    flavor.toppingsNames = await getToppingsNames(flavor.toppings, pageID);\n                    flavorsWithPrice.push(flavor);\n                }\n            } else {\n                flavor.toppingsNames = await getToppingsNames(flavor.toppings, pageID);\n                flavorsWithPrice.push(flavor);\n            }\n        }\n        return flavorsWithPrice;\n    } catch (flavorsAndToppingsErr) {\n        console.error({ flavorsAndToppingsErr });\n    }\n}\n\nexport const inputCardapioReplyMsg = (flavorArray) => {\n    let replyMsg = '';\n    if (flavorArray) {\n        for (const flavor of flavorArray) {\n            replyMsg = replyMsg + '*' + flavor.flavor + '*' + '\\n';\n            replyMsg = replyMsg + flavor.toppingsNames.join();\n            replyMsg = replyMsg + '\\n';\n        }\n    }\n    return replyMsg;\n}\n\nexport const getOpenAndClose = async (pageID) => {\n    // TODO: timezone from the store\n    const weekDay = (new Date()).getDay();\n\n    const openingTimes = await getOpeningTimes(pageID);\n\n    if (openingTimes) {\n        let openAndClose = { isOpen: false, openTime: null, closeTime: null };\n        if (weekDay === 1) {\n            openAndClose.isOpen = openingTimes.mon_is_open;\n            openAndClose.openTime = openingTimes.mon_open;\n            openAndClose.closeTime = openingTimes.mon_close;\n        } else if (weekDay === 2) {\n            openAndClose.isOpen = openingTimes.tue_is_open;\n            openAndClose.openTime = openingTimes.tue_open;\n            openAndClose.closeTime = openingTimes.tue_close;\n        } else if (weekDay === 3) {\n            openAndClose.isOpen = openingTimes.wed_is_open;\n            openAndClose.openTime = openingTimes.wed_open;\n            openAndClose.closeTime = openingTimes.wed_close;\n        } else if (weekDay === 4) {\n            openAndClose.isOpen = openingTimes.thu_is_open;\n            openAndClose.openTime = openingTimes.thu_open;\n            openAndClose.closeTime = openingTimes.thu_close;\n        } else if (weekDay === 5) {\n            openAndClose.isOpen = openingTimes.fri_is_open;\n            openAndClose.openTime = openingTimes.fri_open;\n            openAndClose.closeTime = openingTimes.fri_close;\n        } else if (weekDay === 6) {\n            openAndClose.isOpen = openingTimes.sat_is_open;\n            openAndClose.openTime = openingTimes.sat_open;\n            openAndClose.closeTime = openingTimes.sat_close;\n        }\n        else if (weekDay === 7) {\n            openAndClose.isOpen = openingTimes.sun_is_open;\n            openAndClose.openTime = openingTimes.sun_open;\n            openAndClose.closeTime = openingTimes.sun_close;\n        }\n        return openAndClose;\n    }\n    return null;\n}\n\nexport const inputHorarioReplyMsg = (openAndClose) => {\n    let replyMsg = '';\n    if (openAndClose) {\n        if (openAndClose.isOpen === true) {\n            const strOpenTime = new Date(openAndClose.openTime).getHours() + ':' + new Date(openAndClose.openTime).getMinutes().toString().padStart(2, '0');\n            const strCloseTime = new Date(openAndClose.closeTime).getHours() + ':' + new Date(openAndClose.closeTime).getMinutes().toString().padStart(2, '0');\n\n            replyMsg = 'Olá, hoje nosso horário de funcionamento é a partir das ';\n            replyMsg = replyMsg + strOpenTime + ' horas, até às ';\n            replyMsg = replyMsg + strCloseTime + ' horas.';\n        } else {\n            replyMsg = 'Olá, infelizmente hoje estamos fechados, então, não estamos aceitando pedidos. ';\n        }\n    }\n    return replyMsg;\n}\n"],"file":"actionsController.js"}