{"version":3,"sources":["../../../src/api/bot/actionsController.js"],"names":["QTY_1","sendActions","action","bot","sender","pageID","multiple","data","out","Elements","startTyping","id","Bot","wait","stopTyping","send","console","error","getFlavorsAndToppings","sizeID","flavorArray","flavorsWithPrice","Array","flavor","kind","pricing","price","toppings","toppingsNames","push","flavorsAndToppingsErr","inputCardapioReplyMsg","replyMsg","join","getOpenAndClose","weekDay","Date","getDay","openingTimes","openAndClose","isOpen","openTime","closeTime","mon_is_open","mon_open","mon_close","tue_is_open","tue_open","tue_close","wed_is_open","wed_open","wed_close","thu_is_open","thu_open","thu_close","fri_is_open","fri_open","fri_close","sat_is_open","sat_open","sat_close","sun_is_open","sun_open","sun_close","inputHorarioReplyMsg","strOpenTime","getHours","getMinutes","toString","padStart","strCloseTime"],"mappings":"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","sourcesContent":["import { getFlavors, getFlavorByName } from \"../controllers/flavorsController\";\nimport { getToppings, getToppingsNames } from \"../controllers/toppingsController\";\nimport { getOpeningTimes } from '../controllers/storesController';\nimport { getOnePricing } from '../controllers/pricingsController';\nimport { Bot, Elements } from 'facebook-messenger-bot';\nimport {\n    sendWelcomeMessage, sendCardapio,\n    askForWantBeverage, askForBeverages, showBeverage, confirmOrder, showFullOrder\n} from './botController';\n\nconst QTY_1 = [1, \"um\", \"uma\"];\n\n\nexport const sendActions = async ({ action, bot, sender, pageID, multiple, data }) => {\n    try {\n        let out = new Elements();\n        switch (action) {\n            case 'SEND_WELCOME':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await sendWelcomeMessage(pageID, sender)\n                await Bot.wait(500);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n\n                break;\n            case 'SEND_CARDAPIO':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await sendCardapio(pageID);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n\n                break;\n            case 'ASK_FOR_WANT_BEVERAGE':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await askForWantBeverage(pageID, sender.id);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n\n                break;\n            case 'ASK_FOR_BEVERAGE_OPTIONS':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await askForBeverages(pageID, sender.id, multiple);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n\n                break;\n\n            case 'SHOW_BEVERAGE':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await showBeverage(pageID, sender.id, data);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n\n                break;\n            case 'SHOW_FULL_ORDER':\n                // show summary\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await showFullOrder(pageID, sender.id);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n                break;\n            case 'CONFIRM_ORDER':\n                await bot.startTyping(sender.id);\n                await Bot.wait(500);\n                out = await confirmOrder(pageID, sender.id);\n                await bot.stopTyping(sender.id);\n                await bot.send(sender.id, out);\n\n                break;\n            default:\n                break;\n        }\n    } catch (sendActionsErr) {\n        console.error(action, sendActionsErr);\n        throw sendActionsErr;\n    }\n}\n\n\n/**\n * Returns array of flavors. If sizeID was passed, only returns flavors with price.\n * @param {*} pageID \n * @param {*} sizeID \n */\nexport const getFlavorsAndToppings = async (pageID, sizeID) => {\n    try {\n        const flavorArray = await getFlavors(pageID);\n        const flavorsWithPrice = new Array();\n        for (let flavor of flavorArray) {\n            if (sizeID) {\n                const pricing = await getOnePricing(pageID, flavor.kind, sizeID);\n                if (pricing) {\n                    flavor.price = pricing.price;\n                }\n            }\n            if (sizeID) {\n                if (flavor.price) {\n                    flavor.toppingsNames = await getToppingsNames(flavor.toppings);\n                    flavorsWithPrice.push(flavor);\n                }\n            } else {\n                flavor.toppingsNames = await getToppingsNames(flavor.toppings);\n                flavorsWithPrice.push(flavor);\n            }\n        }\n        return flavorsWithPrice;\n    } catch (flavorsAndToppingsErr) {\n        console.error({ flavorsAndToppingsErr });\n    }\n}\n\nexport const inputCardapioReplyMsg = (flavorArray) => {\n    let replyMsg = '';\n    if (flavorArray) {\n        for (const flavor of flavorArray) {\n            replyMsg = replyMsg + '*' + flavor.flavor + '*' + '\\n';\n            replyMsg = replyMsg + flavor.toppingsNames.join();\n            replyMsg = replyMsg + '\\n';\n        }\n    }\n    return replyMsg;\n}\n\nexport const getOpenAndClose = async (pageID) => {\n    // TODO: timezone from the store\n    const weekDay = (new Date()).getDay();\n\n    const openingTimes = await getOpeningTimes(pageID);\n\n    if (openingTimes) {\n        let openAndClose = { isOpen: false, openTime: null, closeTime: null };\n        if (weekDay === 1) {\n            openAndClose.isOpen = openingTimes.mon_is_open;\n            openAndClose.openTime = openingTimes.mon_open;\n            openAndClose.closeTime = openingTimes.mon_close;\n        } else if (weekDay === 2) {\n            openAndClose.isOpen = openingTimes.tue_is_open;\n            openAndClose.openTime = openingTimes.tue_open;\n            openAndClose.closeTime = openingTimes.tue_close;\n        } else if (weekDay === 3) {\n            openAndClose.isOpen = openingTimes.wed_is_open;\n            openAndClose.openTime = openingTimes.wed_open;\n            openAndClose.closeTime = openingTimes.wed_close;\n        } else if (weekDay === 4) {\n            openAndClose.isOpen = openingTimes.thu_is_open;\n            openAndClose.openTime = openingTimes.thu_open;\n            openAndClose.closeTime = openingTimes.thu_close;\n        } else if (weekDay === 5) {\n            openAndClose.isOpen = openingTimes.fri_is_open;\n            openAndClose.openTime = openingTimes.fri_open;\n            openAndClose.closeTime = openingTimes.fri_close;\n        } else if (weekDay === 6) {\n            openAndClose.isOpen = openingTimes.sat_is_open;\n            openAndClose.openTime = openingTimes.sat_open;\n            openAndClose.closeTime = openingTimes.sat_close;\n        }\n        else if (weekDay === 7) {\n            openAndClose.isOpen = openingTimes.sun_is_open;\n            openAndClose.openTime = openingTimes.sun_open;\n            openAndClose.closeTime = openingTimes.sun_close;\n        }\n        return openAndClose;\n    }\n    return null;\n}\n\nexport const inputHorarioReplyMsg = (openAndClose) => {\n    let replyMsg = '';\n    if (openAndClose) {\n        if (openAndClose.isOpen === true) {\n            const strOpenTime = new Date(openAndClose.openTime).getHours() + ':' + new Date(openAndClose.openTime).getMinutes().toString().padStart(2, '0');\n            const strCloseTime = new Date(openAndClose.closeTime).getHours() + ':' + new Date(openAndClose.closeTime).getMinutes().toString().padStart(2, '0');\n\n            replyMsg = 'Olá, hoje nosso horário de funcionamento é a partir das ';\n            replyMsg = replyMsg + strOpenTime + ' horas, até às ';\n            replyMsg = replyMsg + strCloseTime + ' horas.';\n        } else {\n            replyMsg = 'Olá, infelizmente hoje estamos fechados, então, não estamos aceitando pedidos. ';\n        }\n    }\n    return replyMsg;\n}\n"],"file":"actionsController.js"}