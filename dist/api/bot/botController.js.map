{"version":3,"sources":["../../../src/api/bot/botController.js"],"names":["log_file","fs","createWriteStream","__dirname","flags","log_stdout","process","stdout","console","log","d","write","util","format","MSG_GENERAL_ERROR","sendErrorMsg","_errorMsg","out","Elements","_showErrorMsg","add","text","basicReply","replyText","type","askForContinue","options","data","event","checkLastAction","pageId","userId","pendingOrder","order","wf","waitingFor","wfd","waitingForData","addrData","confirmAddress","askForLocation","location","lat","location_lat","long","location_long","url","location_url","confirmLocationAddress","askForSizeCat","askForDeliver","askForCategory","askForQuantity","checkSplit","askForFlavor","askForChangeOrder","showPartialOrder","askForWantBeverage","askForBeverages","askForPaymentType","askForPaymentChange","askForComments","showFullOrder","showOrderOrNextItem","sendMainMenu","optionsStopOrder","passThreadControl","source","_txt","hidden","result","sendWelcomeMessage","pageID","sender","info","_nameToReplace","fetch","first_name","page","replyMsg","firstResponseText","replace","sendHorario","todayIsOpen","todayOpenAt","todayCloseAt","reply","sendCardapio","id","getFlavorsAndToppings","categoryID","sizeID","flavorArray","allToppings","pricings","flavorsWithPrice","flavor","categoryId","price","sizeId","toppingsNames","toppings","tId","topping","push","error","flavorsAndToppingsErr","askForWantOrder","storeData","delivery_time","delivery_fees","length","delivFee","fee","to","pickup_time","time","address","showDeliver","user","_phone","deliverType","deliverTime","storeAddress","phone","_txtReply","showDeliverCheckAddress","prevAnswer","confirmAddressOrAskLocation","nextQuestion","isLocation","addresses","foundAnyCompleteAddress","i","element","address_components","_data","formatted_address","button","addressNumber","subtext","buttons","buttonsOpt","isOnlyButtons","askToTypeAddress","userID","waitingForAddress","_replyText","formattedAddress","showAddress","formattedAddrData","showOrderOrAskForPhone","isComplete","po","askForPhone","_options","isPhoneNumber","askToTypePhone","confirmTypedPhone","replies","QuickReplies","setQuickReplies","showPhone","showDeliverAskForQuantity","showAddressAskForQuantity","backToConfirmation","whatsText","askForQuantityMore","showQuantity","qty","substr","undo","currentItem","askForSize","_text","sizesWithPricing","sizes","size","split","qty_total","eraseSplit","showQuantityAskForSize","showSize","multiple","currentItemSize","currentSize","askForFlavorOrConfirm","showSizeCheckSplit","showSplit","originalSplit","_txtFlavor","currentItemSplit","items","status","flavorId","_id","showSplitCheckFlavor","currentItemCategory","flavorsArray","_splitForTheItem","currentSplit","_rangeIni","_rangeEnd","_fl","_subtext","join","concat","option","showFlavor","origSplit","orderId","itemId","_complete","completeItem","calcTotal","cancelPendingShowPartialOrder","splice","total_price","item","_txtQty","_txtSize","deliver_type","delivery_fee","backTo","showFlavorCheckItem","payment_types","paymentType","payment_type","surcharge_percent","surcharge_amount","surcharge_amonut","showPaymentType","_txtPaymentType","showPaymentTypeAskForPaymentChange","showPaymentChange","paymentChange","_txtPaymentChange","showPaymentChangeAskForComments","askToTypeComments","showComments","comments","_txtComments","store_address","payment_change","showPaymentTypeAskForComments","showFullOrderConfirmOrder","confirmOrder","nextAnswer","hasOwnProperty","confirmStep","_evt","askForOptionsToChange","askForOptionsToChangeErr","askForSpecificItem","_itemId","_sizeSplit","category","toUpperCase","indexOf","_txtHead","noBeverage","no_beverage","beveragesArr","_bev","beverage","name","kind","showNoBeverage","showBeverage","beverageId","beveragePrice","showBeverageAskForPaymentType","showNoBeverageAskForPaymentType","changeItem","showCommentsItem","cancelItem","result1","updateItemAskOptions","sendShippingNotification","accessToken","Bot","send_message_tag","sendRejectionNotification","rejectionExplanation","cancelPendingOrder","showDeliverAskForCategory","showAddressAskForCategory","categories","is_pizza","showCategory","eraseSize","showCategoryAskForSize","price_by_size","sizeData"],"mappings":"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","sourcesContent":["import util from 'util';\nimport fs from 'fs';\nimport { Bot, Elements, QuickReplies } from 'facebook-messenger-bot';\nimport {\n    getOnePageToken,\n    getOnePageData, sendPassThreadControl,\n} from '../controllers/pagesController';\nimport { getPricingSizing, getPricings } from '../controllers/pricingsController';\nimport { getFlavors } from '../controllers/flavorsController';\nimport { getToppingsFull } from '../controllers/toppingsController';\nimport { getCardapio } from './show_cardapio';\nimport { getSizes, getSize } from '../controllers/sizesController';\nimport { getBeverages } from '../controllers/beveragesController';\nimport { getTodayOpeningTime, getStoreData } from '../controllers/storesController';\nimport { updateOrder, getOrderPending, cancelOrder } from '../controllers/ordersController';\nimport {\n    getAddressLocation,\n    getCustomerAddress, formatAddrData,\n} from '../controllers/customersController';\nimport {\n    updateStatusSpecificItem, deleteItem,\n    updateItemDirect, deletePendingItem, updateItemStatus,\n} from '../controllers/itemsController';\nimport { formatWhatsappNumber, formatAsCurrency } from '../util/util';\nimport { getCategories, getCategory } from '../controllers/categoriesController';\n\n// TODO: create a debugger with json format\nvar log_file = fs.createWriteStream(__dirname + '/debug.log', { flags: 'w' });\nvar log_stdout = process.stdout;\n\nconsole.log = function (d) { //\n    log_file.write(util.format(d) + '\\n');\n    log_stdout.write(util.format(d) + '\\n');\n};\n\nconst MSG_GENERAL_ERROR = 'Ops, estamos com um probleminha técnico: ';\n\n// // create a custom timestamp format for log statements\n// const SimpleNodeLogger = require('simple-node-logger'),\n//     opts = {\n//         logFilePath: 'logs/bot.log',\n//         timestampFormat: 'YYYY-MM-DD HH:mm:ss.SSS'\n//     },\n//     log = SimpleNodeLogger.createSimpleLogger(opts);\n\nexport const sendErrorMsg = async (_errorMsg) => {\n    const out = new Elements();\n    let _showErrorMsg = _errorMsg || 'ERRO DESCONHECIDO';\n    out.add({ text: MSG_GENERAL_ERROR + _showErrorMsg });\n    return out;\n}\n\n// export const updateOrderFlow = async (pageID, userID) => {\n\n// }\n\nexport const basicReply = async (replyText) => {\n    if (!replyText) {\n        replyText = 'Hi, how are you doing?';\n    }\n    return { type: 'text', text: replyText };\n}\n\n/**\n * Send Yes or No to the user asking if he wants to place an order right now.\n * @param {*} pageId\n * @param {*} userId\n */\nexport const askForContinue = async () => {\n    return {\n        type: 'replies',\n        text: 'Não entendi o que você quis dizer. 😞.\\n Vamos continuar com o pedido?',\n        options: [\n            { text: 'Sim', data: 'continueorder_yes', event: 'ORDER_CONTINUE_ORDER' },\n            { text: 'Não', data: 'continueorder_no', event: 'ORDER_CONTINUE_ORDER' },\n        ],\n    }\n}\n\nexport const checkLastAction = async (pageId, userId) => {\n    const pendingOrder = await getOrderPending({ pageId, userId });\n\n    if (pendingOrder.order) {\n        const wf = pendingOrder.order.waitingFor;\n        const wfd = pendingOrder.order.waitingForData;\n\n        if (wf === 'confirm_address') {\n            const addrData = await getCustomerAddress(pageId, userId);\n            return await confirmAddress(pageId, userId, addrData);\n        } else if (wf === 'location')\n            return await askForLocation(pageId, userId);\n        else if (wf === 'location_address') {\n            const location = {\n                lat: pendingOrder.order.location_lat,\n                long: pendingOrder.order.location_long,\n                url: pendingOrder.order.location_url,\n            }\n            return await confirmLocationAddress(pageId, userId, location);\n        } else if (wf === 'size')\n            return await askForSizeCat(pageId, userId)\n        else if (wf === 'deliver')\n            return await askForDeliver(pageId, userId);\n        else if (wf === 'category')\n            return await askForCategory(pageId, userId, wfd);\n        else if (wf === 'quantity')\n            return await askForQuantity(pageId, userId);\n        else if (wf === 'split')\n            return checkSplit(pageId, userId, 1);\n        else if (wf === 'flavor')\n            return await askForFlavor(pageId, userId, 1);\n        else if (wf === 'change_order')\n            return await askForChangeOrder(pageId, userId);\n        else if (wf === 'partial_confirmation')\n            return await showPartialOrder(pageId, userId);\n        else if (wf === 'want_beverage')\n            return await askForWantBeverage(pageId, userId);\n        else if (wf === 'beverage')\n            return await askForBeverages(pageId, userId, 1);\n        else if (wf === 'payment_type')\n            return await askForPaymentType(pageId, userId);\n        else if (wf === 'payment_change')\n            return await askForPaymentChange(pageId, userId);\n        else if (wf === 'comments')\n            return await askForComments(pageId, userId);\n        else if (wf === 'full_confirmation')\n            return await showFullOrder(pageId, userId);\n        else if (wf === 'nothing')\n            return await showOrderOrNextItem(pageId, userId);\n        else\n            return await sendMainMenu();\n    } else\n        return await sendMainMenu();\n}\n\nexport const optionsStopOrder = async () => {\n    return {\n        type: 'replies',\n        text: 'Muito bem, aqui estão as opções:',\n        options: [\n            { text: 'Voltar p/ Início', data: 'stoporder_init', event: 'STOP_ORDER_OPTIONS' },\n            { text: 'Falar c/ Atendente', data: 'stoporder_human', event: 'STOP_ORDER_OPTIONS' },\n        ],\n    }\n}\n\nexport const passThreadControl = async (pageId, userId, source) => {\n    let _txt = 'Ok, a partir de agora você está nas mãos do nosso atendente.';\n    _txt += ' O que você escrever a partir de agora será respondido por uma pessoa,'\n    _txt += 'o mais rápido possível!';\n\n    if (source && source === 'whatsapp') {\n        return { type: 'text', text: _txt, hidden: 'stoporder_human' };\n    } else {\n        const result = await sendPassThreadControl(pageId, userId);\n\n        if (result !== 200) {\n            _txt = 'Ops, tivemos um probleminha. Tente novamente';\n        }\n        return { type: 'text', text: _txt };\n    }\n}\n\n/**\n *\n * @param {*} sender\n * @param {*} pageID\n */\nexport const sendWelcomeMessage = async (pageID, sender) => {\n\n    console.info('sendWelcomeMessage', typeof sender);\n\n    let _nameToReplace = '';\n    if (sender && typeof sender !== 'string') {\n        // This only works on Facebook\n        await sender.fetch('first_name');\n        _nameToReplace = sender.first_name;\n    } else if (sender && typeof sender === 'string')\n        _nameToReplace = sender;\n\n    const page = await getOnePageData(pageID);\n    const replyMsg = page.firstResponseText.replace('$NAME', _nameToReplace);\n\n    return { type: 'text', text: replyMsg };\n}\n\nexport const sendMainMenu = async () => {\n    return {\n        type: 'buttons',\n        text: 'Por favor escolha uma das opções',\n        options: [\n            { text: '🍕 Cardápio', data: 'CARDAPIO_PAYLOAD', event: 'MAIN-MENU' },\n            { text: '🕒 Horários', data: 'HORARIO_PAYLOAD', event: 'MAIN-MENU' },\n            { text: '📨 Fazer Pedido', data: 'PEDIDO_PAYLOAD', event: 'MAIN-MENU' },\n            { text: '🗣 Falar c/ Atendente', data: 'stoporder_human', event: 'MAIN-MENU' },\n        ],\n    };\n\n    // const buttons = new Buttons();\n    // buttons.add({ text: '🍕 Cardápio', data: 'CARDAPIO_PAYLOAD', event: 'MAIN-MENU' });\n    // buttons.add({ text: '🕒 Horários', data: 'HORARIO_PAYLOAD', event: 'MAIN-MENU' });\n    // buttons.add({ text: '📨 Fazer Pedido', data: 'PEDIDO_PAYLOAD', event: 'MAIN-MENU' });\n\n    // const out = new Elements();\n    // out.add({ text: 'Por favor escolha uma das opções', buttons });\n\n    // return out;\n}\n\nexport const sendHorario = async (pageID, source) => {\n    const { todayIsOpen, todayOpenAt, todayCloseAt } = await getTodayOpeningTime(pageID);\n\n    let replyMsg = '';\n    if (todayIsOpen === true) {\n        replyMsg = 'Estamos abertos hoje, a partir das ' + todayOpenAt + ' horas, até às ' + todayCloseAt + ' horas.';\n    } else {\n        replyMsg = 'Infelizmente hoje não estamos abertos, mas você pode consultar nosso cardápio no menu principal.';\n    }\n\n    if (source && source === 'whatsapp') {\n        const reply = await sendMainMenu();\n        reply.text = replyMsg + '\\n\\n' + reply.text;\n        return reply;\n    } else\n        return { type: 'text', text: replyMsg };\n}\n\n/**\n * Returns only the formatted text to be sent to the user\n * @param {*} pageID\n */\nexport const sendCardapio = async (pageID, data, source) => {\n    const replyMsg = await getCardapio(pageID, data.id);\n\n    if (source && source === 'whatsapp') {\n        const reply = await sendMainMenu();\n        reply.text = replyMsg + '\\n\\n' + reply.text;\n        return reply;\n    } else\n        return { type: 'text', text: replyMsg };\n}\n\n\n/**\n * Returns array of flavors. If sizeID was passed, only returns flavors with price.\n * @param {*} pageID\n * @param {*} sizeID\n */\nexport const getFlavorsAndToppings = async (pageID, categoryID, sizeID) => {\n    try {\n        const flavorArray = await getFlavors(pageID);\n        const allToppings = await getToppingsFull(pageID);\n        const pricings = await getPricings(pageID);\n        const flavorsWithPrice = [];\n        for (let flavor of flavorArray) {\n            if (categoryID && flavor.categoryId === categoryID) {\n                if (sizeID) {\n                    for (let price of pricings) {\n                        if (price.categoryId === flavor.categoryId && price.sizeId === sizeID) {\n                            flavor.price = price.price;\n                            break;\n                        }\n                    }\n                }\n                if (flavor.price) {\n                    flavor.toppingsNames = [];\n                    for (let tId of flavor.toppings) {\n                        for (let topping of allToppings) {\n                            if (topping.id === tId) {\n                                flavor.toppingsNames.push(topping.topping);\n                            }\n                        }\n                    }\n                    flavorsWithPrice.push(flavor);\n                }\n            }\n        }\n        return flavorsWithPrice;\n    } catch (flavorsAndToppingsErr) {\n        console.error({ flavorsAndToppingsErr });\n    }\n}\n\n\n/**\n * Send Yes or No to the user asking if he wants to place an order right now.\n */\nexport const askForWantOrder = async () => {\n    return {\n        type: 'replies',\n        text: 'Agora que você viu nosso cardápio, você está pronto para fazer o pedido?',\n        options: [\n            { text: 'Sim', data: 'wantorder_yes', event: 'ORDER_WANT_ORDER' },\n            { text: 'Não', data: 'wantorder_no', event: 'ORDER_WANT_ORDER' },\n        ],\n    };\n\n    // const out = new Elements();\n    // let _txt = 'Agora que você viu nosso cardápio, você está pronto para fazer o pedido?';\n    // out.add({ text: _txt });\n\n    // const replies = new QuickReplies();\n    // // replies.add({ text: \"Quantidade\", data: \"change_quantity\", event: 'ORDER_CHANGE' });\n    // replies.add({ text: \"Sim\", data: \"wantorder_yes\", event: 'ORDER_WANT_ORDER' });\n    // replies.add({ text: \"Não\", data: \"wantorder_no\", event: 'ORDER_WANT_ORDER' });\n    // out.setQuickReplies(replies);\n    // return out;\n}\n\nexport const askForDeliver = async (pageId, userId) => {\n    await updateOrder({ pageId, userId, waitingFor: 'deliver' });\n\n    const storeData = await getStoreData(pageId);\n    let _txt = '';\n\n    if (storeData.delivery_time) {\n        _txt += `👉 Tempo de entrega: ⏱ *${storeData.delivery_time}* minutos\\n`;\n    }\n    if (storeData.delivery_fees && storeData.delivery_fees.length > 0) {\n        _txt += 'Taxa de Entrega: ';\n        for (let delivFee of storeData.delivery_fees) {\n            _txt += `${formatAsCurrency(delivFee.fee)} (até ${delivFee.to} km) `\n        }\n        _txt += '\\n';\n    }\n    if (storeData.pickup_time) {\n        _txt += `👉 Para retirar aqui: ⏱ *${storeData.pickup_time}* minutos\\n`;\n    }\n\n    _txt += 'O pedido é para entregar ou você vem retirar aqui?'\n\n    return {\n        type: 'replies',\n        text: _txt,\n        options: [\n            {\n                text: 'Entregar',\n                data: { type: 'delivery', time: storeData.delivery_time },\n                event: 'ORDER_DELIVER',\n            },\n            {\n                text: 'Retirar',\n                data: { type: 'pickup', time: storeData.pickup_time, address: storeData.address },\n                event: 'ORDER_DELIVER',\n            },\n        ],\n    }\n}\n\nexport const showDeliver = async (pageId, userId, data, user, source) => {\n    let _phone = null;\n    if (source && source === 'whatsapp') {\n        _phone = formatWhatsappNumber(userId);\n    }\n\n    await updateOrder({\n        pageId, userId,\n        deliverType: data.type, deliverTime: data.time, storeAddress: data.address,\n        user: user,\n        phone: _phone, source: source,\n    });\n\n    let _txtReply;\n    if (data && data.type === 'delivery')\n        _txtReply = 'Entregaremos o seu pedido.';\n    else {\n        _txtReply = 'Retirar o pedido conosco.\\n';\n        if (data.address)\n            _txtReply += '📌 Nosso endereço: ' + data.address;\n    }\n\n    return {\n        type: 'text',\n        text: '✅ ' + _txtReply,\n    };\n}\n\nexport const showDeliverCheckAddress = async (pageId, userId, data, user, source) => {\n    const prevAnswer = await showDeliver(pageId, userId, data, user, source);\n    const nextQuestion = await confirmAddressOrAskLocation(pageId, userId, user, source)\n\n    nextQuestion.text = prevAnswer.text + '\\n\\n' + nextQuestion.text;\n    return nextQuestion;\n}\n\n\n/**\n * Question No.01\n * If the user doesnt have an address in the database, this will be the first question.\n */\nexport const askForLocation = async (pageId, userId, user, source) => {\n\n    let _phone = null;\n    if (source && source === 'whatsapp') {\n        _phone = formatWhatsappNumber(userId);\n    }\n\n    await updateOrder({ pageId, userId, user, waitingFor: 'location', phone: _phone, source: source });\n\n    if (!source || source === 'messenger') {\n        return {\n            type: 'replies',\n            text: 'Para começar, preciso saber aonde você está. Por favor clique no botão abaixo para me mandá-la.',\n            options: [\n                { text: 'Localização', isLocation: true, data: 'location_location', event: 'LOCATION' },\n            ],\n        }\n    } else if (source === 'whatsapp') {\n        return {\n            type: 'text',\n            text: 'Para começar, preciso saber aonde você está. Favor enviar a sua localização.',\n            options: [\n                { text: 'Localização', data: 'location_location', event: 'LOCATION' },\n            ],\n        }\n    }\n}\n\n\nexport const confirmLocationAddress = async (pageId, userId, location, user) => {\n    if (location) {\n        await updateOrder({ pageId, userId, location, user, waitingFor: 'location_address' });\n\n        const addresses = await getAddressLocation(location);\n\n        if (addresses && addresses.length && addresses.length > 0) {\n\n            let foundAnyCompleteAddress = false;\n            const options = [];\n            for (let i = 0; i < 4; i++) {\n                const element = addresses[i];\n                if (element.address_components && element.address_components.length >= 6) {\n                    foundAnyCompleteAddress = true;\n                    const _data = { formatted_address: element.formatted_address, address_components: element.address_components };\n                    const button = { text: 'Esse!', data: _data, event: 'LOCATION_ADDRESS' };\n                    let addressNumber = i + 1;\n                    options.push({ text: 'Endereço ' + addressNumber, subtext: element.formatted_address, buttons: button });\n                }\n            }\n\n            if (foundAnyCompleteAddress) {\n                const buttonsOpt = { data: 'incorrect_address', event: 'LOCATION_ADDRESS' };\n                options.push({\n                    text: 'Não é meu endereço..',\n                    subtext: 'Selecione essa opção se seu endereço não aparece',\n                    buttons: buttonsOpt,\n                    isOnlyButtons: true,\n                });\n                return {\n                    type: 'list',\n                    text: 'Encontrei esses endereços, selecione o correto:',\n                    options: options,\n                };\n            } else {\n                return await askToTypeAddress(pageId, userId);\n            }\n        } else {\n            return await askToTypeAddress(pageId, userId);\n        }\n    } else {\n        return await askToTypeAddress(pageId, userId);\n    }\n}\n\nexport const confirmAddressOrAskLocation = async (pageId, userId, user, source) => {\n\n    // TODO: check if the location is in the neighborhood.\n    // TODO: check if the location is the same as stored in db.\n    const addrData = await getCustomerAddress(pageId, userId);\n\n    if (addrData) {\n        return confirmAddress(pageId, userId, addrData, user, source);\n    } else {\n        return await askForLocation(pageId, userId, user, source);\n    }\n}\n\nexport const askToTypeAddress = async (pageID, userID) => {\n    await updateOrder({ pageId: pageID, userId: userID, waitingForAddress: true, waitingFor: 'typed_address' });\n\n    return {\n        type: 'text',\n        text: 'Não foi possível localizar um endereço válido. Digite o seu endereço completo por favor.',\n    }\n}\n\nexport const confirmAddress = async (pageId, userId, addrData, user, source) => {\n    let _phone = null;\n    if (source && source === 'whatsapp') {\n        _phone = formatWhatsappNumber(userId);\n    }\n\n    if (user)\n        await updateOrder({\n            pageId, userId, user, waitingForAddress: false,\n            waitingFor: 'confirm_address', phone: _phone,\n        });\n    else\n        await updateOrder({\n            pageId, userId, waitingForAddress: false,\n            waitingFor: 'confirm_address', phone: _phone,\n        });\n\n    let _replyText = 'A entrega será para esse endereço?\\n';\n    _replyText = _replyText + addrData.formattedAddress;\n\n    return {\n        type: 'replies',\n        text: _replyText,\n        options: [\n            { text: 'Sim', data: addrData, event: 'CORRECT_SAVED_ADDRESS' },\n            { text: 'Não', data: addrData, event: 'WRONG_SAVED_ADDRESS' },\n        ],\n    }\n}\n\nexport const showAddress = async (pageId, userId, addrData, source) => {\n    let _phone = null;\n    if (source && source === 'whatsapp') {\n        _phone = formatWhatsappNumber(userId);\n    }\n\n    if (addrData && addrData.address_components) {\n        const formattedAddrData = await formatAddrData(addrData);\n        await updateOrder({ pageId, userId, addrData: formattedAddrData, phone: _phone });\n    } else {\n        await updateOrder({ pageId, userId, addrData, phone: _phone });\n    }\n\n    return {\n        type: 'text',\n        text: 'Ok, entregaremos nesse endereço.',\n    }\n}\n\n\nexport const showOrderOrAskForPhone = async (pageId, userId) => {\n    const po = await getOrderPending({ pageId, userId, isComplete: false });\n\n    if (po.order && po.order.waitingFor === 'partial_confirmation')\n        return await showOrderOrNextItem(pageId, userId);\n    else\n        return await askForPhone(pageId, userId);\n}\n\nexport const askForPhone = async (pageId, userId) => {\n    await updateOrder({ pageId, userId, waitingFor: 'phone' });\n\n    const _txt = 'Pode nos enviar o seu telefone para confirmar o seu pedido? Se não aparecer o seu telefone (ou estiver errado), use a opção digitar.';\n\n    const _options = []\n    _options.push({ text: 'Telefone', isPhoneNumber: true, data: 'phone_number', event: 'PHONE_NUMBER' });\n    _options.push({ text: 'Digitar o telefone', data: 'change_phone', event: 'PHONE_CONFIRMED' });\n\n    return {\n        type: 'replies',\n        text: _txt,\n        options: _options,\n    };\n}\n\nexport const askToTypePhone = async (pageId, userId) => {\n\n    await updateOrder({ pageId, userId, waitingFor: 'phone' });\n\n    const out = new Elements();\n    out.add({ text: 'Por favor, digite o número do telefone válido para que possamos confirmar o pedido. Pode digitar o 📞:' });\n    return out;\n}\n\nexport const confirmTypedPhone = async (pageId, userId, phone) => {\n    const out = new Elements();\n\n    await updateOrder({ pageId, userId, waitingFor: 'phone' });\n\n    let _txt = 'O telefone ' + phone + ' está coreto?';\n    out.add({ text: _txt });\n\n    const replies = new QuickReplies();\n    replies.add({ text: 'Sim', data: phone, event: 'PHONE_CONFIRMED' });\n    replies.add({ text: 'Não, usar outro', data: 'change_phone', event: 'PHONE_CONFIRMED' });\n    out.setQuickReplies(replies);\n\n    return out;\n}\n\n\nexport const showPhone = async (pageId, userId, phone) => {\n    await updateOrder({ pageId, userId, phone, waitingFor: 'nothing' });\n\n    const out = new Elements();\n    out.add({ text: 'Usaremos o número ' + phone + ' para confirmar o pedido. Agora vou pegar as informações do pedido.' });\n    return out;\n}\n\nexport const showDeliverAskForQuantity = async (pageId, userId, data, user, source) => {\n    const prevAnswer = await showDeliver(pageId, userId, data, user, source);\n    const nextQuestion = await askForQuantity(pageId, userId);\n\n    nextQuestion.text = prevAnswer.text + '\\n\\n' + nextQuestion.text;\n    return nextQuestion;\n}\n\n\n/**\n * Show Address only stores the addres in database. Ignoring the return.\n * The user is gonna see the AskForQuantity.\n * Used on Whatsapp.\n * @param {*} pageId\n * @param {*} userId\n * @param {*} addrData\n */\nexport const showAddressAskForQuantity = async (pageId, userId, addrData, source) => {\n    const prevAnswer = await showAddress(pageId, userId, addrData, source);\n    let nextQuestion;\n\n    // Show Address can be called from the creation order flow or from\n    // the update order flow. Below, if it was called from the update order\n    // flow, I am gonna return the flow to the showOrder or showFullOrder\n    const po = await getOrderPending({ pageId, userId, isComplete: false });\n    if (po && po.order && po.order.backToConfirmation) {\n        if (po.order.backToConfirmation === 'full_confirmation') {\n            nextQuestion = await showFullOrder(pageId, userId);\n        } else if (po.order.backToConfirmation === 'partial_confirmation') {\n            nextQuestion = await showOrderOrNextItem(pageId, userId);\n        } else {\n            nextQuestion = await askForQuantity(pageId, userId);\n        }\n    } else {\n        nextQuestion = await askForQuantity(pageId, userId);\n    }\n\n    nextQuestion.text = prevAnswer.text + '\\n\\n' + nextQuestion.text;\n    return nextQuestion;\n}\n\nexport const askForQuantity = async (pageId, userId) => {\n    await updateOrder({ pageId, userId, waitingFor: 'quantity' });\n\n    return {\n        type: 'replies',\n        text: 'Quantas pizzas você quer?',\n        options: [\n            { text: '1', whatsText: 'Uma', data: 'qty_1', event: 'ORDER_QTY' },\n            { text: '2', whatsText: 'Duas', data: 'qty_2', event: 'ORDER_QTY' },\n            { text: '3', whatsText: 'Três', data: 'qty_3', event: 'ORDER_QTY' },\n            { text: '+ de 3', data: 'qty_more', event: 'ORDER_QTY' },\n        ],\n    }\n}\n\nexport const askForQuantityMore = async (pageId, userId) => {\n    await updateOrder({ pageId, userId, waitingFor: 'quantity' });\n\n    return {\n        type: 'replies',\n        text: 'Quantas pizzas você quer?',\n        options: [\n            { text: '- de 4', data: 'qty_less', event: 'ORDER_QTY' },\n            { text: '4', whatsText: 'Quatro', data: 'qty_4', event: 'ORDER_QTY' },\n            { text: '5', whatsText: 'Cinco', data: 'qty_5', event: 'ORDER_QTY' },\n            { text: '6', whatsText: 'Seis', data: 'qty_6', event: 'ORDER_QTY' },\n        ],\n    }\n}\n\nexport const showQuantity = async (pageId, userId, data) => {\n    // data is 'qty_1', 'qty_2', 'qty_3'...\n    const qty = data.substr(data.length - 1, 1);\n\n    await updateOrder({ pageId, userId, qty, waitingFor: 'size', undo: 'quantity', currentItem: 1 });\n\n    let out;\n    if (qty == 1) {\n        out = {\n            type: 'text',\n            text: '✅ ' + ' 1 pizza.',\n        };\n    } else {\n        out = {\n            type: 'text',\n            text: '✅ ' + qty + ' pizzas.',\n        };\n    }\n\n    // out.text = out.text + '(digite 0 p/ desfazer)'\n\n    return out;\n}\n\nexport const askForSize = async (pageId, userId) => {\n\n    const po = await getOrderPending({ pageId, userId, isComplete: false });\n\n    if (po.order) {\n        let _text = '';\n        if (po.order.qty === 1) {\n            _text = 'Qual o tamanho da pizza?';\n        } else {\n            _text = 'Agora vou pegar os detalhes da ' + po.order.currentItem + 'a. pizza.\\n';\n            _text = _text + 'Qual o tamanho dela?';\n        }\n\n        const _options = [];\n        const sizesWithPricing = await getPricingSizing(pageId); // only sizes with pricing\n        const sizes = await getSizes(pageId, sizesWithPricing);\n        for (let i = 0; i < sizes.length; i++) {\n            const _data = { id: sizes[i].id, size: sizes[i].size, split: sizes[i].split };\n            _options.push({ text: sizes[i].size, data: _data, event: 'ORDER_SIZE' });\n        }\n\n        const out = {\n            type: 'replies',\n            text: _text,\n            options: _options,\n        }\n        if (po.order.qty === 1)\n            await updateOrder({ pageId, userId, waitingFor: 'size' });\n        else\n            await updateOrder({\n                pageId, userId, waitingFor: 'size',\n                qty_total: po.order.qty_total, currentItem: po.order.currentItem, eraseSplit: true,\n            });\n\n        return out;\n    } else {\n        const out = {\n            type: 'text',\n            text: MSG_GENERAL_ERROR,\n        };\n        return out;\n    }\n}\n\n/**\n * Calls ShowQuantity and AskForSize\n * Used on Whatsapp.\n * @param {*} pageId\n * @param {*} userId\n * @param {*} data\n */\nexport const showQuantityAskForSize = async (pageId, userId, data) => {\n    const prevAnswer = await showQuantity(pageId, userId, data);\n    const nextQuestion = await askForSize(pageId, userId);\n\n    nextQuestion.text = prevAnswer.text + '\\n\\n' + nextQuestion.text;\n    return nextQuestion;\n}\n\n\nexport const showSize = async (pageId, userId, data) => {\n    if (data && data.split && data.split > 1)\n        await updateOrder({ pageId, userId, sizeId: data.id, undo: 'size', waitingFor: 'split' });\n    else\n        await updateOrder({ pageId, userId, sizeId: data.id, undo: 'size', waitingFor: 'flavor' });\n\n    return {\n        type: 'text',\n        text: '✅ ' + ' Tamanho: ' + data.size, // + ' (digite 0 p/ desfazer)',\n    };\n}\n\n/**\n * Triggered by action CHECK_SPLIT\n * @param {*} pageId\n * @param {*} userId\n * @param {*} multiple\n */\nexport const checkSplit = async (pageId, userId, multiple) => {\n    const pendingOrder = await getOrderPending({ pageId: pageId, userId: userId, isComplete: true });\n    if (pendingOrder.order) {\n        const currentSize = await getSize(pageId, pendingOrder.order.currentItemSize);\n        // if split is gt than 1, ask user if he wants to split in more than one flavor.\n        if (currentSize.split && currentSize.split > 1) {\n            let _txt = 'A pizza ' + currentSize.size + ' pode ser dividida em ' + currentSize.split + ' sabores.\\n';\n            _txt = _txt + 'Escolha quantos sabores você quer:';\n\n            const _options = [];\n            for (let i = 1; i <= currentSize.split; i++) {\n                let _replyText = i === 1 ? i + ' Sabor' : i + ' Sabores';\n                _options.push({ text: _replyText, data: i, event: 'ORDER_SPLIT' });\n            }\n\n            return {\n                type: 'replies',\n                text: _txt,\n                options: _options,\n            };\n        } else {\n            return await askForFlavorOrConfirm(pageId, userId, multiple);\n        }\n    }\n}\n\nexport const showSizeCheckSplit = async (pageId, userId, data, multiple) => {\n    const prevAnswer = await showSize(pageId, userId, data);\n    const nextQuestion = await checkSplit(pageId, userId, multiple);\n\n    nextQuestion.text = prevAnswer.text + '\\n\\n' + nextQuestion.text;\n    return nextQuestion;\n}\n\n/**\n * After user answer if he wants to split the pizza, show the chosen option.\n * @param {*} pageId\n * @param {*} userId\n * @param {*} data\n **/\nexport const showSplit = async (pageId, userId, data) => {\n    await updateOrder({\n        pageId, userId,\n        sizeId: data.id,\n        waitingFor: 'flavor',\n        originalSplit: data,\n    });\n\n    let _txtFlavor = data === 1 ? 'Sabor' : 'Sabores';\n\n    return {\n        type: 'text',\n        text: '✅ ' + data + ' ' + _txtFlavor,\n    };\n}\n\n\nexport const askForFlavorOrConfirm = async (pageId, userId, multiple) => {\n    const po = await getOrderPending({ pageId: pageId, userId: userId, isComplete: true });\n\n    if (po.order) {\n        if (po.order.originalSplit > 1 &&\n            po.order.originalSplit >= po.order.currentItemSplit) {\n            return await askForFlavor(pageId, userId, multiple, po);\n        } else {\n            if (po.items && po.items.length) {\n                for (let i = 0; i < po.items.length; i++) {\n                    if (po.items[i].status === 0 && po.items[i].flavorId > 0) {\n                        await updateStatusSpecificItem(po.items[i]._id, 1);\n                        return await showOrderOrNextItem(pageId, userId);\n                    }\n                }\n                return await askForFlavor(pageId, userId, multiple, po);\n            }\n        }\n    }\n}\n\nexport const showSplitCheckFlavor = async (pageId, userId, data) => {\n    const prevAnswer = await showSplit(pageId, userId, data);\n    // Changing based on categories\n    // const nextQuestion = await askForFlavorOrConfirm(pageId, userId, 1);\n    const nextQuestion = await askForFlavor(pageId, userId, 1);\n\n    nextQuestion.text = prevAnswer.text + '\\n\\n' + nextQuestion.text;\n    return nextQuestion;\n}\n\n\n/**\n *\n * @param {*} pageId\n * @param {*} userId\n * @param {*} multiple: if are the first 4 flavors, multiple=1, if are the next, multiple=2 and so on.\n */\nexport const askForFlavor = async (pageId, userId, multiple, pendingOrder) => {\n\n    let po = null;\n    if (pendingOrder && pendingOrder.order)\n        po = pendingOrder;\n    else po = await getOrderPending({ pageId: pageId, userId: userId, isComplete: false });\n\n    const flavorsArray = await getFlavorsAndToppings(pageId, po.order.currentItemCategory, po.order.currentItemSize);\n\n    // This variable will be passed as split parameter to updateOrder, so,\n    // updateOrder can update the item properly, with the value of originalSplit.\n    let _splitForTheItem = po.order.originalSplit;\n\n    // In case where the user typed an option wrongly, the bot invokes askForFlavor\n    // without the split parameter. So, because of this situation, I am retrieving\n    // the split from the order.\n    let currentSplit;\n    if (po.order.originalSplit > 1) {\n        if (!po.order.currentItemSplit) {\n            currentSplit = 1;\n        } else {\n            currentSplit = po.order.currentItemSplit;\n        }\n    }\n\n    // Rule to show 'Escolha o 1o. sabor', 'Escolha o 2o. sabor'\n    let _txt = 'Escolha o produto:'\n    if (currentSplit) {\n        // First time currentItemSplit is undefined, so, I am gonna use the originalSplit itself.\n        _txt = `Escolha o ${currentSplit}o. sabor:`\n    }\n\n    let _rangeIni = (multiple - 1) * 4;\n    let _rangeEnd = multiple * 4;\n\n    const _options = [];\n\n    for (let i = 0; i < flavorsArray.length; i++) {\n        if (flavorsArray[i]) {\n            const _fl = flavorsArray[i];\n            const _data = { id: _fl.id, flavor: _fl.flavor, price: _fl.price }\n            let _subtext = '';\n            if (_fl.toppingsNames && _fl.toppingsNames.length > 0)\n                _subtext = _fl.toppingsNames.join() + '\\n';\n            if (_fl.price) {\n                _subtext = _subtext.concat('R$', _fl.price);\n            }\n            const buttons = { text: 'Quero', data: _data, event: 'ORDER_FLAVOR' };\n\n            if (i >= _rangeIni && i < _rangeEnd)\n                _options.push({ text: _fl.flavor, subtext: _subtext, buttons });\n            else\n                _options.push({ text: _fl.flavor, subtext: _subtext, buttons, hidden: true });\n        }\n    }\n\n\n    if (flavorsArray.length > _rangeEnd) {\n        const buttons = { text: 'Voltar', data: currentSplit, event: 'ORDER_ASK_CATEGORY' };\n        _options.push({ text: 'Ver outra categoria', subtext: 'Ver outra categoria', buttons, hidden: true });\n\n        multiple++;\n        const buttonsOpt = {\n            text: '+ Opções',\n            data: { option: 'flavors_more', multiple: multiple }, event: 'ORDER_FLAVOR',\n        };\n        _options.push({\n            text: 'Ver + sabores', subtext: '+ sabores do cardápio',\n            buttons: buttonsOpt, isOnlyButtons: true,\n        });\n    } else {\n        const buttons = { text: 'Voltar', data: currentSplit, event: 'ORDER_ASK_CATEGORY' };\n        _options.push({ text: 'Ver outra categoria', subtext: 'Ver outra categoria', buttons });\n    }\n\n    updateOrder({\n        pageId, userId, waitingFor: 'flavor',\n        currentItemSplit: currentSplit,\n        currentItem: po.order.currentItem,\n        split: _splitForTheItem,\n    });\n\n    return {\n        type: 'fulllist',\n        text: _txt,\n        options: _options,\n    };\n}\n\nexport const showFlavor = async (pageId, userId, data) => {\n    const po = await getOrderPending({ pageId: pageId, userId: userId, isComplete: false });\n    let currentSplit;\n    let itemId;\n    let origSplit = po.order.originalSplit;\n    let orderId = po.order.id;\n    if (origSplit > 1 && po.order.currentItemSplit <= origSplit) {\n        if (po.order.currentItemSplit === 1)\n            itemId = po.order.currentItem ? po.order.currentItem + 1 : 1;\n        else\n            itemId = po.order.currentItem;\n\n        currentSplit = po.order.currentItemSplit + 1;\n    } else {\n        itemId = po.order.currentItem ? po.order.currentItem + 1 : 1;\n    }\n\n    let _complete = false;\n    if (origSplit > 1 && currentSplit > origSplit)\n        _complete = true;\n    else if (!po.order.originalSplit || origSplit === 1)\n        _complete = true;\n\n\n    console.info('showFlavor _complete:', _complete,\n        ' originalSplit:', po.order.originalSplit,\n        'currentSplit: ', currentSplit,\n        ' price: ', data.price);\n\n    await updateOrder({\n        pageId, userId, flavorId: data.id,\n        price: data.price,\n        completeItem: _complete,\n        waitingFor: 'nothing',\n        currentItemSplit: currentSplit,\n        currentItem: itemId,\n        categoryId: po.order.currentItemCategory,\n        calcTotal: true,\n    });\n\n    if (_complete) {\n        // without await, so, it can run later\n        updateItemStatus(pageId, orderId, itemId);\n    }\n\n    if (currentSplit) {\n        const showSplit = currentSplit - 1;\n        return {\n            type: 'text',\n            text: '✅ ' + showSplit + 'o. Sabor: ' + data.flavor,\n        };\n    } else {\n        return {\n            type: 'text',\n            text: '✅ ' + ' Sabor: ' + data.flavor,\n        };\n    }\n}\n\nexport const showOrderOrNextItem = async (pageId, userId) => {\n    const po = await getOrderPending({ pageId, userId, isComplete: true });\n\n    if (po.order.originalSplit > 1 && po.order.currentItemSplit <= po.order.originalSplit) {\n        return await askForCategory(pageId, userId, po.order.currentItemSplit);\n        // return await askForFlavor(pageId, userId, 1, po);\n    } else {\n        return await showPartialOrder(pageId, userId, po);\n        // await updateOrder({ pageId, userId, waitingFor: 'partial_confirmation', eraseSplit: true });\n\n        // let total_price = 0;\n        // _txt = _txt + '𝗣𝗲𝗱𝗶𝗱𝗼:' + po.order.id + '\\n';\n        // let _txt = 'Seguem os detalhes do seu pedido:\\n';\n        // for (let i = 0; i < po.items.length; i++) {\n        //     const _item = po.items[i];\n        //     if (_item.flavorId) {\n        //         let _txtQty = _item.split > 1 ? _item.qty + '/' + _item.split : _item.qty;\n\n        //         let _txtSize = '';\n        //         if (_item.sizeId)\n        //             _txtSize = _item.size;\n\n        //         _txt = _txt + `${_item.category}: ${_txtQty} ${_item.flavor} ${_txtSize} \\n`;\n        //     }\n        //     total_price += _item.price;\n        // }\n        // _txt = _txt + '𝗧𝗼𝘁𝗮𝗹: ' + formatAsCurrency(total_price) + '\\n\\n';\n\n        // _txt = _txt + 'Deseja incluir mais itens?';\n\n        // const _options = [];\n        // _options.push({\n        //     text: 'Sim, mostre-me as opções',\n        //     data: {\n        //         type: 'confirmation_yes',\n        //         backTo: 'partial_confirmation',\n        //     },\n        //     event: 'ORDER_ASK_CATEGORY',\n        // });\n        // _options.push({\n        //     text: 'Não, confirmar o pedido',\n        //     data: {\n        //         type: 'confirmation_yes',\n        //         backTo: 'partial_confirmation',\n        //     },\n        //     event: 'ORDER_PIZZA_CONFIRMATION',\n        // });\n\n        // return {\n        //     type: 'replies',\n        //     text: _txt,\n        //     options: _options,\n        // };\n    }\n}\n\nexport const cancelPendingShowPartialOrder = async (pageId, userId) => {\n    // TODO: delete items with status 0;\n    const po = await getOrderPending({ pageId, userId, isComplete: true });\n\n    if (po.items && po.items.length > 0) {\n        await deletePendingItem(pageId, po.order.id);\n\n        for (let i = 0; i < po.items.length; i++) {\n            if (po.items[i].status === 0) {\n                po.items.splice(i, 1);\n            }\n        }\n    }\n    return await showPartialOrder(pageId, userId, po);\n}\n\nexport const showPartialOrder = async (pageId, userId, po) => {\n    if (!po)\n        po = await getOrderPending({ pageId, userId, isComplete: true });\n\n    await updateOrder({ pageId, userId, waitingFor: 'partial_confirmation', eraseSplit: true, undo: '' });\n\n    let total_price = 0;\n    let _txt = '𝗣𝗲𝗱𝗶𝗱𝗼:' + po.order.id + '\\n';\n\n    if (po.items && po.items.length > 0) {\n        _txt = _txt + 'Seguem os detalhes do seu pedido:\\n\\n';\n        for (const item of po.items) {\n            if (item.flavorId) {\n                let _txtQty = item.split > 1 ? item.qty + '/' + item.split : item.qty;\n\n                let _txtSize = '';\n                if (item.sizeId)\n                    _txtSize = item.size;\n\n                // _txt = _txt + `${item.category}: ${_txtQty} ${item.flavor} ${_txtSize} - ${formatAsCurrency(item.price)} \\n`;\n                _txt = _txt + `${_txtQty} ${item.flavor} ${_txtSize} - ${formatAsCurrency(item.price)} \\n`;\n            }\n            if (item.price)\n                total_price += item.price;\n        }\n        if (po.order.deliver_type && po.order.deliver_type === 'delivery') {\n            if (po.order.delivery_fee > 0) {\n                _txt += `*Taxa de Entrega:* ${formatAsCurrency(po.order.delivery_fee)}\\n`\n                total_price += po.order.delivery_fee;\n            }\n        }\n        _txt = _txt + '𝗧𝗼𝘁𝗮𝗹: ' + formatAsCurrency(total_price) + '\\n\\n';\n\n    } else {\n        _txt = _txt + 'Ainda não foram incluídos itens no seu pedido.\\n\\n';\n    }\n\n    _txt = _txt + 'O que deseja fazer?';\n\n    const _options = [];\n    _options.push({\n        text: `Incluir ${po.items && po.items.length > 0 ? 'mais' : ''} itens no pedido`,\n        event: 'ORDER_ASK_CATEGORY',\n    });\n    if (po.items && po.items.length > 0) {\n        _options.push({\n            text: '*Confirmar o pedido*',\n            data: {\n                type: 'confirmation_yes',\n                backTo: 'partial_confirmation',\n            },\n            event: 'ORDER_PIZZA_CONFIRMATION',\n        });\n        _options.push({\n            text: 'Remover algum item',\n            data: {\n                backTo: 'partial_confirmation',\n                option: 'remove_item',\n            },\n            event: 'ORDER_WANT_CHANGE',\n        });\n        _options.push({\n            text: 'Observações em algum item',\n            data: {\n                backTo: 'partial_confirmation',\n                option: 'change_item',\n            },\n            event: 'ORDER_WANT_CHANGE',\n        });\n    }\n    _options.push({\n        text: 'Voltar p/ Início',\n        data: 'stoporder_init',\n        event: 'STOP_ORDER_OPTIONS',\n    });\n\n    return {\n        type: 'replies',\n        text: _txt,\n        options: _options,\n    };\n}\n\n\n// export const showOrderOrNextItem = async (pageId, userId) => {\n//     const po = await getOrderPending({ pageId, userId, isComplete: true });\n\n//     if (po.order.originalSplit > 1 && po.order.currentItemSplit <= po.order.originalSplit) {\n//         return await askForFlavor(pageId, userId, 1, po);\n//     } else if (po.order.qty > 1 && po.order.currentItem < po.order.qty) {\n//         const nextItem = po.order.currentItem + 1;\n//         await updateOrder({ pageId, userId, waitingFor: 'size', currentItem: nextItem });\n//         return await askForSize(pageId, userId);\n//     } else {\n//         await updateOrder({ pageId, userId, waitingFor: 'partial_confirmation', backToConfirmation: null });\n\n//         let total_price = 0;\n//         let _txt = 'Seguem os detalhes do seu pedido:\\n';\n//         _txt = _txt + '𝗣𝗲𝗱𝗶𝗱𝗼:' + po.order.id + '\\n';\n//         for (let i = 0; i < po.items.length; i++) {\n//             const _item = po.items[i];\n//             if (_item.flavorId && _item.sizeId) {\n//                 let _txtQty = _item.split > 1 ? _item.qty + '/' + _item.split : _item.qty;\n//                 _txt = _txt + `${_txtQty} pizza ${_item.size} de ${_item.flavor}\\n`;\n//             } else if (_item.beverageId && _item.beverage) {\n//                 _txt = _txt + `1 ${_item.beverage}\\n`;\n//             }\n//             total_price += _item.price;\n//         }\n//         if (po.order.deliver_type && po.order.deliver_type === 'pickup')\n//             _txt += 'Cliente vem retirar.'\n//         else\n//             _txt = _txt + '𝗘𝗻𝗱𝗲𝗿𝗲𝗰̧𝗼 𝗱𝗲 𝗘𝗻𝘁𝗿𝗲𝗴𝗮: ' + po.order.address + '\\n';\n//         _txt = _txt + '𝗧𝗲𝗹𝗲𝗳𝗼𝗻𝗲: ' + po.order.phone + '\\n';\n//         _txt = _txt + '𝗧𝗼𝘁𝗮𝗹: ' + formatAsCurrency(total_price) + '\\n';\n//         _txt = _txt + 'O pedido está correto?';\n\n//         const _options = [];\n//         _options.push({\n//             text: 'Sim',\n//             data: {\n//                 type: 'confirmation_yes',\n//                 backTo: 'partial_confirmation',\n//             },\n//             event: 'ORDER_PIZZA_CONFIRMATION',\n//         });\n//         _options.push({\n//             text: 'Não',\n//             data: {\n//                 type: 'confirmation_no',\n//                 backTo: 'partial_confirmation',\n//             },\n//             event: 'ORDER_PIZZA_CONFIRMATION',\n//         });\n\n//         return {\n//             type: 'replies',\n//             text: _txt,\n//             options: _options,\n//         };\n//     }\n// }\n\n\n/**\n * Used on Whatsapp\n * @param {*} pageId\n * @param {*} userId\n * @param {*} data\n */\nexport const showFlavorCheckItem = async (pageId, userId, data) => {\n    const prevAnswer = await showFlavor(pageId, userId, data);\n    const nextQuestion = await showOrderOrNextItem(pageId, userId);\n\n    nextQuestion.text = prevAnswer.text + '\\n\\n' + nextQuestion.text;\n    return nextQuestion;\n}\n\n\nexport const askForPaymentType = async (pageId, userId) => {\n    const _options = [];\n\n    const storeData = await getStoreData(pageId);\n    if (storeData.payment_types && storeData.payment_types.length > 0) {\n        for (let paymentType of storeData.payment_types) {\n            let _txt = paymentType.payment_type;\n            if (paymentType.surcharge_percent > 0) {\n                _txt += ` (Cobramos + ${paymentType.surcharge_percent}% no valor do pedido)`;\n            } else if (paymentType.surcharge_amount > 0) {\n                _txt += ` (Cobramos + ${formatAsCurrency(paymentType.surcharge_amount)} no valor do pedido)`;\n            }\n\n            _options.push({\n                text: _txt, data: {\n                    payment_type: paymentType.payment_type,\n                    surcharge_percent: paymentType.surcharge_percent,\n                    surcharge_amount: paymentType.surcharge_amount,\n                }, event: 'ORDER_PAYMENT_TYPE',\n            });\n        }\n    } else {\n        _options.push({\n            text: 'Dinheiro', data: {\n                payment_type: 'Dinheiro', surcharge_percent: 0, surcharge_amonut: 0,\n            }, event: 'ORDER_PAYMENT_TYPE',\n        });\n        _options.push({\n            text: 'Cartão', data: {\n                payment_type: 'Cartão', surcharge_percent: 0, surcharge_amount: 0,\n            }, event: 'ORDER_PAYMENT_TYPE',\n        });\n    }\n\n\n    await updateOrder({ pageId, userId, waitingFor: 'payment_type' });\n\n    return {\n        type: 'replies',\n        text: 'Qual a forma de pagamento?',\n        options: _options,\n    };\n}\n\nexport const showPaymentType = async (pageId, userId, data) => {\n    await updateOrder({\n        pageId, userId, paymentType: data.payment_type,\n        surcharge_percent: data.surcharge_percent, surcharge_amount: data.surcharge_amount,\n    });\n\n    let _txtPaymentType = data.payment_type;\n\n    return {\n        type: 'text',\n        text: '✅ ' + ' Forma de pagamento: ' + _txtPaymentType,\n    };\n}\n\nexport const askForPaymentChange = async (pageId, userId) => {\n    const _options = [];\n    _options.push({ text: 'Sim', data: 'payment_change_yes', event: 'ORDER_PAYMENT_CHANGE' });\n    _options.push({ text: 'Não', data: 'payment_change_no', event: 'ORDER_PAYMENT_CHANGE' });\n\n    await updateOrder({ pageId, userId, waitingFor: 'payment_change' });\n\n    return {\n        type: 'replies',\n        text: 'Precisa de troco?',\n        options: _options,\n    };\n}\n\n\n/**\n * Used on Whatsapp\n * @param {*} pageId\n * @param {*} userId\n * @param {*} data\n */\nexport const showPaymentTypeAskForPaymentChange = async (pageId, userId, data) => {\n    const prevAnswer = await showPaymentType(pageId, userId, data);\n    const nextQuestion = await askForPaymentChange(pageId, userId);\n\n    nextQuestion.text = prevAnswer.text + '\\n\\n' + nextQuestion.text;\n    return nextQuestion;\n}\n\nexport const showPaymentChange = async (pageId, userId, data) => {\n    await updateOrder({ pageId, userId, paymentChange: data });\n\n    let _txtPaymentChange = data === 'payment_change_yes'\n        ? 'Levaremos trocado'\n        : 'Não precisa de troco';\n\n    return {\n        type: 'text',\n        text: '✅ ' + _txtPaymentChange,\n    };\n}\n\nexport const askForComments = async (pageId, userId) => {\n    const _options = [];\n    _options.push({ text: 'Sim', data: 'comments_yes', event: 'ORDER_COMMENTS' });\n    _options.push({ text: 'Não', data: 'comments_no', event: 'ORDER_COMMENTS' });\n\n    await updateOrder({ pageId, userId, waitingFor: 'comments' });\n\n    return {\n        type: 'replies',\n        text: 'Quer enviar alguma observação sobre o pedido ou entrega?',\n        options: _options,\n    };\n}\n\nexport const showPaymentChangeAskForComments = async (pageId, userId, data) => {\n    const prevAnswer = await showPaymentChange(pageId, userId, data);\n    const nextQuestion = await askForComments(pageId, userId);\n\n    nextQuestion.text = prevAnswer.text + '\\n\\n' + nextQuestion.text;\n    return nextQuestion;\n}\n\n\nexport const askToTypeComments = async (pageID, userID, item) => {\n    let _txt;\n    if (item) {\n        await updateOrder({ pageId: pageID, userId: userID, waitingFor: 'typed_comments_item', waitingForData: item.id });\n        _txt = 'Diga o que gostaria de pedir: por ex. sem cebola ou ovos. Pode digitar:';\n    } else {\n        await updateOrder({ pageId: pageID, userId: userID, waitingFor: 'typed_comments' });\n        _txt = 'Digite as observações que você tem para a entrega ou pedido. Pode digitar!';\n    }\n    return {\n        type: 'text',\n        text: _txt,\n    }\n}\n\n\nexport const showComments = async (pageId, userId, text) => {\n    await updateOrder({ pageId, userId, comments: text });\n\n    let _txtComments = 'Observações para o pedido/entrega:\\n';\n    _txtComments += text;\n\n    return {\n        type: 'text',\n        text: '✅ ' + _txtComments,\n    };\n}\n\nexport const showFullOrder = async (pageId, userId) => {\n    // await updateOrder({ pageId, userId, waitingFor: 'full_confirmation', backToConfirmation: null });\n\n    const po = await getOrderPending({ pageId, userId, isComplete: true });\n\n    let total_price = 0;\n    let _txt = 'Seguem os detalhes do seu pedido:\\n\\n';\n\n    _txt = _txt + '𝗣𝗲𝗱𝗶𝗱𝗼: ' + po.order.id + '\\n';\n    for (const item of po.items) {\n        if (item.flavorId) {\n            let _txtQty = item.split > 1 ? item.qty + '/' + item.split : item.qty;\n            let _txtSize = item.sizeId ? item.size : '';\n            // _txt = _txt + `_${item.category}_: ${_txtQty} ${item.flavor}  ${_txtSize}\\n`;\n            _txt = _txt + `${_txtQty} ${item.flavor}  ${_txtSize}\\n`;\n            total_price += item.price;\n        }\n    }\n\n    if (po.order.deliver_type && po.order.deliver_type === 'pickup') {\n        _txt += 'Cliente retira.\\n'\n        if (po.order.store_address)\n            _txt += '📌 Nosso endereço: ' + po.order.store_address + '\\n';\n    } else {\n        _txt += '𝗘𝗻𝗱𝗲𝗿𝗲𝗰̧𝗼 𝗱𝗲 𝗘𝗻𝘁𝗿𝗲𝗴𝗮: ' + po.order.address + '\\n';\n\n        if (po.order.delivery_fee > 0) {\n            _txt += `𝗧𝗮𝘅𝗮 𝗱𝗲 𝗘𝗻𝘁𝗿𝗲𝗴𝗮: ${formatAsCurrency(po.order.delivery_fee)}\\n`\n            total_price += po.order.delivery_fee;\n        }\n    }\n\n    _txt = _txt + '𝗧𝗲𝗹𝗲𝗳𝗼𝗻𝗲: ' + po.order.phone + '\\n';\n    _txt = _txt + '𝗙𝗼𝗿𝗺𝗮 𝗱𝗲 𝗣𝗮𝗴𝗮𝗺𝗲𝗻𝘁𝗼: ' + po.order.payment_type + '\\n';\n\n    if (po.payment_change === 'payment_change_yes') {\n        _txt = _txt + '𝗟𝗲𝘃𝗮𝗿 𝗧𝗿𝗼𝗰𝗼? Sim \\n';\n    }\n\n    if (po.order.surcharge_percent > 0) {\n        _txt += `𝗧𝗮𝘅𝗮 𝗱𝗲 ${po.order.payment_type}: ${po.order.surcharge_percent * 100}%\\n`\n        total_price += total_price * po.order.surcharge_percent;\n    }\n\n    if (po.order.surcharge_amount > 0) {\n        _txt += `𝗧𝗮𝘅𝗮 𝗱𝗲 ${po.order.payment_type}: ${formatAsCurrency(po.order.surcharge_amount)}\\n`\n        total_price += po.order.surcharge_amount;\n    }\n\n    _txt = _txt + '𝗧𝗼𝘁𝗮𝗹: ' + formatAsCurrency(total_price) + '\\n';\n\n    let _txtComments = po.order.comments || 'Sem observações';\n    _txt = _txt + '𝗢𝗯𝘀𝗲𝗿𝘃𝗮𝗰̧𝗼̃𝗲𝘀: ' + _txtComments + '\\n';\n\n    return {\n        type: 'text',\n        text: _txt,\n    }\n\n    // the code below was used to ask for a final confirmation.\n    // _txt = _txt + 'Posso confirmar o pedido?';\n\n    // const _options = [];\n    // _options.push({\n    //     text: 'Sim',\n    //     data: {\n    //         type: 'confirmation_yes',\n    //         backTo: 'full_confirmation',\n    //     },\n    //     event: 'ORDER_CONFIRMATION',\n    // });\n    // _options.push({\n    //     text: 'Não',\n    //     data: {\n    //         type: 'confirmation_no',\n    //         backTo: 'full_confirmation',\n    //     },\n    //     event: 'ORDER_CONFIRMATION',\n    // });\n\n    // return {\n    //     type: 'replies',\n    //     text: _txt,\n    //     options: _options,\n    // };\n}\n\n/**\n * Used on Whatsapp\n * @param {*} pageId\n * @param {*} userId\n * @param {*} data\n */\nexport const showPaymentTypeAskForComments = async (pageId, userId, data) => {\n    const prevAnswer = await showPaymentType(pageId, userId, data);\n    const nextQuestion = await askForComments(pageId, userId);\n\n    nextQuestion.text = prevAnswer.text + '\\n\\n' + nextQuestion.text;\n    return nextQuestion;\n}\n\n/**\n * Used on Whatsapp\n * @param {*} pageId\n * @param {*} userId\n * @param {*} data\n */\nexport const showFullOrderConfirmOrder = async (pageId, userId, data) => {\n    if (data && data !== 'comments_no')\n        await showComments(pageId, userId, data);\n    // const nextQuestion = await showFullOrder(pageId, userId);\n\n    const prevAnswer = await showFullOrder(pageId, userId);\n    const nextAnswer = await confirmOrder(pageId, userId);\n\n    nextAnswer.text = prevAnswer.text + '\\n\\n' + nextAnswer.text;\n    return nextAnswer;\n}\n\nexport const confirmOrder = async (pageId, userId) => {\n    await updateOrder({ pageId, userId, confirmOrder: true, calcTotal: true });\n\n    return {\n        type: 'text',\n        text: '✅ Pedido Confirmado!',\n    };\n}\n\nexport const askForChangeOrder = async (pageId, userId, data) => {\n    let confirmStep;\n    if (data && data.hasOwnProperty('backTo')) {\n        confirmStep = data.backTo;\n    }\n\n    if (confirmStep) {\n        await updateOrder({ pageId, userId, waitingFor: 'change_order', backToConfirmation: confirmStep });\n    } else {\n        await updateOrder({ pageId, userId, waitingFor: 'change_order' });\n    }\n\n    let _txt = 'O que você gostaria de fazer com o seu pedido?';\n\n    const _options = [];\n    _options.push({ text: 'Mudar pedido', data: 'changeOrder', event: 'ORDER_WANT_CHANGE' });\n    _options.push({ text: 'Mudar endereço', data: 'change_address', event: 'ORDER_CHANGE' });\n\n    if (confirmStep) {\n        // confirmStep can be 'partial_confirmation' or 'full_confirmation'\n        const _evt = confirmStep === 'partial_confirmation'\n            ? 'ORDER_PIZZA_CONFIRMATION'\n            : 'ORDER_CONFIRMATION';\n\n        _options.push({\n            text: 'Confirmar.',\n            data: { type: 'confirmation_yes', backTo: confirmStep },\n            event: _evt,\n        });\n    }\n\n    return {\n        type: 'replies',\n        text: _txt,\n        options: _options,\n    };\n}\n\nexport const askForOptionsToChange = async (pageId, userId, item) => {\n    try {\n        let _txt = 'Ok, o que você gostaria de fazer?';\n\n        const _options = [];\n        _options.push({ text: 'Mandar observação para esse item', data: item, event: 'ORDER_CHANGE_ITEM' });\n        _options.push({ text: 'Cancelar/Remover', data: item, event: 'ORDER_CANCEL_ITEM' });\n\n        return {\n            type: 'replies',\n            text: _txt,\n            options: _options,\n        };\n    } catch (askForOptionsToChangeErr) {\n        console.error({ askForOptionsToChangeErr });\n        throw askForOptionsToChangeErr;\n    }\n}\n\nexport const askForSpecificItem = async (pageId, userId, data) => {\n    const pendingOrder = await getOrderPending({ pageId, userId, isComplete: true });\n    if (pendingOrder.items && pendingOrder.items.length > 1) {\n\n        const _options = [];\n        let _itemId = 0;\n        for (let item of pendingOrder.items) {\n            if (item.itemId !== _itemId) {\n                let _txt;\n                if (item.size && item.flavor) {\n                    let _sizeSplit = `${item.size}`;\n                    if (item.split && item.split > 1) {\n                        if (item.category.toUpperCase().indexOf('PIZZA') > -1)\n                            _sizeSplit = 'Pizza ' + _sizeSplit;\n                        _sizeSplit = _sizeSplit + ` ${item.split} Sabores`;\n                    } else\n                        _sizeSplit = item.flavor + ' ' + _sizeSplit;\n\n                    _txt = `${_sizeSplit}`;\n                } else {\n                    _txt = item.flavor;\n                }\n\n                if (_txt) {\n                    if (data && data.option === 'change_item') {\n                        _options.push({ text: _txt, data: item, event: 'ORDER_CHANGE_ITEM' });\n                    } else {\n                        _options.push({ text: _txt, data: item, event: 'ORDER_CANCEL_ITEM' });\n                    }\n                }\n\n                _itemId = item.itemId;\n            }\n        }\n\n        let _txtHead = 'Escolha qual dos itens deseja ';\n        if (data && data.option === 'change_item')\n            _txtHead = _txtHead + 'alterar:';\n        else\n            _txtHead = _txtHead + 'remover:';\n\n\n        return {\n            type: 'replies',\n            text: _txtHead,\n            options: _options,\n        };\n    } else {\n        await updateOrder({ pageId, userId, completeItem: false });\n        return await askForOptionsToChange(pageId, userId, pendingOrder.items[0]);\n    }\n}\n\n/**\n *\n * @param {*} pageId\n * @param {*} userId\n */\nexport const askForWantBeverage = async (pageId, userId) => {\n    updateOrder({ pageId, userId, waitingFor: 'want_beverage' });\n\n    const pendingOrder = await getOrderPending({ pageId, userId, isComplete: false });\n\n    const noBeverage = pendingOrder.order.no_beverage;\n\n    if (typeof noBeverage === 'undefined') {\n\n        let _txt = 'Gostaria de algo para beber?';\n\n        const _options = [];\n        _options.push({ text: 'Sim', data: 'beverage_yes', event: 'ORDER_CONFIRM_BEVERAGE' });\n        _options.push({ text: 'Não', data: 'beverage_no', event: 'ORDER_CONFIRM_BEVERAGE' });\n        return {\n            type: 'replies',\n            text: _txt,\n            options: _options,\n        };\n    } else {\n        return showFullOrder(pageId, userId);\n    }\n}\n/**\n *\n * @param {*} pageId\n * @param {*} userId\n * @param {*} multiple\n */\nexport const askForBeverages = async (pageId, userId, multiple) => {\n    await updateOrder({ pageId, userId, waitingFor: 'beverage', noBeverage: false });\n\n    const beveragesArr = await getBeverages(pageId);\n    let _rangeIni = (multiple - 1) * 4;\n    let _rangeEnd = multiple * 4;\n\n    const _options = [];\n    for (let i = _rangeIni; i < _rangeEnd; i++) {\n        if (beveragesArr[i]) {\n            const _bev = beveragesArr[i];\n            const _data = { id: _bev.id, beverage: _bev.name, price: _bev.price }\n            const buttons = { text: 'Quero', data: _data, event: 'ORDER_BEVERAGE' };\n\n            let _subtext = _bev.kind;\n            if (_bev.price) {\n                _subtext = _subtext.concat('\\n R$', _bev.price);\n            }\n            _options.push({ text: _bev.name, subtext: _subtext, buttons });\n        }\n    }\n    if ((beveragesArr.length + 1) > _rangeEnd) {\n        multiple++;\n        const buttonsOpt = {\n            text: '+ Opções',\n            data: { option: 'beverages_more', multiple: multiple },\n            event: 'ORDER_BEVERAGE',\n        };\n        _options.push({\n            text: 'Clique aqui p/ ver + opções',\n            buttons: buttonsOpt,\n            isOnlyButtons: true,\n        });\n    } else {\n        const _data = { option: 'beverages_cancel' }\n        const buttons = { text: 'Sem bebida', data: _data, event: 'ORDER_BEVERAGE' };\n        let _subtext = 'Se não encontrou, selecione \"Sem bebida\"';\n        _options.push({ text: 'Sem bebida', subtext: _subtext, buttons });\n    }\n\n    return {\n        type: 'fulllist',\n        text: 'Selecione uma bebida:',\n        options: _options,\n    };\n}\n\n/**\n * Show that user did not want beverage and update order with this info.\n * @param {*} pageId\n * @param {*} userId\n * @param {*} data\n */\nexport const showNoBeverage = async (pageId, userId, data) => {\n    await updateOrder({ pageId, userId, noBeverage: true, waitingFor: 'confirm' });\n\n    return { type: 'text', text: '❌ ' + ' Sem bebida para o seu pedido. ' };\n}\n\n/**\n * Show the chosen beverage.\n * @param {*} pageId\n * @param {*} userId\n * @param {*} data\n */\nexport const showBeverage = async (pageId, userId, data) => {\n    await updateOrder({ pageId, userId, beverageId: data.id, beveragePrice: data.price, completeItem: true, noBeverage: false, waitingFor: 'full_confirmation', calcTotal: true });\n\n    return {\n        type: 'text',\n        text: '✅ ' + '1 Bebida: ' + data.beverage,\n    }\n}\n\n/**\n * Used on Whatsapp\n * @param {*} pageId\n * @param {*} userId\n * @param {*} data\n */\nexport const showBeverageAskForPaymentType = async (pageId, userId, data) => {\n    const prevAnswer = await showBeverage(pageId, userId, data);\n    const nextQuestion = await askForPaymentType(pageId, userId);\n\n    nextQuestion.text = prevAnswer.text + '\\n\\n' + nextQuestion.text;\n    return nextQuestion;\n}\n\n/**\n * Used on Whatsapp\n * @param {*} pageId\n * @param {*} userId\n * @param {*} data\n */\nexport const showNoBeverageAskForPaymentType = async (pageId, userId, data) => {\n    const prevAnswer = await showNoBeverage(pageId, userId, data);\n    const nextQuestion = await askForPaymentType(pageId, userId);\n\n    nextQuestion.text = prevAnswer.text + '\\n\\n' + nextQuestion.text;\n    return nextQuestion;\n}\n\n/**\n * Cancel the selected item, reorder the itemIds and askForSize\n * @param {*} pageId\n * @param {*} userId\n * @param {*} itemId\n */\nexport const changeItem = async (pageId, userId, item) => {\n    return askToTypeComments(pageId, userId, item);\n}\n\nexport const showCommentsItem = async (pageId, userId, data) => {\n    const po = await getOrderPending({ pageId, userId, isComplete: false });\n\n    if (po && po.order && po.order.waitingFor === 'typed_comments_item') {\n        // without await to run later.\n        updateItemDirect(pageId, po.order.id, po.order.waitingForData, data);\n    }\n\n    return await showPartialOrder(pageId, userId);\n}\n\n\nexport const cancelItem = async (pageId, userId, item) => {\n    const po = await getOrderPending({ pageId, userId, isComplete: false });\n    const result1 = await deleteItem(pageId, po.order.id, item.itemId);\n    console.info('cancelItem:', result1);\n    // if (result1) {\n    if (po.order.backToConfirmation === 'full_confirmation') {\n        return await showFullOrder(pageId, userId);\n    } else\n        return await showPartialOrder(pageId, userId);\n    // }\n}\n\n\nexport const updateItemAskOptions = async (pageId, userId, item) => {\n    // const item = await updateStatusSpecificItem(objectId, 0);\n    return await askForOptionsToChange(pageId, userId, item);\n}\n\nexport const sendShippingNotification = async (pageId, userId, orderId) => {\n    const { accessToken } = await getOnePageToken(pageId);\n\n    const _txt = 'O seu pedido número ' + orderId + ' acabou de sair para entrega. Bom apetite!';\n\n    const out = new Elements();\n    out.add({ text: _txt });\n    await Bot.send_message_tag(accessToken, userId, out);\n}\n\nexport const sendRejectionNotification = async (pageId, userId, orderId, rejectionExplanation) => {\n    const { accessToken } = await getOnePageToken(pageId);\n\n    const _txt = 'Infelizmente não poderemos atender o seu pedido número '\n        + orderId\n        + '. Segue o motivo: '\n        + rejectionExplanation;\n\n    const out = new Elements();\n    out.add({ text: _txt });\n    await Bot.send_message_tag(accessToken, userId, out);\n}\n\n/**\n * Delete the pending order and shows the Main Menu.\n * @param {*} pageId\n * @param {*} userId\n */\nexport const cancelPendingOrder = async (pageId, userId) => {\n    await cancelOrder({ pageId, userId });\n\n    const out = await sendMainMenu();\n    out.text = '❌ Pedido Cancelado!' + '\\n\\n' + out.text;\n\n    return out;\n}\n\nexport const showDeliverAskForCategory = async (pageId, userId, data, user, source) => {\n    const prevAnswer = await showDeliver(pageId, userId, data, user, source);\n    const nextQuestion = await askForCategory(pageId, userId);\n\n    nextQuestion.text = prevAnswer.text + '\\n\\n' + nextQuestion.text;\n    return nextQuestion;\n}\n\n\nexport const showAddressAskForCategory = async (pageId, userId, addrData, source) => {\n    const prevAnswer = await showAddress(pageId, userId, addrData, source);\n    const nextQuestion = await askForCategory(pageId, userId);\n\n    nextQuestion.text = prevAnswer.text + '\\n\\n' + nextQuestion.text;\n    return nextQuestion;\n}\n\n/**\n * \n * @param {*} pageId\n * @param {*} userId\n * @param {*} split: if true, only show categories that are marked 'is_pizza'.\n * Show only categories with split to allow user mix categories in same pizza.\n */\nexport const askForCategory = async (pageId, userId, split) => {\n    await updateOrder({ pageId, userId, waitingFor: 'category', waitingForData: split });\n\n    const categories = await getCategories(pageId);\n\n    let _txt = '';\n    if (split) {\n        _txt = `Para escolher o ${split}o. sabor, escolha a categoria:\\n`\n    } else {\n        _txt = 'Selecione uma categoria:';\n    }\n\n    const _options = [];\n    for (let item of categories) {\n        if (split && !item.is_pizza)\n            continue;\n\n        const _data = { id: item.id, name: item.name }\n        const buttons = { text: 'Quero', data: _data, event: 'ORDER_CATEGORY' };\n\n        _options.push({ text: item.name, subtext: item.name, buttons });\n    }\n\n    const buttons = { text: 'Voltar', data: 'partial_confirmation', event: 'ORDER_PARTIAL_CONFIRMATION' };\n    _options.push({ text: 'Voltar para o pedido', subtext: 'Voltar para o pedido', buttons });\n\n    return {\n        type: 'list',\n        text: _txt,\n        options: _options,\n    }\n}\n\nexport const showCategory = async (pageId, userId, data) => {\n    await updateOrder({ pageId, userId, categoryId: data.id, eraseSize: true });\n\n    return {\n        type: 'text',\n        text: '✅ ' + 'Categoria: ' + data.name,\n    }\n}\n\n\nexport const showCategoryAskForSize = async (pageId, userId, data) => {\n    const prevAnswer = await showCategory(pageId, userId, data);\n    const nextQuestion = await askForSizeCat(pageId, userId, data.id);\n\n    nextQuestion.text = prevAnswer.text + '\\n\\n' + nextQuestion.text;\n    return nextQuestion;\n}\n\nexport const askForSizeCat = async (pageId, userId, categoryId) => {\n    const po = await getOrderPending({ pageId, userId, isComplete: false });\n\n    if (!categoryId)\n        categoryId = po.order.currentItemCategory;\n\n    // User is spliting the pizza into more than one category\n    if (po.order.originalSplit > 1 && po.order.currentItemSplit <= po.order.originalSplit) {\n        return askForFlavor(pageId, userId, 1, po);\n    } else {\n\n        const category = await getCategory(pageId, categoryId);\n\n        if (category.price_by_size) {\n            const sizesWithPricing = await getPricingSizing(pageId, categoryId); // only sizes with pricing\n\n            // only 1 size priced, bot IS NOT ASKS FOR THAT.\n            if (sizesWithPricing.length === 1) {\n                const size = await getSize(pageId, sizesWithPricing[0]);\n                const sizeData = {\n                    id: size.id,\n                    size: size.size,\n                }\n                // Update the order with the unique size and checkSplit\n                return showSizeCheckSplit(pageId, userId, sizeData);\n            } else {\n                // Without await, to run later\n                updateOrder({ pageId, userId, waitingFor: 'size' });\n\n                const _text = 'Selecione o tamanho:';\n\n                const _options = [];\n                const sizes = await getSizes(pageId, sizesWithPricing);\n\n                for (let i = 0; i < sizes.length; i++) {\n                    const _data = { id: sizes[i].id, size: sizes[i].size, split: sizes[i].split };\n                    _options.push({ text: sizes[i].size, data: _data, event: 'ORDER_SIZE' });\n                }\n\n                return {\n                    type: 'replies',\n                    text: _text,\n                    options: _options,\n                }\n            }\n        } else {\n            return await askForFlavor(pageId, userId, 1);\n        }\n    }\n}\n"],"file":"botController.js"}