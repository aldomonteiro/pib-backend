{"version":3,"sources":["../../../src/api/bot/show_cardapio.js"],"names":["MSG_GENERAL_ERROR","getCardapio","pageID","pricingArray","flavorArray","kinds","replyText","String","currentKind","pricing","kind","flavorByKind","filter","value","kindName","e","id","name","size","price"],"mappings":";;;;;;;AAAA;;AAIA;;AACA;;;;;;AAGA,IAAMA,iBAAiB,GAAG,yCAA1B;;AAEA,IAAMC,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACW,6CAAoBA,MAApB,CADX;;AAAA;AACVC,YAAAA,YADU;AAAA;AAAA,mBAEU,8CAAsBD,MAAtB,CAFV;;AAAA;AAEVE,YAAAA,WAFU;AAGVC,YAAAA,KAHU,GAGF,0BAHE;AAIZC,YAAAA,SAJY,GAIA,IAAIC,MAAJ,EAJA;;AAKhB,gBAAIH,WAAJ,EAAiB;AAAA;AACbE,gBAAAA,SAAS,GAAG,2BAAZ;AACA,oBAAIE,WAAW,GAAG,EAAlB;AAFa;AAAA;AAAA;;AAAA;AAGb,uCAAsBL,YAAtB,8HAAoC;AAAA,wBAAzBM,OAAyB;;AAChC,wBAAID,WAAW,KAAKC,OAAO,CAACC,IAA5B,EAAkC;AAC9B,0BAAIF,WAAW,KAAK,EAApB,EAAwB;AACpB,4BAAIG,aAAY,GAAGP,WAAW,CAACQ,MAAZ,CAAmB,UAAAC,KAAK;AAAA,iCAAIA,KAAK,CAACH,IAAN,KAAeF,WAAnB;AAAA,yBAAxB,CAAnB;;AACAF,wBAAAA,SAAS,GAAGA,SAAS,GAAG,IAAZ,GAAmB,8CAAsBK,aAAtB,CAA/B;AACH;;AACDH,sBAAAA,WAAW,GAAGC,OAAO,CAACC,IAAtB;AAEA,0BAAMI,QAAQ,GAAGT,KAAK,CAACO,MAAN,CAAa,UAAAG,CAAC;AAAA,+BAAIA,CAAC,CAACC,EAAF,KAASR,WAAb;AAAA,uBAAd,EAAwC,CAAxC,EAA2CS,IAA5D;AACAX,sBAAAA,SAAS,GAAGA,SAAS,GAAG,YAAZ,GAA2BQ,QAA3B,GAAsC,IAAlD;AACH;;AACDR,oBAAAA,SAAS,GAAGA,SAAS,GAAGG,OAAO,CAACS,IAApB,GAA2B,QAA3B,GAAsCT,OAAO,CAACU,KAA9C,GAAsD,IAAlE;AACH,mBAfY,CAgBb;;AAhBa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBb,oBAAIX,WAAW,KAAK,EAApB,EAAwB;AACpB,sBAAIG,YAAY,GAAGP,WAAW,CAACQ,MAAZ,CAAmB,UAAAC,KAAK;AAAA,2BAAIA,KAAK,CAACH,IAAN,KAAeF,WAAnB;AAAA,mBAAxB,CAAnB;AACAF,kBAAAA,SAAS,GAAGA,SAAS,GAAG,IAAZ,GAAmB,8CAAsBK,YAAtB,CAA/B;AACH;AApBY;AAqBhB,aArBD,MAqBO;AACHL,cAAAA,SAAS,GAAGN,iBAAZ;AACH;;AA5Be,6CA6BTM,SA7BS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXL,WAAW;AAAA;AAAA;AAAA,GAAjB;;eAgCeA,W","sourcesContent":["import {\n    getFlavorsAndToppings,\n    inputCardapioReplyMsg,\n} from \"./actionsController\";\nimport { getPricingsWithSize } from \"../controllers/pricingsController\";\nimport { choices_kinds } from '../util/util'\n\n\nconst MSG_GENERAL_ERROR = 'Ops, estamos com um probleminha técnico';\n\nconst getCardapio = async (pageID) => {\n    const pricingArray = await getPricingsWithSize(pageID);\n    const flavorArray = await getFlavorsAndToppings(pageID);\n    const kinds = choices_kinds();\n    var replyText = new String();\n    if (flavorArray) {\n        replyText = 'Segue o nosso cardápio:\\n';\n        let currentKind = '';\n        for (const pricing of pricingArray) {\n            if (currentKind !== pricing.kind) {\n                if (currentKind !== '') {\n                    let flavorByKind = flavorArray.filter(value => value.kind === currentKind);\n                    replyText = replyText + '\\n' + inputCardapioReplyMsg(flavorByKind);\n                }\n                currentKind = pricing.kind;\n\n                const kindName = kinds.filter(e => e.id === currentKind)[0].name;\n                replyText = replyText + '\\n*Tipo:* ' + kindName + '\\n';\n            }\n            replyText = replyText + pricing.size + ' - R$ ' + pricing.price + '\\n';\n        }\n        // the last kind\n        if (currentKind !== '') {\n            let flavorByKind = flavorArray.filter(value => value.kind === currentKind);\n            replyText = replyText + '\\n' + inputCardapioReplyMsg(flavorByKind);\n        }\n    } else {\n        replyText = MSG_GENERAL_ERROR;\n    }\n    return replyText;\n}\n\nexport default getCardapio;\n"],"file":"show_cardapio.js"}