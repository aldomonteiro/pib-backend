{"version":3,"sources":["../../../src/api/controllers/itemsController.js"],"names":["ITEMSTATUS_PENDING","ITEMSTATUS_COMPLETED","updateItem","orderData","orderId","userId","pageId","qty","sizeId","flavorId","beverageId","beveragePrice","completeItem","split","_searchStatus","Items","findOne","status","exec","item","price","pricing","_qty","originalSplit","save","find","select","sort","limit","resultLastId","itemId","length","id","record","updateStatusSpecificItem","objectId","_id","mongoose","Types","ObjectId","getItems","completeItems","queryAuxTables","items","i","flavor","size","beverage","name","getItemsTotal","_total"],"mappings":"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","sourcesContent":["import mongoose from 'mongoose';\nimport Items from '../models/items';\nimport { getFlavor } from './flavorsController';\nimport { getOnePricingByFlavor } from './pricingsController';\nimport { getSize } from './sizesController';\nimport { getBeverage } from './beveragesController';\n\n\nconst ITEMSTATUS_PENDING = 0;\nconst ITEMSTATUS_COMPLETED = 1;\n\nexport const updateItem = async orderData => {\n    const { orderId, userId, pageId,\n        qty, sizeId, flavorId,\n        beverageId, beveragePrice, completeItem, split } = orderData;\n\n    if (qty || sizeId || flavorId || beverageId || typeof completeItem === 'boolean') {\n        let _searchStatus = ITEMSTATUS_PENDING;\n        // Received a completeItem = false from botController, so,\n        // the search is for a completed item.\n        if (typeof completeItem === 'boolean' && !completeItem)\n            _searchStatus = ITEMSTATUS_COMPLETED;\n\n        const item = await Items.findOne({ orderId: orderId, userId: userId, pageId: pageId, status: _searchStatus }).exec();\n        if (item) {\n            if (qty) item.qty = qty;\n            if (sizeId) item.sizeId = sizeId;\n            if (flavorId) item.flavorId = flavorId;\n            if (beverageId) {\n                item.qty = 1;\n                item.beverageId = beverageId;\n                item.price = beveragePrice;\n            }\n            if (split) item.split = split;\n            if (typeof completeItem === 'boolean')\n                item.status = completeItem === true ? ITEMSTATUS_COMPLETED : ITEMSTATUS_PENDING;\n\n            if (item.sizeId && item.flavorId) {\n                const pricing = await getOnePricingByFlavor(pageId, item.sizeId, item.flavorId);\n                if (pricing) {\n                    const _qty = item.qty && item.qty > 0 ? item.qty : 1;\n                    item.price = (pricing.price * _qty)\n                    if (item.split && item.split > 1) {\n                        item.price = item.price / item.split;\n                    }\n                }\n            }\n\n            if (qty || sizeId || flavorId || split || beverageId || originalSplit || typeof completeItem === 'boolean')\n                await item.save();\n        }\n        else {\n            let resultLastId = await Items.find({ pageId: pageId, orderId: orderId }).select('id').sort('-id').limit(1).exec();\n            let itemId = 1;\n            if (resultLastId && resultLastId.length)\n                itemId = resultLastId[0].id + 1;\n\n            let price = 0;\n            if (beverageId && beveragePrice) {\n                price = beveragePrice;\n            }\n\n            const record = new Items({\n                id: itemId,\n                orderId: orderId,\n                userId: userId,\n                pageId: pageId,\n                qty: qty,\n                sizeId: sizeId,\n                flavorId: flavorId,\n                beverageId: beverageId,\n                price: price,\n                status: ITEMSTATUS_PENDING,\n            });\n            await record.save();\n        }\n    }\n}\n\nexport const updateStatusSpecificItem = async (objectId, status) => {\n    const item = await Items.findOne({ _id: mongoose.Types.ObjectId(objectId) }).exec();\n    if (item) {\n        item.status = status;\n        await item.save();\n    }\n}\n\n/**\n * Return all items from an orderId+pageId with flavor and size.\n * completeItems=true query aux tables. default is true.\n * completeItems=false do not query aux tables.\n * @param {*} orderData \n */\nexport const getItems = async orderData => {\n    const { orderId, pageId, completeItems } = orderData;\n\n    let queryAuxTables = true;\n    if (typeof completeItems !== 'undefined') {\n        queryAuxTables = completeItems;\n    }\n\n    const items = await Items.find({ orderId: orderId, pageId: pageId }).exec();\n    if (items && items.length) {\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].flavorId && items[i].flavorId > 0) {\n                if (queryAuxTables) {\n                    const flavor = await getFlavor(pageId, items[i].flavorId);\n                    if (flavor)\n                        items[i].flavor = flavor.flavor;\n                }\n            }\n\n            if (items[i].sizeId && items[i].sizeId > 0) {\n                if (queryAuxTables) {\n                    const size = await getSize(pageId, items[i].sizeId);\n                    if (size)\n                        items[i].size = size.size;\n                }\n            }\n\n            if (items[i].beverageId && items[i].beverageId > 0) {\n                if (queryAuxTables) {\n                    const beverage = await getBeverage(pageId, items[i].beverageId);\n                    if (beverage)\n                        items[i].beverage = beverage.name;\n                }\n            }\n        }\n        return items;\n    } else {\n        return null;\n    }\n}\n\n/**\n * Calculate total price of an orderId+pageId\n * @param {*} orderData \n */\nexport const getItemsTotal = async orderData => {\n    const { orderId, pageId } = orderData;\n    const items = await getItems({ orderId, pageId, completeItems: false });\n\n    let _total = 0;\n\n    if (items && items.length) {\n        for (const item of items) {\n            _total += item.price ? item.price : 0;\n        }\n    }\n\n    return _total;\n}\n\n"],"file":"itemsController.js"}