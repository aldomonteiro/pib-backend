{"version":3,"sources":["../../../src/api/controllers/itemsController.js"],"names":["ITEMSTATUS_PENDING","ITEMSTATUS_COMPLETED","updateItem","orderData","orderId","userId","pageId","qty","sizeId","flavorId","completeItem","Items","findOne","status","exec","item","save","record","getItems","find","items","length","i","flavor","size"],"mappings":"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","sourcesContent":["import Items from '../models/items';\nimport { getFlavor } from './flavorsController';\nimport { getSize } from './sizesController';\n\n\nconst ITEMSTATUS_PENDING = 0;\nconst ITEMSTATUS_COMPLETED = 1;\n\nexport const updateItem = async orderData => {\n    const { orderId, userId, pageId, qty, sizeId, flavorId, completeItem } = orderData;\n\n    if (qty || sizeId || flavorId) {\n        const item = await Items.findOne({ orderId: orderId, status: ITEMSTATUS_PENDING }).exec();\n        if (item) {\n            if (qty) item.qty = qty;\n            if (sizeId) item.sizeId = sizeId;\n            if (flavorId) item.flavorId = flavorId;\n            if (completeItem) item.status = ITEMSTATUS_COMPLETED;\n\n            if (qty || sizeId || flavorId || completeItem)\n                await item.save();\n        }\n        else {\n            const record = new Items({\n                orderId: orderId,\n                userId: userId,\n                pageId: pageId,\n                qty: qty,\n                sizeId: sizeId,\n                flavorId: flavorId,\n                status: ITEMSTATUS_PENDING,\n            });\n            await record.save();\n        }\n    }\n}\n\nexport const getItems = async orderData => {\n    const { orderId, pageId } = orderData;\n\n    const items = await Items.find({ orderId: orderId, pageId: pageId }).exec();\n    if (items && items.length) {\n        for (let i = 0; i < items.length; i++) {\n            const flavor = await getFlavor(pageId, items[i].flavorId);\n            items[i].flavor = flavor.flavor;\n\n            const size = await getSize(pageId, items[i].sizeId);\n            items[i].size = size.size;\n        }\n        return items;\n    } else {\n        return null;\n    }\n}\n"],"file":"itemsController.js"}