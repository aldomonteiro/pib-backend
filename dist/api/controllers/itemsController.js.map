{"version":3,"sources":["../../../src/api/controllers/itemsController.js"],"names":["ITEMSTATUS_PENDING","ITEMSTATUS_COMPLETED","updateItem","orderData","orderId","userId","pageId","qty","sizeId","flavorId","completeItem","_searchStatus","Items","findOne","status","exec","item","save","record","updateStatusSpecificItem","objectId","_id","mongoose","Types","ObjectId","getItems","find","items","length","i","flavor","size"],"mappings":"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","sourcesContent":["import Items from '../models/items';\nimport mongoose from 'mongoose';\nimport { getFlavor } from './flavorsController';\nimport { getSize } from './sizesController';\n\n\nconst ITEMSTATUS_PENDING = 0;\nconst ITEMSTATUS_COMPLETED = 1;\n\nexport const updateItem = async orderData => {\n    const { orderId, userId, pageId, qty, sizeId, flavorId, completeItem } = orderData;\n\n    if (qty || sizeId || flavorId || typeof completeItem === 'boolean') {\n        let _searchStatus = ITEMSTATUS_PENDING;\n        // Received a completeItem = false from botController, so,\n        // the search is for a completed item.\n        if (typeof completeItem === 'boolean' && !completeItem)\n            _searchStatus = ITEMSTATUS_COMPLETED;\n\n        const item = await Items.findOne({ orderId: orderId, userId: userId, pageId: pageId, status: _searchStatus }).exec();\n        if (item) {\n            if (qty) item.qty = qty;\n            if (sizeId) item.sizeId = sizeId;\n            if (flavorId) item.flavorId = flavorId;\n            if (typeof completeItem === 'boolean')\n                item.status = completeItem === true ? ITEMSTATUS_COMPLETED : ITEMSTATUS_PENDING;\n\n            if (qty || sizeId || flavorId || typeof completeItem === 'boolean')\n                await item.save();\n        }\n        else {\n            const record = new Items({\n                orderId: orderId,\n                userId: userId,\n                pageId: pageId,\n                qty: qty,\n                sizeId: sizeId,\n                flavorId: flavorId,\n                status: ITEMSTATUS_PENDING,\n            });\n            await record.save();\n        }\n    }\n}\n\nexport const updateStatusSpecificItem = async (objectId, status) => {\n    const item = await Items.findOne({ _id: mongoose.Types.ObjectId(objectId) }).exec();\n    if (item) {\n        item.status = status;\n        await item.save();\n    }\n}\n\nexport const getItems = async orderData => {\n    const { orderId, pageId } = orderData;\n\n    const items = await Items.find({ orderId: orderId, pageId: pageId }).exec();\n    if (items && items.length) {\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].flavorId && items[i].flavorId > 0) {\n                const flavor = await getFlavor(pageId, items[i].flavorId);\n                if (flavor)\n                    items[i].flavor = flavor.flavor;\n            }\n\n            if (items[i].sizeId && items[i].sizeId > 0) {\n                const size = await getSize(pageId, items[i].sizeId);\n                if (size)\n                    items[i].size = size.size;\n            }\n        }\n        return items;\n    } else {\n        return null;\n    }\n}\n"],"file":"itemsController.js"}