{"version":3,"sources":["../../../src/api/controllers/openingTimesController.js"],"names":["openingtimes_get_all","req","res","console","log","query","sortObj","sort","rangeObj","range","options","offset","limit","lean","leanWithId","currentUser","activePage","OpeningTimes","find","pageId","paginate","err","result","status","json","message","errmsg","setHeader","util","format","total","docs","openingtimes_get_one","params","id","findOne","store_id","doc","openingtimes_create","body","newRecord","sun_open","sun_close","mon_open","mon_close","tue_open","tue_close","wed_open","wed_close","thu_open","thu_close","fri_open","fri_close","sat_open","sat_close","hol_open","hol_close","save","then","catch","openingtimes_update","openingtimes_delete","findOneAndRemove","getOpeningTimes","pageID","exec"],"mappings":"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","sourcesContent":["import OpeningTimes from \"../models/openingtimes\";\nimport util from \"util\";\nimport { configSortQuery, configRangeQuery } from '../util/util';\n\n// List all records\n// TODO: use filters in the query req.query\nexport const openingtimes_get_all = (req, res) => {\n\n    console.log(\">>>> openingtimesController openingtimes_get_all <<<<\");\n    console.log(req.query);\n    console.log(\">>>> openingtimesController openingtimes_get_all <<<<\");\n\n    // Getting the sort from the requisition\n    var sortObj = configSortQuery(req.query.sort);\n    // Getting the range from the requisition\n    var rangeObj = configRangeQuery(req.query.range);\n\n    let options = {\n        offset: rangeObj['offset'],\n        limit: rangeObj['limit'],\n        sort: sortObj,\n        lean: true,\n        leanWithId: false,\n    };\n\n    var query = {};\n\n    if (req.currentUser.activePage) {\n        query = OpeningTimes.find({ pageId: req.currentUser.activePage });\n    }\n\n    OpeningTimes.paginate(query, options, (err, result) => {\n        if (err) {\n            res.status(500).json({ message: err.errmsg });\n        } else {\n            res.setHeader('Content-Range', util.format(\"openingtimes %d-%d/%d\", rangeObj['offset'], rangeObj['limit'], result.total));\n            res.status(200).json(result.docs);\n        }\n    });\n};\n\n// List one record by filtering by ID\nexport const openingtimes_get_one = (req, res) => {\n    if (req.params && req.params.id) {\n        // Filter based on the currentUser\n        const pageId = req.currentUser.activePage;\n\n        OpeningTimes.findOne({ pageId: pageId, store_id: req.params.store_id }, (err, doc) => {\n            if (err) {\n                res.status(500).json({ message: err.errmsg });\n            }\n            else {\n                res.status(200).json(doc);\n            }\n        });\n    }\n}\n\n// CREATE A NEW RECORD\nexport const openingtimes_create = (req, res) => {\n    if (req.body) {\n\n        const pageId = req.currentUser.activePage ? req.currentUser.activePage : null;\n\n        const newRecord = new OpeningTimes({\n            store_id: req.body.store_id,\n            pageId: pageId,\n            sun_open: req.body.sun_open,\n            sun_close: req.body.sun_close,\n            mon_open: req.body.mon_open,\n            mon_close: req.body.mon_close,\n            tue_open: req.body.tue_open,\n            tue_close: req.body.tue_close,\n            wed_open: req.body.tue_open, // wed_open\n            wed_close: req.body.tue_close, // wed_close\n            thu_open: req.body.tue_open,\n            thu_close: req.body.tue_close,\n            fri_open: req.body.tue_open,\n            fri_close: req.body.tue_close,\n            sat_open: req.body.tue_open,\n            sat_close: req.body.tue_close,\n            hol_open: req.body.tue_open,\n            hol_close: req.body.tue_close,\n        });\n\n        newRecord.save()\n            .then((result) => {\n                res.status(200).json(result);\n            })\n            .catch((err) => {\n                res.status(500).json({ message: err.errmsg });\n            });\n    }\n}\n\n// UPDATE\nexport const openingtimes_update = (req, res) => {\n    if (req.body && req.body.id) {\n\n        const pageId = req.currentUser.activePage;\n\n        OpeningTimes.findOne({ pageId: pageId, store_id: req.body.store_id }, (err, doc) => {\n            if (!err) {\n                doc.sun_open = req.body.sun_open;\n                doc.sun_close = req.body.sun_close;\n                doc.mon_open = req.body.mon_open;\n                doc.mon_close = req.body.mon_close;\n                doc.tue_open = req.body.tue_open;\n                doc.tue_close = req.body.tue_close;\n                doc.wed_open = req.body.tue_open; // wed_open\n                doc.wed_close = req.body.tue_close; // wed_close\n                doc.thu_open = req.body.tue_open;\n                doc.thu_close = req.body.tue_close;\n                doc.fri_open = req.body.tue_open;\n                doc.fri_close = req.body.tue_close;\n                doc.sat_open = req.body.tue_open;\n                doc.sat_close = req.body.tue_close;\n                doc.hol_open = req.body.tue_open;\n                doc.hol_close = req.body.tue_close;\n\n                doc.save((err, result) => {\n                    if (err) {\n                        res.status(500).json({ message: err.errmsg });\n                    } else {\n                        res.status(200).json(result);\n                    }\n                });\n            } else {\n                res.status(500).json({ message: err.errmsg });\n            }\n        });\n    }\n}\n\n// DELETE\nexport const openingtimes_delete = (req, res) => {\n\n    const pageId = req.currentUser.activePage;\n\n    OpeningTimes.findOneAndRemove({ pageId: pageId, store_id: req.params.store_id })\n        .then((result) => {\n            res.status(200).json(result);\n        })\n        .catch((err) => {\n            res.status(500).json({ message: err.errmsg });\n        });\n};\n\nexport const getOpeningTimes = async (pageID) => {\n    // TODO: if is there more than one Store?\n    var query = OpeningTimes.findOne({ pageId: pageID });\n    return await query.exec();\n}"],"file":"openingTimesController.js"}