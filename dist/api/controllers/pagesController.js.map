{"version":3,"sources":["../../../src/api/controllers/pagesController.js"],"names":["page_resources_get_all","req","res","sortObj","query","sort","name","rangeObj","range","queryObj","filter","filterObj","filterField","length","i","value","filterValues","Array","isArray","$in","currentUser","activePage","role","Page","find","exec","err","result","status","json","message","errmsg","_rangeIni","_rangeEnd","offset","limit","_totalCount","resultArray","push","setHeader","util","format","page_resources_get_one","params","id","findOne","doc","errMsg","page_resources_delete","console","info","pageID","getOnePageToken","accessToken","deleteFacebookFields","lastResult","unsubscribedApps","userID","error","findOneAndDelete","page_update","body","operation","picture","pictureUrl","page","setFacebookFields","greetingText","subscribedApps","activeBot","save","isNew","access_token","firstResponseText","User","user","pageUpdateError","pageId","facebookUrl","axios","post","get","data","result1","debugToken","Promise","resolve","marketing","reject","getOnePageData","getAllPages","pageArray","map","log","Object","keys","_greeting","headers","get_started","payload","greeting","locale","text","persistent_menu","composer_input_disabled","call_to_actions","title","type","JSON","stringify","event","url","webview_height_ratio","fields","sendPassThreadControl","source","recipient","target_app_id","metadata","passThreadError"],"mappings":"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mB;AAAA,+CAelBA,MAAM,CAACC,MAfW;;AAAA;AAAA;AAAA;AAiBzBqB,YAAAA,OAAO,CAACS,KAAR,CAAc;AAAE6D,cAAAA,eAAe;AAAjB,aAAd;AAjByB,+CAkBlB,IAlBkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAArBL,qBAAqB;AAAA;AAAA;AAAA,GAA3B,C,CAyBP;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["\nimport Page from '../models/pages';\nimport User from '../models/users';\nimport axios from 'axios';\nimport util from 'util';\nimport { configSortQuery, configRangeQuery, configFilterQueryMultiple } from '../util/util';\nimport { initialSetup } from './systemController';\nimport { deleteManyFlavors } from './flavorsController';\nimport { deleteManyCategories } from './categoriesController';\nimport { deleteManyCustomers } from './customersController';\nimport { deleteManyExtras } from './extrasController';\nimport { deleteManyItems } from './itemsController';\nimport { deleteManyOrders } from './ordersController';\nimport { deleteManyPricings } from './pricingsController';\nimport { deleteManySizes } from './sizesController';\nimport { deleteManyToppings } from './toppingsController';\nimport { deleteManyStores } from './storesController';\nimport { removeUserActivePage } from './usersController';\n\n// List all flavors\n// TODO: use filters in the query req.query\nexport const page_resources_get_all = async (req, res) => {\n\n    // Getting the sort from the requisition\n    let sortObj = req.query.sort ? configSortQuery(req.query.sort) : { name: 'ASC' };\n    // Getting the range from the requisition\n    let rangeObj = configRangeQuery(req.query.range);\n\n    let queryObj = {};\n    if (req.query.filter) {\n        const filterObj = configFilterQueryMultiple(req.query.filter);\n\n        if (filterObj && filterObj.filterField && filterObj.filterField.length) {\n            for (let i = 0; i < filterObj.filterField.length; i++) {\n                const filter = filterObj.filterField[i];\n                const value = filterObj.filterValues[i];\n                if (Array.isArray(value)) {\n                    queryObj[filter] = { $in: value };\n                } else\n                    queryObj[filter] = value;\n            }\n        }\n    }\n\n    if (req.currentUser.activePage) {\n        if (req.currentUser.role !== 'admin')\n            queryObj['id'] = req.currentUser.activePage;\n    }\n\n    Page.find(queryObj).sort(sortObj).exec((err, result) => {\n        if (err) {\n            res.status(500).json({ message: err.errmsg });\n        } else {\n            let _rangeIni = 0;\n            let _rangeEnd = result.length;\n            if (rangeObj) {\n                _rangeIni = rangeObj.offset <= result.length ? rangeObj.offset : result.length;\n                _rangeEnd = (rangeObj.offset + rangeObj.limit) <= result.length ? rangeObj.offset + rangeObj.limit : result.length;\n            }\n            let _totalCount = result.length;\n            let resultArray = [];\n            for (let i = _rangeIni; i < _rangeEnd; i++) {\n                resultArray.push(result[i])\n            }\n            res.setHeader('Content-Range', util.format('pages %d-%d/%d', _rangeIni, _rangeEnd, _totalCount));\n            res.status(200).json(resultArray);\n        }\n    });\n};\n\n// List one record by filtering by ID\nexport const page_resources_get_one = (req, res) => {\n    if (req.params && req.params.id) {\n\n        Page.findOne({ id: req.params.id }, (err, doc) => {\n            if (err) {\n                res.status(500).json({ message: err.errMsg });\n            }\n            else {\n                res.status(200).json(doc);\n            }\n        });\n    }\n}\n\n/**\n * Deactivate Bot and delete all related records\n * @param {*} req \n * @param {*} res \n */\nexport const page_resources_delete = async (req, res) => {\n    let lastResult;\n    try {\n        console.info('page_resources_delete:', req.params);\n\n        const pageID = req.params.id;\n        const { accessToken } = await getOnePageToken(pageID);\n\n        lastResult = await deleteFacebookFields(pageID, accessToken);\n\n        lastResult = await deleteManyItems(pageID);\n        lastResult = await deleteManyOrders(pageID);\n        lastResult = await deleteManyCustomers(pageID);\n        lastResult = await deleteManyExtras(pageID);\n        lastResult = await deleteManyFlavors(pageID);\n        lastResult = await deleteManyPricings(pageID);\n        lastResult = await deleteManySizes(pageID);\n        lastResult = await deleteManyStores(pageID);\n        lastResult = await deleteManyToppings(pageID);\n        lastResult = await deleteManyCategories(pageID);\n\n        lastResult = await unsubscribedApps(pageID, accessToken);\n        lastResult = await removeUserActivePage(req.currentUser.userID);\n        if (!lastResult) {\n            console.error(`User ${userID} was not found and removeUserActivePage failed`);\n        }\n        lastResult = await Page.findOneAndDelete({ id: pageID }).exec();\n        res.status(200).json(lastResult);\n    } catch (pageDeleteErr) {\n        console.info(lastResult);\n        console.error(pageDeleteErr);\n        res.status(500).json({ message: pageDeleteErr.message });\n    }\n}\n\n\n// Update or create a new page\nexport const page_update = async (req, res) => {\n    try {\n        const pageID = req.body.id;\n        const { operation, picture } = req.body;\n        const pictureUrl = picture ? picture.pictureUrl : null;\n\n        let page = await Page.findOne({ id: pageID }).exec();\n\n        if (page && operation === 'ACTIVATE') { // only deactivating the bot in the page\n            await setFacebookFields(pageID, page.accessToken, page.greetingText);\n            await subscribedApps(pageID, page.accessToken);\n            page.activeBot = true;\n            await page.save();\n            res.status(200).json(page);\n        }\n        else if (page && operation === 'DEACTIVATE') { // only deactivating the bot in the page\n            await deleteFacebookFields(pageID, page.accessToken);\n            await unsubscribedApps(pageID, page.accessToken);\n            page.activeBot = false;\n            await page.save();\n            res.status(200).json(page);\n        } else {\n            let isNew = false;\n            if (!page) {\n                page = new Page({\n                    id: pageID,\n                    name: req.body.name,\n                    userID: req.currentUser.userID,\n                    activeBot: false,\n                    pictureUrl: pictureUrl,\n                });\n                isNew = true;\n            }\n            if (req.body.access_token)\n                page.accessToken = req.body.access_token;\n            if (req.body.greetingText)\n                page.greetingText = req.body.greetingText;\n            if (req.body.firstResponseText)\n                page.firstResponseText = req.body.firstResponseText;\n            if (pictureUrl)\n                page.pictureUrl = pictureUrl;\n            // update ActivePage for the current user\n            if (req.currentUser) {\n                page.userID = req.currentUser.userID;\n                const user = await User.findOne({ userID: req.currentUser.userID }).exec();\n                if (user) {\n                    user.activePage = pageID;\n                    await user.save();\n                }\n            }\n\n            await page.save();\n\n            // if (isNew) {\n            page = await initialSetup(pageID);\n            // }\n            res.status(200).json(page);\n        }\n    } catch (pageUpdateError) {\n        console.error({ pageUpdateError });\n        res.status(500).json({ message: pageUpdateError.message });\n    }\n}\n\n/**\n * Subscribe the app to the page\n * @param {*} pageId \n * @param {*} accessToken \n */\nexport const subscribedApps = async (pageId, accessToken) => {\n\n    // https://graph.facebook.com/v3.1/{page-id}/subscribed_apps?access_token={}\n    const facebookUrl = `https://graph.facebook.com/v3.1/${pageId}/subscribed_apps?access_token=${accessToken}`\n\n    return await axios.post(facebookUrl);\n}\n\n/**\n * \n * @param {*} pageId \n * @param {*} accessToken \n */\nexport const unsubscribedApps = async (pageId, accessToken) => {\n\n    const facebookUrl = `https://graph.facebook.com/v3.1/${pageId}/subscribed_apps?access_token=${accessToken}`\n\n    const result = await axios.get(facebookUrl);\n    if (result.status === 200 && result.data && result.data.data && result.data.data.length > 0) {\n        console.info('unsubscribedApps found app:', result);\n        const result1 = await axios.delete(facebookUrl);\n        console.info('unsubscribedApps deleted app:', result1);\n        return result1;\n    } else {\n        return null;\n    }\n}\n\n\nexport const debugToken = async accessToken => {\n    const facebookUrl = `https://graph.facebook.com/v3.1/debug_token?input_token=${accessToken}`\n    return await axios.get(facebookUrl);\n}\n\n\n// used in botController.js\nexport const getOnePageToken = async (pageID) => {\n    const page = await Page.findOne({ id: pageID }).exec();\n    if (page && page.accessToken)\n        return Promise.resolve({ accessToken: page.accessToken, name: page.name, marketing: page.marketing });\n    else return Promise.reject();\n}\n\n/**\n * \n * @param {*} pageID \n * @return Page\n */\nexport const getOnePageData = async (pageID) => {\n    return await Page.findOne({ id: pageID }).exec();\n}\n\n\nexport const getAllPages = async () => {\n    let pageArray = [];\n    await Page.find({}, (err, result) => {\n        pageArray = result.map(doc => { return { 'pageID': doc.id, 'accessToken': doc.accessToken, 'name': doc.name } });\n    });\n    console.log('into getAllPages: ', Object.keys(pageArray).length);\n    return Promise.resolve(pageArray);\n}\n\nconst setFacebookFields = async (pageId, accessToken, _greeting) => {\n    const facebookUrl = `https://graph.facebook.com/v2.6/me/messenger_profile?access_token=${accessToken}`;\n    return await axios.post(facebookUrl, {\n        headers: { 'Content-Type': 'application/json' },\n        get_started: { payload: 'GET_STARTED' },\n        greeting: [\n            { locale: 'default', text: _greeting },\n            { locale: 'pt_BR', text: _greeting },\n            { locale: 'en_US', text: _greeting },\n        ],\n        persistent_menu: [\n            {\n                locale: 'default',\n                composer_input_disabled: false,\n                call_to_actions: [\n                    {\n                        title: '❓ Informações',\n                        type: 'nested',\n                        call_to_actions: [\n                            {\n                                title: '🍕 Cardápio',\n                                type: 'postback',\n                                payload: JSON.stringify({ data: 'CARDAPIO_PAYLOAD', event: 'MAIN-MENU' })\n                            },\n                            {\n                                title: '🕒 Horários',\n                                type: 'postback',\n                                payload: JSON.stringify({ data: 'HORARIO_PAYLOAD', event: 'MAIN-MENU' })\n                            }],\n                    },\n                    {\n                        title: '📨 Fazer Pedido',\n                        type: 'postback',\n                        payload: JSON.stringify({ data: 'PEDIDO_PAYLOAD', event: 'MAIN-MENU' })\n                    },\n                    {\n                        type: 'web_url',\n                        title: 'Powered by Pizzaibot',\n                        url: 'm.me/pizzaibot',\n                        webview_height_ratio: 'full'\n                    }\n\n                ]\n            }\n        ]\n    });\n}\n\nconst deleteFacebookFields = async (pageId, accessToken) => {\n    const facebookUrl = `https://graph.facebook.com/v2.6/me/messenger_profile?access_token=${accessToken}`;\n\n    const result = await axios.get(facebookUrl, {\n        headers: { 'Content-Type': 'application/json' },\n        fields: ['get_started', 'persistent_menu', 'greeting']\n    });\n\n    if (result.status === 200 && result.data && result.data.data && result.data.data.length > 0) {\n        console.info('deleteFacebookFields found fields:', result);\n        const result1 = await axios.delete(facebookUrl, {\n            headers: { 'Content-Type': 'application/json' },\n            params: {\n                fields: ['get_started', 'persistent_menu', 'greeting'],\n            }\n        });\n        console.info('deleteFacebookFields deleted fields:', result1);\n        return result1;\n    } else {\n        console.info('deleteFacebookFields did not found fields:', result);\n        return null;\n    }\n}\n\nexport const sendPassThreadControl = async (pageID, userID, source) => {\n    if (source === 'whatsapp') {\n\n    } else { // facebook messenger\n        const page = await getOnePageData(pageID);\n\n        const facebookUrl = `https://graph.facebook.com/v2.6/me/pass_thread_control?access_token=${page.accessToken}`;\n\n        try {\n            const result = await axios.post(facebookUrl, {\n                headers: { 'Content-Type': 'application/json' },\n                recipient: { id: userID },\n                target_app_id: '263902037430900',\n                metadata: 'pass thread control to inbox',\n            });\n            return result.status;\n        } catch (passThreadError) {\n            console.error({ passThreadError });\n            return null;\n        }\n    }\n}\n\n\n\n// export const page_update = async (req, res) => {\n\n//     console.info(\"page_update\");\n\n//     const pageId = req.body.id;\n\n//     const record = await Page.findOne({ id: pageId }).exec();\n//     if (!record) {\n//         record = new Page({\n//             id: pageId,\n//             name: req.body.name,\n//             accessToken: req.body.access_token,\n//             userID: req.currentUser.userID,\n//         });\n//         isNew = true;\n//     }\n\n//     // Find a page by id\n//     await Page.findOne({ id: pageId }, async (err, doc) => {\n//         if (err) { // err !== null\n//             res.status(500).json({ message: err.errmsg });\n//             return;\n//         }\n//         let record;\n//         let isNew = false;\n\n//         if (doc) {\n//             record = doc;\n//             if (req.body.greetingText)\n//                 record.greetingText = req.body.greetingText;\n//             if (req.body.firstResponseText)\n//                 record.firstResponseText = req.body.firstResponseText;\n//             if (req.body.access_token)\n//                 record.accessToken = req.body.access_token;\n//             record.userID = req.currentUser.userID;\n//         } else {\n//             record = new Page({\n//                 id: pageId,\n//                 name: req.body.name,\n//                 accessToken: req.body.access_token,\n//                 userID: req.currentUser.userID,\n//             });\n//             isNew = true;\n//         }\n\n//         await record.save();\n//         const response = await subscribedApps(record.id, record.accessToken);\n\n//         // await record.save((err, result) => {\n//         //     if (err) {\n//         //         res.status(500).json({ message: err.errmsg });\n//         //     } else {\n//         //         subscribedApps(result.id, result.accessToken)\n//         //             .then(response => {\n//         //                 res.status(200).json(result);\n//         //             }).catch((err) => {\n//         //                 var errorMessage;\n//         //                 if (err.error) errorMessage = err.error;\n//         //                 if (err.response.data)\n//         //                     if (err.response.data.error)\n//         //                         errorMessage = err.response.data.error.message;\n//         //                 console.log(`subscribed_apps catch err: ${errorMessage}`);\n//         //                 res.status(500).json({ message: errorMessage });\n//         //             });\n\n//         //     }\n//     });\n\n//     // update ActivePage for the current user\n//     if (req.currentUser) {\n//         await User.findOne({ userID: req.currentUser.userID }, (err, docFind) => {\n//             if (err) {\n//                 res.status(500).json({ message: err.errmsg });\n//                 return;\n//             }\n\n//             if (docFind) {\n//                 docFind.activePage = pageId;\n//                 docFind.save((err, docSave) => {\n//                     if (err) {\n//                         res.status(500).json({ message: err.errmsg });\n//                     }\n//                 })\n//             }\n//         });\n//     }\n\n//     if (isNew) {\n//         record = await initialSetup(pageId);\n//         req.body.greetingText = record.greetingText\n//     }\n\n//     if (req.body.greetingText && record && record.accessToken) {\n//         setFacebookFields(record.id, record.accessToken, req.body.greetingText).then(response => {\n//             console.log('PagesController, response from set fields:', response.result);\n//         }).catch(err => {\n//             if (err.response && err.response.data && err.response.data.error)\n//                 console.log(`PagesController, error from set fields: ${err.response.data.error.message}`);\n//             else if (err.response)\n//                 console.log(err.response);\n//         });\n//     }\n\n//     const responseDebug = await debugToken(record.accessToken);\n//     console.info('debugToken', responseDebug);\n// });\n// }\n\n\n\n"],"file":"pagesController.js"}