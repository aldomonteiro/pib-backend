{"version":3,"sources":["../../../src/api/controllers/pagesController.js"],"names":["page_resources_get_all","req","res","sortObj","query","sort","rangeObj","range","options","offset","limit","lean","leanWithId","Page","paginate","err","result","status","json","message","errmsg","setHeader","util","format","total","docs","page_resources_get_one","params","id","findOne","doc","errMsg","page_resources_delete","findOneAndRemove","then","catch","page_update","console","log","body","pageId","record","greetingText","firstResponseText","access_token","accessToken","userID","currentUser","name","save","subscribedApps","response","errorMessage","error","data","User","docFind","activePage","docSave","setFacebookFields","facebookUrl","axios","post","getOnePage","pageID","Promise","resolve","reject","getOnePageData","exec","getAllPages","pageArray","find","map","Object","keys","length","_greeting","headers","get_started","payload","greeting","locale","text","persistent_menu","composer_input_disabled","call_to_actions","title","type","JSON","stringify","event"],"mappings":"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","sourcesContent":["\nimport Page from \"../models/pages\";\nimport User from \"../models/users\";\nimport axios from 'axios';\nimport util from 'util';\nimport { configSortQuery, configRangeQuery } from '../util/util';\n\n// List all flavors\n// TODO: use filters in the query req.query\nexport const page_resources_get_all = async (req, res) => {\n    // Getting the sort from the requisition\n    var sortObj = configSortQuery(req.query.sort);\n    // Getting the range from the requisition\n    var rangeObj = configRangeQuery(req.query.range);\n\n    let options = {\n        offset: rangeObj['offset'],\n        limit: rangeObj['limit'],\n        sort: sortObj,\n        lean: true,\n        leanWithId: false,\n    };\n\n    var query = {};\n\n    Page.paginate(query, options, async (err, result) => {\n        if (err) {\n            res.status(500).json({ message: err.errmsg });\n        } else {\n            res.setHeader('Content-Range', util.format(\"pages %d-%d/%d\", rangeObj['offset'], rangeObj['limit'], result.total));\n            res.status(200).json(result.docs);\n        }\n    });\n};\n\n// List one record by filtering by ID\nexport const page_resources_get_one = (req, res) => {\n    if (req.params && req.params.id) {\n\n        Page.findOne({ id: req.params.id }, (err, doc) => {\n            if (err) {\n                res.status(500).json({ message: err.errMsg });\n            }\n            else {\n                res.status(200).json(doc);\n            }\n        });\n    }\n}\n\n// DELETE\nexport const page_resources_delete = (req, res) => {\n    Page.findOneAndRemove({ id: req.params.id })\n        .then((result) => {\n            res.status(200).json(result);\n        })\n        .catch((err) => {\n            res.status(500).json({ message: err.errmsg });\n        });\n};\n\n\n// Update or create a new page\nexport const page_update = (req, res) => {\n\n    console.log(\"page_update\");\n    console.log(req.body);\n\n    const pageId = req.body.id;\n\n    // Find a page by id\n    Page.findOne({ id: pageId }, (err, doc) => {\n        if (err) { // err !== null\n            res.status(500).json({ message: err.errmsg });\n            return;\n        }\n        var record;\n\n        if (doc) {\n            record = doc;\n            if (req.body.greetingText)\n                record.greetingText = req.body.greetingText;\n            if (req.body.firstResponseText)\n                record.firstResponseText = req.body.firstResponseText;\n            if (req.body.access_token)\n                record.accessToken = req.body.access_token;\n            record.userID = req.currentUser.userID;\n        } else {\n            record = new Page({\n                id: pageId,\n                name: req.body.name,\n                accessToken: req.body.access_token,\n                userID: req.currentUser.userID,\n            });\n        }\n        record.save((err, result) => {\n            if (err) {\n                res.status(500).json({ message: err.errmsg });\n            } else {\n                subscribedApps(result.id, result.accessToken)\n                    .then(response => {\n                        res.status(200).json(result);\n                    }).catch((err) => {\n                        var errorMessage;\n                        if (err.error) errorMessage = err.error;\n                        if (err.response.data)\n                            if (err.response.data.error)\n                                errorMessage = err.response.data.error.message;\n                        console.log(`subscribed_apps catch err: ${errorMessage}`);\n                        res.status(500).json({ message: errorMessage });\n                    });\n            }\n        });\n\n        // update ActivePage for the current user\n        if (req.currentUser) {\n            User.findOne({ userID: req.currentUser.userID }, (err, docFind) => {\n                if (err) {\n                    res.status(500).json({ message: err.errmsg });\n                    return;\n                }\n\n                if (docFind) {\n                    docFind.activePage = pageId;\n                    docFind.save((err, docSave) => {\n                        if (err) {\n                            res.status(500).json({ message: err.errmsg });\n                        }\n                    })\n                }\n            });\n        }\n\n        if (req.body.greetingText && record && record.accessToken) {\n            setFacebookFields(record.id, record.accessToken, req.body.greetingText).then(response => {\n                console.log('PagesController, response from set fields:', response.result);\n            }).catch(err => {\n                if (err.response && err.response.data && err.response.data.error)\n                    console.log(`PagesController, error from set fields: ${err.response.data.error.message}`);\n                else if (err.response)\n                    console.log(err.response);\n            });\n        }\n\n    });\n}\n\nexport const subscribedApps = async (pageId, accessToken) => {\n\n    // https://graph.facebook.com/v3.1/{page-id}/subscribed_apps?access_token={}\n    const facebookUrl = `https://graph.facebook.com/v3.1/${pageId}/subscribed_apps?access_token=${accessToken}`\n\n    return await axios.post(facebookUrl);\n}\n\n// used in botController.js\nexport const getOnePage = async (pageID) => {\n    let accessToken = '';\n    await Page.findOne({ id: pageID }, (err, result) => {\n        if (err) {\n\n        }\n        else {\n            accessToken = result.accessToken;\n        }\n    });\n    if (accessToken !== '')\n        return Promise.resolve(accessToken);\n    else return Promise.reject();\n}\n\n/**\n * \n * @param {*} pageID \n * @return Page\n */\nexport const getOnePageData = async (pageID) => {\n    return await Page.findOne({ id: pageID }).exec();\n}\n\n\nexport const getAllPages = async () => {\n    let pageArray = [];\n    await Page.find({}, (err, result) => {\n        pageArray = result.map(doc => { return { 'pageID': doc.id, 'accessToken': doc.accessToken, 'name': doc.name } });\n    });\n    console.log(\"into getAllPages: \", Object.keys(pageArray).length);\n    return Promise.resolve(pageArray);\n}\n\nconst setFacebookFields = async (pageId, accessToken, _greeting) => {\n    const facebookUrl = `https://graph.facebook.com/v2.6/me/messenger_profile?access_token=${accessToken}`;\n    return await axios.post(facebookUrl, {\n        headers: { 'Content-Type': 'application/json' },\n        get_started: { payload: 'GET_STARTED' },\n        greeting: [\n            { locale: 'default', text: _greeting },\n            { locale: 'pt_BR', text: _greeting },\n            { locale: 'en_US', text: _greeting },\n        ],\n        persistent_menu: [\n            {\n                locale: 'default',\n                composer_input_disabled: false,\n                call_to_actions: [\n                    {\n                        title: 'Cardápio',\n                        type: 'postback',\n                        payload: JSON.stringify({ data: 'CARDAPIO_PAYLOAD', event: 'MAIN-MENU' })\n                    },\n                    {\n                        title: 'Horários',\n                        type: 'postback',\n                        payload: JSON.stringify({ data: 'HORARIO_PAYLOAD', event: 'MAIN-MENU' })\n                    },\n                    {\n                        title: 'Fazer Pedido',\n                        type: 'postback',\n                        payload: JSON.stringify({ data: 'PEDIDO_PAYLOAD', event: 'MAIN-MENU' })\n                    }\n                ]\n            }\n        ]\n    });\n}\n\n\n"],"file":"pagesController.js"}