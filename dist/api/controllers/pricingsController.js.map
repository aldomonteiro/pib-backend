{"version":3,"sources":["../../../src/api/controllers/pricingsController.js"],"names":["pricing_get_all","req","res","sortObj","query","sort","rangeObj","range","options","offset","limit","lean","leanWithId","currentUser","activePage","Pricing","find","pageId","paginate","err","result","status","json","message","errmsg","setHeader","util","format","total","docs","pricing_get_one","params","id","findOne","doc","pricing_create","body","newRecord","kind","sizeId","price","save","then","catch","pricing_update","pricing_delete","findOneAndRemove","getPricingSizing","distinct","exec","getPricings","pageID"],"mappings":"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","sourcesContent":["import Pricing from \"../models/pricings\";\nimport util from \"util\";\nimport { configSortQuery, configRangeQuery } from '../util/util';\n\n// List all records\n// TODO: use filters in the query req.query\nexport const pricing_get_all = (req, res) => {\n    // Getting the sort from the requisition\n    var sortObj = configSortQuery(req.query.sort);\n    // Getting the range from the requisition\n    var rangeObj = configRangeQuery(req.query.range);\n\n    let options = {\n        offset: rangeObj['offset'],\n        limit: rangeObj['limit'],\n        sort: sortObj,\n        lean: true,\n        leanWithId: false,\n    };\n\n    var query = {};\n\n    if (req.currentUser.activePage) {\n        query = Pricing.find({ pageId: req.currentUser.activePage });\n    }\n\n    Pricing.paginate(query, options, (err, result) => {\n        if (err) {\n            res.status(500).json({ message: err.errmsg });\n        } else {\n            res.setHeader('Content-Range', util.format(\"pricings %d-%d/%d\", rangeObj['offset'], rangeObj['limit'], result.total));\n            res.status(200).json(result.docs);\n        }\n    });\n};\n\n// List one record by filtering by ID\nexport const pricing_get_one = (req, res) => {\n    if (req.params && req.params.id) {\n        // Filter based on the currentUser\n        const pageId = req.currentUser.activePage;\n\n        Pricing.findOne({ pageId: pageId, id: req.params.id }, (err, doc) => {\n            if (err) {\n                res.status(500).json({ message: err.errmsg });\n            }\n            else {\n                res.status(200).json(doc);\n            }\n        });\n    }\n}\n\n// CREATE A NEW RECORD\nexport const pricing_create = (req, res) => {\n    if (req.body) {\n\n        const pageId = req.currentUser.activePage ? req.currentUser.activePage : null;\n\n        const newRecord = new Pricing({\n            id: req.body.id,\n            kind: req.body.kind,\n            sizeId: req.body.sizeId,\n            price: req.body.price, // TODO: how to handle float?\n            pageId: pageId,\n        });\n\n        newRecord.save()\n            .then((result) => {\n                res.status(200).json(result);\n            })\n            .catch((err) => {\n                res.status(500).json({ message: err.errmsg });\n            });\n    }\n}\n\n// UPDATE\nexport const pricing_update = (req, res) => {\n    if (req.body && req.body.id) {\n\n        const pageId = req.currentUser.activePage;\n\n        Pricing.findOne({ pageId: pageId, id: req.body.id }, (err, doc) => {\n            if (!err) {\n                doc.kind = req.body.kind;\n                doc.sizeId = req.body.sizeId;\n                doc.price = req.body.price;\n\n                doc.save((err, result) => {\n                    if (err) {\n                        res.status(500).json({ message: err.errmsg });\n                    } else {\n                        res.status(200).json(result);\n                    }\n                });\n            } else {\n                res.status(500).json({ message: err.errmsg });\n            }\n        });\n    }\n}\n\n// DELETE\nexport const pricing_delete = (req, res) => {\n\n    const pageId = req.currentUser.activePage;\n\n    Pricing.findOneAndRemove({ pageId: pageId, id: req.params.id })\n        .then((result) => {\n            res.status(200).json(result);\n        })\n        .catch((err) => {\n            res.status(500).json({ message: err.errmsg });\n        });\n};\n\nexport const getPricingSizing = async pageId => {\n    const query = Pricing.distinct('sizeId', { pageId: pageId });\n    return await query.exec();\n}\n\nexport const getPricings = async (pageID) => {\n    let query = Pricing.find({ pageId: pageID });\n    return await query.exec();\n}\n\n"],"file":"pricingsController.js"}