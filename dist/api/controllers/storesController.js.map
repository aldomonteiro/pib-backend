{"version":3,"sources":["../../../src/api/controllers/storesController.js"],"names":["store_get_all","req","res","sortObj","query","sort","rangeObj","range","options","offset","limit","lean","leanWithId","currentUser","activePage","Store","find","pageId","paginate","err","result","status","json","message","errmsg","setHeader","util","format","total","docs","store_get_one","params","id","findOne","doc","store_create","body","newRecord","name","address","city","state","phone","sun_is_open","sun_open","sun_close","mon_is_open","mon_open","mon_close","tue_is_open","tue_open","tue_close","wed_is_open","wed_open","wed_close","thu_is_open","thu_open","thu_close","fri_is_open","fri_open","fri_close","sat_is_open","sat_open","sat_close","hol_is_open","hol_open","hol_close","save","then","catch","store_update","store_delete","findOneAndRemove","getOpeningTimes","pageID","exec","console","log"],"mappings":"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","sourcesContent":["import Store from \"../models/stores\";\nimport util from \"util\";\nimport { configSortQuery, configRangeQuery } from '../util/util';\n\n// List all records\n// TODO: use filters in the query req.query\nexport const store_get_all = (req, res) => {\n    // Getting the sort from the requisition\n    var sortObj = configSortQuery(req.query.sort);\n    // Getting the range from the requisition\n    var rangeObj = configRangeQuery(req.query.range);\n\n    let options = {\n        offset: rangeObj['offset'],\n        limit: rangeObj['limit'],\n        sort: sortObj,\n        lean: true,\n        leanWithId: false,\n    };\n\n    var query = {};\n\n    if (req.currentUser.activePage) {\n        query = Store.find({ pageId: req.currentUser.activePage });\n    }\n\n    Store.paginate(query, options, (err, result) => {\n        if (err) {\n            res.status(500).json({ message: err.errmsg });\n        } else {\n            res.setHeader('Content-Range', util.format(\"stores %d-%d/%d\", rangeObj['offset'], rangeObj['limit'], result.total));\n            res.status(200).json(result.docs);\n        }\n    });\n};\n\n// List one record by filtering by ID\nexport const store_get_one = (req, res) => {\n    if (req.params && req.params.id) {\n        // Filter based on the currentUser\n        const pageId = req.currentUser.activePage;\n\n        Store.findOne({ pageId: pageId, id: req.params.id }, (err, doc) => {\n            if (err) {\n                res.status(500).json({ message: err.errmsg });\n            }\n            else {\n                res.status(200).json(doc);\n            }\n        });\n    }\n}\n\n// CREATE A NEW RECORD\nexport const store_create = (req, res) => {\n    if (req.body) {\n\n        const pageId = req.currentUser.activePage ? req.currentUser.activePage : null;\n\n        const newRecord = new Store({\n            id: req.body.id,\n            pageId: pageId,\n            name: req.body.name,\n            address: req.body.address,\n            city: req.body.city,\n            state: req.body.state,\n            phone: req.body.phone,\n            sun_is_open: req.body.sun_is_open,\n            sun_open: req.body.sun_open,\n            sun_close: req.body.sun_close,\n            mon_is_open: req.body.mon_is_open,\n            mon_open: req.body.mon_open,\n            mon_close: req.body.mon_close,\n            tue_is_open: req.body.tue_is_open,\n            tue_open: req.body.tue_open,\n            tue_close: req.body.tue_close,\n            wed_is_open: req.body.wed_is_open,\n            wed_open: req.body.wed_open,\n            wed_close: req.body.wed_close,\n            thu_is_open: req.body.thu_is_open,\n            thu_open: req.body.thu_open,\n            thu_close: req.body.thu_close,\n            fri_is_open: req.body.fri_is_open,\n            fri_open: req.body.fri_open,\n            fri_close: req.body.fri_close,\n            sat_is_open: req.body.sat_is_open,\n            sat_open: req.body.sat_open,\n            sat_close: req.body.sat_close,\n            hol_is_open: req.body.hol_is_open,\n            hol_open: req.body.hol_open,\n            hol_close: req.body.hol_close,\n        });\n\n        newRecord.save()\n            .then((result) => {\n                res.status(200).json(result);\n            })\n            .catch((err) => {\n                res.status(500).json({ message: err.errmsg });\n            });\n    }\n}\n\n// UPDATE\nexport const store_update = (req, res) => {\n    if (req.body && req.body.id) {\n\n        const pageId = req.currentUser.activePage;\n\n        Store.findOne({ pageId: pageId, id: req.body.id }, (err, doc) => {\n            if (!err) {\n                doc.name = req.body.name;\n                doc.address = req.body.address;\n                doc.city = req.body.city;\n                doc.state = req.body.state;\n                doc.phone = req.body.phone;\n                // Opening times\n                doc.sun_is_open = req.body.sun_is_open;\n                doc.sun_open = req.body.sun_open;\n                doc.sun_close = req.body.sun_close;\n                doc.mon_is_open = req.body.mon_is_open;\n                doc.mon_open = req.body.mon_open;\n                doc.mon_close = req.body.mon_close;\n                doc.tue_is_open = req.body.tue_is_open;\n                doc.tue_open = req.body.tue_open;\n                doc.tue_close = req.body.tue_close;\n                doc.wed_is_open = req.body.wed_is_open;\n                doc.wed_open = req.body.wed_open;\n                doc.wed_close = req.body.wed_close;\n                doc.thu_is_open = req.body.thu_is_open;\n                doc.thu_open = req.body.thu_open;\n                doc.thu_close = req.body.thu_close;\n                doc.fri_is_open = req.body.fri_is_open;\n                doc.fri_open = req.body.fri_open;\n                doc.fri_close = req.body.fri_close;\n                doc.sat_is_open = req.body.sat_is_open;\n                doc.sat_open = req.body.sat_open;\n                doc.sat_close = req.body.sat_close;\n                doc.hol_is_open = req.body.hol_is_open;\n                doc.hol_open = req.body.hol_open;\n                doc.hol_close = req.body.hol_close;\n\n                doc.save((err, result) => {\n                    if (err) {\n                        res.status(500).json({ message: err.errmsg });\n                    } else {\n                        res.status(200).json(result);\n                    }\n                });\n            } else {\n                res.status(500).json({ message: err.errmsg });\n            }\n        });\n    }\n}\n\n// DELETE\nexport const store_delete = (req, res) => {\n\n    const pageId = req.currentUser.activePage;\n\n    Store.findOneAndRemove({ pageId: pageId, id: req.params.id })\n        .then((result) => {\n            res.status(200).json(result);\n        })\n        .catch((err) => {\n            res.status(500).json({ message: err.errmsg });\n        });\n};\n\n\nexport const getOpeningTimes = async (pageID) => {\n    // TODO: if is there more than one Store?\n    var query = Store.findOne({ pageId: pageID });\n    const result = await query.exec();\n    console.log(result)\n    return result;\n}"],"file":"storesController.js"}