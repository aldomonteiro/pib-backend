{"version":3,"sources":["../../../src/api/controllers/storesController.js"],"names":["store_get_all","req","res","sortObj","query","sort","rangeObj","range","options","offset","limit","lean","leanWithId","currentUser","activePage","Store","find","pageId","paginate","err","result","status","json","message","errmsg","setHeader","util","format","total","docs","store_get_one","params","id","findOne","doc","store_create","body","newRecord","name","address","city","state","phone","delivery_fee","location_lat","location_long","sun_is_open","sun_open","sun_close","mon_is_open","mon_open","mon_close","tue_is_open","tue_open","tue_close","wed_is_open","wed_open","wed_close","thu_is_open","thu_open","thu_close","fri_is_open","fri_open","fri_close","sat_is_open","sat_open","sat_close","hol_is_open","hol_open","hol_close","catalog_url1","catalog_url2","save","then","catch","store_update","console","info","operation","deliveryTime","pickupTime","delivery_time","pickup_time","delivery_fees","printer","payment_types","deleteManyStores","pageID","deleteMany","exec","store_delete","findOneAndRemove","getStores","getStoreData","getStoreByPhone","getTodayOpeningTime","_store","_today","Date","_tomorrow","get","setDate","getDate","tomorrowCloseAt","tomorrowIsOpen","getDay","todayIsOpen","todayOpenAt","todayCloseAt","tomorrowOpenAt","_openAtHours","toLocaleTimeString","hour","minute","hour12","_closeAtHours","_openAtHoursTom","_closeAtHoursTom","calcDeliveryFee","deliveryFees","distanceFromStore","length","delivFee","from","to","fee"],"mappings":"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","sourcesContent":["import Store from \"../models/stores\";\nimport util from \"util\";\nimport { configSortQuery, configRangeQuery } from '../util/util';\n\n// List all records\n// TODO: use filters in the query req.query\nexport const store_get_all = (req, res) => {\n    // Getting the sort from the requisition\n    var sortObj = configSortQuery(req.query.sort);\n    // Getting the range from the requisition\n    var rangeObj = configRangeQuery(req.query.range);\n\n    let options = {\n        offset: rangeObj['offset'],\n        limit: rangeObj['limit'],\n        sort: sortObj,\n        lean: true,\n        leanWithId: false,\n    };\n\n    var query = {};\n\n    if (req.currentUser.activePage) {\n        query = Store.find({ pageId: req.currentUser.activePage });\n    }\n\n    Store.paginate(query, options, (err, result) => {\n        if (err) {\n            res.status(500).json({ message: err.errmsg });\n        } else {\n            res.setHeader('Content-Range', util.format('stores %d-%d/%d', rangeObj['offset'], rangeObj['limit'], result.total));\n            res.status(200).json(result.docs);\n        }\n    });\n};\n\n// List one record by filtering by ID\nexport const store_get_one = (req, res) => {\n    if (req.params && req.params.id) {\n        // Filter based on the currentUser\n        const pageId = req.currentUser.activePage;\n\n        Store.findOne({ pageId: pageId, id: req.params.id }, (err, doc) => {\n            if (err) {\n                res.status(500).json({ message: err.errmsg });\n            } else {\n                res.status(200).json(doc);\n            }\n        });\n    }\n}\n\n// CREATE A NEW RECORD\nexport const store_create = (req, res) => {\n    if (req.body) {\n\n        const pageId = req.currentUser.activePage ? req.currentUser.activePage : null;\n\n        const newRecord = new Store({\n            id: req.body.id,\n            pageId: pageId,\n            name: req.body.name,\n            address: req.body.address,\n            city: req.body.city,\n            state: req.body.state,\n            phone: req.body.phone,\n            delivery_fee: req.body.delivery_fee,\n            location_lat: req.location_lat,\n            location_long: req.location_long,\n            sun_is_open: req.body.sun_is_open,\n            sun_open: req.body.sun_open,\n            sun_close: req.body.sun_close,\n            mon_is_open: req.body.mon_is_open,\n            mon_open: req.body.mon_open,\n            mon_close: req.body.mon_close,\n            tue_is_open: req.body.tue_is_open,\n            tue_open: req.body.tue_open,\n            tue_close: req.body.tue_close,\n            wed_is_open: req.body.wed_is_open,\n            wed_open: req.body.wed_open,\n            wed_close: req.body.wed_close,\n            thu_is_open: req.body.thu_is_open,\n            thu_open: req.body.thu_open,\n            thu_close: req.body.thu_close,\n            fri_is_open: req.body.fri_is_open,\n            fri_open: req.body.fri_open,\n            fri_close: req.body.fri_close,\n            sat_is_open: req.body.sat_is_open,\n            sat_open: req.body.sat_open,\n            sat_close: req.body.sat_close,\n            hol_is_open: req.body.hol_is_open,\n            hol_open: req.body.hol_open,\n            hol_close: req.body.hol_close,\n            catalog_url1: req.body.catalog_url1,\n            catalog_url2: req.body.catalog_url2,\n\n        });\n\n        newRecord.save()\n            .then((result) => {\n                res.status(200).json(result);\n            })\n            .catch((err) => {\n                res.status(500).json({ message: err.errmsg });\n            });\n    }\n}\n\n// UPDATE\nexport const store_update = (req, res) => {\n    console.info('store_update req.body:', req.body);\n\n    if (req.body && req.body.id) {\n\n        const pageId = req.currentUser.activePage;\n\n        const { id, operation, deliveryTime, pickupTime } = req.body;\n        if (operation) {\n            Store.findOne({ pageId: pageId, id: id }, (err, doc) => {\n                if (!err) {\n                    if (operation === 'UPDATE_DELIVERY_TIME' && deliveryTime)\n                        doc.delivery_time = deliveryTime;\n                    if (operation === 'UPDATE_PICKUP_TIME' && pickupTime)\n                        doc.pickup_time = pickupTime;\n\n                    doc.save((err, result) => {\n                        if (err) {\n                            res.status(500).json({ message: err.errmsg });\n                        } else {\n                            res.status(200).json(result);\n                        }\n                    });\n                }\n            });\n\n        } else {\n            Store.findOne({ pageId: pageId, id: id }, (err, doc) => {\n                if (!err) {\n                    doc.name = req.body.name;\n                    doc.address = req.body.address;\n                    doc.city = req.body.city;\n                    doc.state = req.body.state;\n                    doc.phone = req.body.phone;\n                    doc.delivery_fee = req.body.delivery_fee;\n                    doc.delivery_fees = req.body.delivery_fees;\n                    doc.location_lat = req.body.location_lat;\n                    doc.location_long = req.body.location_long;\n                    // Opening times\n                    doc.sun_is_open = req.body.sun_is_open;\n                    doc.sun_open = req.body.sun_open;\n                    doc.sun_close = req.body.sun_close;\n                    doc.mon_is_open = req.body.mon_is_open;\n                    doc.mon_open = req.body.mon_open;\n                    doc.mon_close = req.body.mon_close;\n                    doc.tue_is_open = req.body.tue_is_open;\n                    doc.tue_open = req.body.tue_open;\n                    doc.tue_close = req.body.tue_close;\n                    doc.wed_is_open = req.body.wed_is_open;\n                    doc.wed_open = req.body.wed_open;\n                    doc.wed_close = req.body.wed_close;\n                    doc.thu_is_open = req.body.thu_is_open;\n                    doc.thu_open = req.body.thu_open;\n                    doc.thu_close = req.body.thu_close;\n                    doc.fri_is_open = req.body.fri_is_open;\n                    doc.fri_open = req.body.fri_open;\n                    doc.fri_close = req.body.fri_close;\n                    doc.sat_is_open = req.body.sat_is_open;\n                    doc.sat_open = req.body.sat_open;\n                    doc.sat_close = req.body.sat_close;\n                    doc.hol_is_open = req.body.hol_is_open;\n                    doc.hol_open = req.body.hol_open;\n                    doc.hol_close = req.body.hol_close;\n\n                    // Customizing\n                    doc.printer = req.body.printer;\n                    doc.catalog_url1 = req.body.catalog_url1;\n                    doc.catalog_url2 = req.body.catalog_url2;\n                    doc.payment_types = req.body.payment_types;\n\n                    doc.save((err, result) => {\n                        if (err) {\n                            res.status(500).json({ message: err.errmsg });\n                        } else {\n                            res.status(200).json(result);\n                        }\n                    });\n                } else {\n                    res.status(500).json({ message: err.errmsg });\n                }\n            });\n        }\n    }\n}\n\n/**\n * Delete all records from a pageID\n * @param {*} pageID\n */\nexport const deleteManyStores = async (pageID) => {\n    return await Store.deleteMany({ pageId: pageID }).exec();\n}\n\n// DELETE\nexport const store_delete = (req, res) => {\n\n    const pageId = req.currentUser.activePage;\n\n    Store.findOneAndRemove({ pageId: pageId, id: req.params.id })\n        .then((result) => {\n            res.status(200).json(result);\n        })\n        .catch((err) => {\n            res.status(500).json({ message: err.errmsg });\n        });\n};\n\nexport const getStores = async (pageID) => {\n    // TODO: if is there more than one Store?\n    const query = Store.find({ pageId: pageID });\n    return await query.exec();\n}\n\nexport const getStoreData = async (pageID) => {\n    // TODO: if is there more than one Store?\n    const query = Store.findOne({ pageId: pageID });\n    return await query.exec();\n}\n\n/**\n * Used by WhatsappController\n * @param {*} phone\n */\nexport const getStoreByPhone = async (phone) => {\n    return await Store.findOne({ phone: phone }).exec();\n}\n\nexport const getTodayOpeningTime = async pageID => {\n    const _store = await getStoreData(pageID);\n    let _today = new Date();\n\n    let _tomorrow = new Date();\n    _tomorrow.get\n    _tomorrow.setDate(_today.getDate() + 1);\n\n    let todayOpenAt; let todayCloseAt; let tomorrowOpenAt; let tomorrowCloseAt = '';\n    let todayIsOpen; let tomorrowIsOpen = false;\n\n    if (_today.getDay() === 1) {\n        todayIsOpen = _store.sun_is_open;\n        todayOpenAt = _store.sun_open;\n        todayCloseAt = _store.sun_close;\n\n        tomorrowIsOpen = _store.mon_is_open;\n        tomorrowOpenAt = _store.mon_open;\n        tomorrowCloseAt = _store.mon_close;\n    }\n    else if (_today.getDay() === 2) {\n        todayIsOpen = _store.mon_is_open;\n        todayOpenAt = _store.mon_open;\n        todayCloseAt = _store.mon_close;\n\n        tomorrowIsOpen = _store.tue_is_open;\n        tomorrowOpenAt = _store.tue_open;\n        tomorrowCloseAt = _store.tue_close;\n    }\n    else if (_today.getDay() === 3) {\n        todayIsOpen = _store.tue_is_open;\n        todayOpenAt = _store.tue_open;\n        todayCloseAt = _store.tue_close;\n\n        tomorrowIsOpen = _store.wed_is_open;\n        tomorrowOpenAt = _store.wed_open;\n        tomorrowCloseAt = _store.wed_close;\n    }\n    else if (_today.getDay() === 4) {\n        todayIsOpen = _store.wed_is_open;\n        todayOpenAt = _store.wed_open;\n        todayCloseAt = _store.wed_close;\n\n        tomorrowIsOpen = _store.thu_is_open;\n        tomorrowOpenAt = _store.thu_open;\n        tomorrowCloseAt = _store.thu_close;\n    }\n    else if (_today.getDay() === 5) {\n        todayIsOpen = _store.thu_is_open;\n        todayOpenAt = _store.thu_open;\n        todayCloseAt = _store.thu_close;\n\n        tomorrowIsOpen = _store.fri_is_open;\n        tomorrowOpenAt = _store.fri_open;\n        tomorrowCloseAt = _store.fri_close;\n    }\n    else if (_today.getDay() === 6) {\n        todayIsOpen = _store.fri_is_open;\n        todayOpenAt = _store.fri_open;\n        todayCloseAt = _store.fri_close;\n\n        tomorrowIsOpen = _store.sat_is_open;\n        tomorrowOpenAt = _store.sat_open;\n        tomorrowCloseAt = _store.sat_close;\n    }\n    else if (_today.getDay() === 7) {\n        todayIsOpen = _store.sat_is_open;\n        todayOpenAt = _store.sat_open;\n        todayCloseAt = _store.sat_close;\n\n        tomorrowIsOpen = _store.sun_is_open;\n        tomorrowOpenAt = _store.sun_open;\n        tomorrowCloseAt = _store.sun_close;\n    }\n\n    const _openAtHours = new Date(todayOpenAt).toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit', hour12: false })\n    const _closeAtHours = new Date(todayCloseAt).toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit', hour12: false })\n\n    const _openAtHoursTom = new Date(tomorrowOpenAt).toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit', hour12: false })\n    const _closeAtHoursTom = new Date(tomorrowCloseAt).toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit', hour12: false })\n\n    return { todayIsOpen, todayOpenAt: _openAtHours, todayCloseAt: _closeAtHours, tomorrowIsOpen, tomorrowOpenAt: _openAtHoursTom, tomorrowCloseAt: _closeAtHoursTom };\n}\n\nexport const calcDeliveryFee = (deliveryFees, distanceFromStore) => {\n    if (deliveryFees && deliveryFees.length > 0) {\n        for (let delivFee of deliveryFees) {\n            if (delivFee.from <= distanceFromStore && delivFee.to > distanceFromStore) {\n                return delivFee.fee;\n            }\n        }\n    } else return 0;\n}\n"],"file":"storesController.js"}