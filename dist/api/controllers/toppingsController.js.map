{"version":3,"sources":["../../../src/api/controllers/toppingsController.js"],"names":["topping_get_all","req","res","sortObj","query","sort","topping","range","rangeObj","options","offset","limit","lean","leanWithId","Topping","paginate","err","result","status","json","message","errmsg","setHeader","util","format","total","docs","find","length","topping_get_one","params","id","findOne","doc","topping_create","body","newRecord","save","then","catch","topping_update","topping_delete","findOneAndRemove","getToppings","toppingsArray","queryTopping","$in","select","exec"],"mappings":"uOAAA;AACA;AACA;AACA,qC;;;AAGA;AACA;AACO,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAMC,GAAN,EAAc;AACzC;;AAEA,MAAIC,OAAO,GAAGF,GAAG,CAACG,KAAJ,CAAUC,IAAV,GAAiB,4BAAgBJ,GAAG,CAACG,KAAJ,CAAUC,IAA1B,CAAjB,GAAmD,EAAEC,OAAO,EAAE,KAAX,EAAjE;;AAEA,MAAIL,GAAG,CAACG,KAAJ,CAAUG,KAAd,EAAqB;AACjB,QAAIC,QAAQ,GAAG,6BAAiBP,GAAG,CAACG,KAAJ,CAAUG,KAA3B,CAAf;AACA,QAAME,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAEF,QAAQ,CAAC,QAAD,CADJ;AAEZG,MAAAA,KAAK,EAAEH,QAAQ,CAAC,OAAD,CAFH;AAGZH,MAAAA,IAAI,EAAEF,OAHM;AAIZS,MAAAA,IAAI,EAAE,IAJM;AAKZC,MAAAA,UAAU,EAAE,KALA,EAAhB;;AAOAC,sBAAQC,QAAR,CAAiB,EAAjB,EAAqBN,OAArB,EAA8B,UAACO,GAAD,EAAMC,MAAN,EAAiB;AAC3C,UAAID,GAAJ,EAAS;AACLd,QAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,EAAEJ,GAAG,CAACK,MAAf,EAArB;AACH,OAFD,MAEO;AACHnB,QAAAA,GAAG,CAACoB,SAAJ,CAAc,eAAd,EAA+BC,cAAKC,MAAL,CAAY,mBAAZ,EAAiChB,QAAQ,CAAC,QAAD,CAAR,GAAqB,CAAtD,EAAyDA,QAAQ,CAAC,OAAD,CAAjE,EAA4ES,MAAM,CAACQ,KAAnF,CAA/B;AACAvB,QAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,MAAM,CAACS,IAA5B;AACH;AACJ,KAPD;AAQH,GAjBD,MAiBO;AACHZ,sBAAQa,IAAR,CAAa,UAACX,GAAD,EAAMC,MAAN,EAAiB;AAC1B,UAAID,GAAJ,EAAS;AACLd,QAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,EAAEJ,GAAG,CAACK,MAAf,EAArB;AACH,OAFD,MAEO;AACHnB,QAAAA,GAAG,CAACoB,SAAJ,CAAc,eAAd,EAA+BC,cAAKC,MAAL,CAAY,mBAAZ,EAAiC,CAAjC,EAAoCP,MAAM,CAACW,MAAP,GAAgB,CAApD,EAAuDX,MAAM,CAACW,MAA9D,CAA/B;AACA1B,QAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,MAArB;AACH;AACJ,KAPD;AAQH;AACJ,CAhCM;;AAkCP;0CACO,IAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAAC5B,GAAD,EAAMC,GAAN,EAAc;AACzC,MAAID,GAAG,CAAC6B,MAAJ,IAAc7B,GAAG,CAAC6B,MAAJ,CAAWC,EAA7B,EAAiC;AAC7BjB,sBAAQkB,OAAR,CAAgB,EAAED,EAAE,EAAE9B,GAAG,CAAC6B,MAAJ,CAAWC,EAAjB,EAAhB,EAAuC,UAACf,GAAD,EAAMiB,GAAN,EAAc;AACjD,UAAIjB,GAAJ,EAAS;AACLd,QAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,EAAEJ,GAAG,CAACK,MAAf,EAArB;AACH,OAFD;AAGK;AACDnB,QAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEY,EAAE,EAAEE,GAAG,CAACF,EAAV,EAAczB,OAAO,EAAE2B,GAAG,CAAC3B,OAA3B,EAArB;AACH;AACJ,KAPD;AAQH;AACJ,CAXM;;AAaP;0CACO,IAAM4B,cAAc,GAAG,SAAjBA,cAAiB,CAACjC,GAAD,EAAMC,GAAN,EAAc;AACxC,MAAID,GAAG,CAACkC,IAAR,EAAc;AACV,QAAMC,SAAS,GAAG,IAAItB,iBAAJ,CAAY;AAC1BiB,MAAAA,EAAE,EAAE9B,GAAG,CAACkC,IAAJ,CAASJ,EADa;AAE1BzB,MAAAA,OAAO,EAAE,mCAAqBL,GAAG,CAACkC,IAAJ,CAAS7B,OAA9B,CAFiB,EAAZ,CAAlB;;;AAKA8B,IAAAA,SAAS,CAACC,IAAV;AACKC,IAAAA,IADL,CACU,UAACrB,MAAD,EAAY;AACdf,MAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBY,QAAAA,EAAE,EAAEd,MAAM,CAACc,EADM;AAEjBzB,QAAAA,OAAO,EAAEW,MAAM,CAACX,OAFC,EAArB;;AAIH,KANL;AAOKiC,IAAAA,KAPL,CAOW,UAACvB,GAAD,EAAS;AACZd,MAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,EAAEJ,GAAG,CAACK,MAAf,EAArB;AACH,KATL;AAUH;AACJ,CAlBM;;AAoBP;wCACO,IAAMmB,cAAc,GAAG,SAAjBA,cAAiB,CAACvC,GAAD,EAAMC,GAAN,EAAc;AACxCY,oBAAQkB,OAAR,CAAgB,EAAED,EAAE,EAAE9B,GAAG,CAACkC,IAAJ,CAASJ,EAAf,EAAhB,EAAqC,UAACf,GAAD,EAAMiB,GAAN,EAAc;AAC/C,QAAI,CAACjB,GAAL,EAAU;AACNiB,MAAAA,GAAG,CAAC3B,OAAJ,GAAc,mCAAqBL,GAAG,CAACkC,IAAJ,CAAS7B,OAA9B,CAAd;AACA2B,MAAAA,GAAG,CAACI,IAAJ,CAAS,UAACrB,GAAD,EAAMiB,GAAN,EAAc;AACnB,YAAIjB,GAAJ,EAAS;AACLd,UAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,EAAEJ,GAAG,CAACK,MAAf,EAArB;AACH,SAFD,MAEO;AACHnB,UAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBY,YAAAA,EAAE,EAAEE,GAAG,CAACF,EADS;AAEjBzB,YAAAA,OAAO,EAAE2B,GAAG,CAAC3B,OAFI,EAArB;;AAIH;AACJ,OATD;AAUH,KAZD,MAYO;AACHJ,MAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,EAAEJ,GAAG,CAACK,MAAf,EAArB;AACH;AACJ,GAhBD;;;AAmBH,CApBM;;AAsBP;wCACO,IAAMoB,cAAc,GAAG,SAAjBA,cAAiB,CAACxC,GAAD,EAAMC,GAAN,EAAc;AACxCY,oBAAQ4B,gBAAR,CAAyB,EAAEX,EAAE,EAAE9B,GAAG,CAAC6B,MAAJ,CAAWC,EAAjB,EAAzB;AACKO,EAAAA,IADL,CACU,UAACrB,MAAD,EAAY;AACdf,IAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBY,MAAAA,EAAE,EAAEd,MAAM,CAACc,EADM;AAEjBzB,MAAAA,OAAO,EAAEW,MAAM,CAACX,OAFC,EAArB;;AAIH,GANL;AAOKiC,EAAAA,KAPL,CAOW,UAACvB,GAAD,EAAS;AACZd,IAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,EAAEJ,GAAG,CAACK,MAAf,EAArB;AACH,GATL;AAUH,CAXM,C;;AAaA,IAAMsB,WAAW,gGAAG,iBAAOC,aAAP;AACnBC,YAAAA,YADmB,GACJ/B,kBAAQa,IAAR,CAAa,EAAEI,EAAE,EAAE,EAAEe,GAAG,EAAEF,aAAP,EAAN,EAAb,CADI;AAEvBC,YAAAA,YAAY,CAACxC,IAAb,CAAkB,SAAlB;AACAwC,YAAAA,YAAY,CAACE,MAAb,CAAoB,SAApB,EAHuB;AAIVF,cAAAA,YAAY,CAACG,IAAb,EAJU,uHAAH,mBAAXL,WAAW,8CAAjB,C","sourcesContent":["import Topping from '../models/toppings';\nimport util from \"util\";\nimport stringCapitalizeName from 'string-capitalize-name';\nimport { configSortQuery, configRangeQuery } from '../util/util';\n\n\n// List all toppings\n// TODO: use filters in the query req.query\nexport const topping_get_all = (req, res) => {\n    // Getting the sort from the requisition\n\n    var sortObj = req.query.sort ? configSortQuery(req.query.sort) : { topping: 'ASC' };\n\n    if (req.query.range) {\n        var rangeObj = configRangeQuery(req.query.range);\n        const options = {\n            offset: rangeObj['offset'],\n            limit: rangeObj['limit'],\n            sort: sortObj,\n            lean: true,\n            leanWithId: false,\n        };\n        Topping.paginate({}, options, (err, result) => {\n            if (err) {\n                res.status(500).json({ message: err.errmsg });\n            } else {\n                res.setHeader('Content-Range', util.format(\"toppings %d-%d/%d\", rangeObj['offset'] + 1, rangeObj['limit'], result.total));\n                res.status(200).json(result.docs);\n            }\n        });\n    } else {\n        Topping.find((err, result) => {\n            if (err) {\n                res.status(500).json({ message: err.errmsg });\n            } else {\n                res.setHeader('Content-Range', util.format(\"toppings %d-%d/%d\", 1, result.length - 1, result.length));\n                res.status(200).json(result);\n            }\n        });\n    }\n};\n\n// List one record by filtering by ID\nexport const topping_get_one = (req, res) => {\n    if (req.params && req.params.id) {\n        Topping.findOne({ id: req.params.id }, (err, doc) => {\n            if (err) {\n                res.status(500).json({ message: err.errmsg });\n            }\n            else {\n                res.status(200).json({ id: doc.id, topping: doc.topping });\n            }\n        });\n    }\n}\n\n// CREATE A NEW RECORD\nexport const topping_create = (req, res) => {\n    if (req.body) {\n        const newRecord = new Topping({\n            id: req.body.id,\n            topping: stringCapitalizeName(req.body.topping),\n        });\n\n        newRecord.save()\n            .then((result) => {\n                res.status(200).json({\n                    id: result.id,\n                    topping: result.topping,\n                });\n            })\n            .catch((err) => {\n                res.status(500).json({ message: err.errmsg });\n            });\n    }\n}\n\n// UPDATE\nexport const topping_update = (req, res) => {\n    Topping.findOne({ id: req.body.id }, (err, doc) => {\n        if (!err) {\n            doc.topping = stringCapitalizeName(req.body.topping);\n            doc.save((err, doc) => {\n                if (err) {\n                    res.status(500).json({ message: err.errmsg });\n                } else {\n                    res.status(200).json({\n                        id: doc.id,\n                        topping: doc.topping,\n                    });\n                }\n            });\n        } else {\n            res.status(500).json({ message: err.errmsg });\n        }\n    });\n\n\n}\n\n// DELETE\nexport const topping_delete = (req, res) => {\n    Topping.findOneAndRemove({ id: req.params.id })\n        .then((result) => {\n            res.status(200).json({\n                id: result.id,\n                topping: result.topping\n            });\n        })\n        .catch((err) => {\n            res.status(500).json({ message: err.errmsg });\n        });\n};\n\nexport const getToppings = async (toppingsArray) => {\n    var queryTopping = Topping.find({ id: { $in: toppingsArray } });\n    queryTopping.sort('topping');\n    queryTopping.select('topping');\n    return await queryTopping.exec();\n}"],"file":"toppingsController.js"}