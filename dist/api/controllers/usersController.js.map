{"version":3,"sources":["../../../src/api/controllers/usersController.js"],"names":["users_auth","req","res","body","lastInterface","userID","accessToken","user_data","userData","status","id","name","email","picture","locationName","pictureUrl","create_or_auth","access_token","code","_code","user","json","toAuthJSON","message","console","error","errorMsg","users_auth_error","users_code","dotenv","config","_redirect_uri","redirect_uri","info","userByCode","User","findOne","facebookCode","exec","facebookAccessTokenUrl","process","env","FACEBOOK_URL_OAUTH_ACCESS_TOKEN","params","client_id","FACEBOOK_APP_ID","client_secret","FACEBOOK_SECRET_KEY","axios","get","result","data","errMsg","response","url","location","response_data","timeZone","lastLogin","Date","now","shortLivedToken","changeAccessToken","respChangeToken","hasOwnProperty","hasLongLivedToken","longLivedToken","save","createOrAuthErr","users_create","queryUser","foundUser","log","newRecord","then","record","catch","err","users_get_all","rangeObj","query","range","find","errmsg","setHeader","util","format","total","users_get_one","doc","users_update","updatedElement","sanitizeName","findOneAndUpdate","oldResult","newResult","_id","success","msg","users_delete","findOneAndRemove","NODE_ENV","facebook_secret_key","facebook_app_id","DEV_FACEBOOK_APP_ID","DEV_FACEBOOK_SECRET_KEY","grant_type","fb_exchange_token","removeUserActivePage","activePage"],"mappings":"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","sourcesContent":["import User from \"../models/users\";\nimport axios from 'axios';\nimport dotenv from \"dotenv\";\nimport util from \"util\";\nimport { configSortQuery, configRangeQuery } from '../util/util';\n\nexport const users_auth = async (req, res) => {\n    if (req.body) {\n        let lastInterface = 'users_auth';\n        try {\n            const { userID, accessToken } = req.body;\n\n            const userData = await user_data(accessToken);\n            if (userData && userData.status === 200) {\n                const { id, name, email, picture, locationName, pictureUrl } = userData;\n                const user = await create_or_auth({ userID: id, name, email, picture, locationName, pictureUrl, accessToken: access_token, code: _code });\n                if (user) {\n                    res.status(200).json({ user: user.toAuthJSON() });\n                } else {\n                    res.status(500).json({ message: 'Unknown error' });\n                }\n            } else {\n                console.error(userData.errorMsg);\n                res.status(userData.status).json({ message: userData.errorMsg });\n            }\n\n        } catch (users_auth_error) {\n            console.error(lastInterface, { users_auth_error });\n            res.status(500).json({ message: users_auth_error.message });\n        }\n    }\n}\n\nexport const users_code = async (req, res) => {\n    let lastInterface = '';\n\n    dotenv.config();\n\n    try {\n        const _code = req.body.code;\n        const _redirect_uri = req.body.redirect_uri;\n\n        console.info({ _redirect_uri });\n\n        const userByCode = User.findOne({ facebookCode: _code }).exec();\n\n        if (userByCode && userByCode.accessToken) {\n            res.status(200).json({ user: userByCode.toAuthJSON() });\n        } else {\n            const facebookAccessTokenUrl = process.env.FACEBOOK_URL_OAUTH_ACCESS_TOKEN;\n            const params = {\n                client_id: process.env.FACEBOOK_APP_ID,\n                redirect_uri: _redirect_uri,\n                client_secret: process.env.FACEBOOK_SECRET_KEY,\n                code: _code,\n            }\n\n            lastInterface = facebookAccessTokenUrl;\n            const result = await axios.get(facebookAccessTokenUrl, { params });\n            if (result.status === 200) {\n                const { access_token } = result.data;\n                const userData = await user_data(access_token);\n                if (userData && userData.status === 200) {\n                    const { id, name, email, picture, locationName, pictureUrl } = userData;\n                    const user = await create_or_auth({ userID: id, name, email, picture, locationName, pictureUrl, accessToken: access_token, code: _code });\n                    if (user) {\n                        res.status(200).json({ user: user.toAuthJSON() });\n                    } else {\n                        res.status(500).json({ message: 'Unknown error' });\n                    }\n                } else {\n                    console.error(userData.errorMsg);\n                    res.status(userData.status).json({ message: userData.errorMsg });\n                }\n            }\n            else {\n                console.error('Failed ' + lastInterface);\n                console.error(result.data);\n                const errorMsg = result.data.error.message;\n                res.status(result.status).json({ message: errorMsg });\n            }\n        }\n    } catch (err) {\n        console.error({ lastInterface });\n        let errMsg = lastInterface;\n        if (err.response) {\n            if (err.response.data) {\n                console.error(err.response.data);\n                errMsg = err.response.data.error.message;\n            }\n            else console.error(err.response);\n        }\n        else if (err.data) {\n            console.error(err.data);\n            errMsg = err.data.error.message;\n        }\n        res.status(500).json({ message: errMsg })\n    }\n}\n\nconst user_data = async accessToken => {\n    try {\n        const url = `https://graph.facebook.com/v3.2/me?fields=id,name,email,picture,location&access_token=${accessToken}`;\n        const userData = await axios.get(url);\n        if (userData && userData.status === 200) {\n            const { id, name, email, picture, location } = userData.data;\n            const locationName = location ? location.name : null;\n            const pictureUrl = picture ? picture.data.url : null;\n            return { status: userData.status, id, name, email, picture, locationName, pictureUrl };\n        } else {\n            console.error(userData.data);\n            return { status: userData.status, errorMsg: userData.data.error.message };\n        }\n    } catch (err) {\n        console.error({ response_data: err.response.data });\n        return { status: err.response.status, errorMsg: err.response.data.error.message };\n    }\n\n}\n\nconst create_or_auth = async userData => {\n    try {\n        const { userID, name, email, pictureUrl, accessToken, timeZone, locationName, code } = userData;\n\n        let user = await User.findOne({ userID: userID }).exec();\n        if (!user) {\n            user = new User({\n                userID: userID,\n                name: name,\n                email: email,\n                pictureUrl: pictureUrl,\n                accessToken: accessToken,\n                timeZone: timeZone,\n                locationName: locationName,\n            });\n        } else {\n            user.accessToken = accessToken;\n        }\n\n        user.lastLogin = Date.now();\n        user.locationName = locationName;\n        user.shortLivedToken = user.accessToken; // only for debug analysis\n        user.facebookCode = code;\n\n        const respChangeToken = await changeAccessToken(user.accessToken);\n        if (respChangeToken) {\n            if (respChangeToken.hasOwnProperty('data')) {\n                if (respChangeToken.data.hasOwnProperty('access_token')) {\n                    respChangeToken.access_token = respChangeToken.data.access_token;\n                }\n            }\n            user.hasLongLivedToken = true;\n            user.longLivedToken = respChangeToken.access_token; // only for debug analysis\n            user.accessToken = respChangeToken.access_token; // the token used in the system\n        }\n        await user.save();\n        return user;\n    } catch (createOrAuthErr) {\n        console.error({ createOrAuthErr });\n        throw createOrAuthErr;\n    }\n}\n\nexport const users_create = (req, res) => {\n    var queryUser = User.findOne({ userID: req.body.userID });\n    const foundUser = queryUser.exec();\n    console.log(\"users_create\");\n    console.log(foundUser);\n    if (foundUser) {\n        users_auth(req, res);\n    } else {\n        const newRecord = new User({\n            userID: req.body.userID,\n            name: req.body.name,\n            email: req.body.email,\n            pictureUrl: req.body.pictureUrl,\n            accessToken: req.body.accessToken,\n            timeZone: req.body.timeZone,\n        });\n\n        changeAccessToken(newRecord.accessToken)\n            .then((data) => {\n                newRecord.hasLongLivedToken = true;\n                newRecord.accessToken = data.access_token;\n                newRecord.save()\n                    .then(record => res.status(200).json({ user: record.toAuthJSON() }))\n                    .catch((err) => {\n                        console.error(err);\n                        res.status(500).json(err)\n                    });\n            })\n            .catch((err) => {\n                console.error(err);\n                res.status(500).json(err)\n            });\n    }\n}\n\n// List all users\n// TODO: use filters in the query req.query\nexport const users_get_all = (req, res) => {\n    // Getting the sort from the requisition\n    // var sortObj = configSortQuery(req.query.sort);\n    // Getting the range from the requisition\n    var rangeObj = configRangeQuery(req.query.range);\n\n    // let options = {\n    //     offset: rangeObj['offset'],\n    //     limit: rangeObj['limit'],\n    //     sort: sortObj,\n    //     lean: true,\n    //     leanWithId: false,\n    // };\n\n    var query = {};\n\n    // User.paginate(query, options, (err, result) => {\n    User.find((err, result) => {\n        if (err) {\n            res.status(500).json({ message: err.errmsg });\n        } else {\n            res.setHeader('Content-Range', util.format(\"users %d-%d/%d\", rangeObj['offset'], rangeObj['limit'], result.total));\n            res.status(200).json(result);\n        }\n    });\n}\n\n// List one record by filtering by ID\nexport const users_get_one = (req, res) => {\n    if (req.params && req.params.id) {\n\n        User.findOne({ userID: req.params.id }, (err, doc) => {\n            if (err) {\n                res.status(500).json({ message: err.errMsg });\n            }\n            else {\n                res.status(200).json(doc);\n            }\n        });\n    }\n}\n\n// UPDATE\nexport const users_update = (req, res) => {\n    let updatedElement = {\n        id: req.body.id,\n        name: sanitizeName(req.body.name),\n        email: req.body.email,\n    };\n\n    User.findOneAndUpdate({ id: req.params.id }, updatedElement)\n        .then((oldResult) => {\n            User.findOne({ id: req.params.id })\n                .then((newResult) => {\n                    res.json({\n                        data: {\n                            _id: newResult._id,\n                            id: newResult.id,\n                            name: newResult.name,\n                            email: newResult.email,\n                        }\n                    });\n                })\n                .catch((err) => {\n                    console.log(err);\n                    res.status(500).json({ success: false, msg: `Something went wrong. ${err}` });\n                    return;\n                });\n        })\n        .catch((err) => {\n            if (err) {\n                console.log(err);\n                res.status(500).json({ success: false, msg: `Something went wrong. ${err}` });\n            }\n        });\n}\n\n// DELETE\nexport const users_delete = (req, res) => {\n    User.findOneAndRemove({ id: req.params.id })\n        .then((result) => {\n            res.json({\n                success: true,\n                msg: `It has been deleted.`,\n            });\n        })\n        .catch((err) => {\n            res.status(404).json({ success: false, msg: 'Nothing to delete.' });\n        });\n}\n\n\n\nexport const changeAccessToken = async (accessToken) => {\n    try {\n        dotenv.config();\n\n        const env = process.env.NODE_ENV || 'production';\n        let facebook_app_id, facebook_secret_key = '';\n\n        if (env === 'production') {\n            facebook_app_id = process.env.FACEBOOK_APP_ID;\n            facebook_secret_key = process.env.FACEBOOK_SECRET_KEY;\n        } else {\n            facebook_app_id = process.env.DEV_FACEBOOK_APP_ID;\n            facebook_secret_key = process.env.DEV_FACEBOOK_SECRET_KEY;\n        }\n\n        const facebookAccessTokenUrl = process.env.FACEBOOK_URL_OAUTH_ACCESS_TOKEN;\n        const params = {\n            grant_type: 'fb_exchange_token',\n            client_id: facebook_app_id,\n            client_secret: facebook_secret_key,\n            fb_exchange_token: accessToken,\n        }\n        return await axios.get(facebookAccessTokenUrl, { params });\n    } catch (changeAccessTokenError) {\n        console.error({ changeAccessToken });\n        return null;\n    }\n    // return await axios.get(facebookAccessTokenUrl, { params }).then(res => res.data);\n}\n\nexport const removeUserActivePage = async userID => {\n    try {\n        let user = await User.findOne({ userID: userID }).exec();\n        if (user) {\n            user.activePage = null;\n            await user.save();\n            return true;\n        }\n        return false;\n    } catch (removeUserActivePageErr) {\n        console.error(removeUserActivePageErr);\n        throw removeUserActivePageErr;\n    }\n}\n\n"],"file":"usersController.js"}