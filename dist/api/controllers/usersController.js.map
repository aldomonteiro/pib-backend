{"version":3,"sources":["../../../src/api/controllers/usersController.js"],"names":["users_auth","req","res","body","lastInterface","userID","accessToken","axios","get","userData","status","data","id","name","email","picture","location","locationName","pictureUrl","url","create_or_auth","user","json","toAuthJSON","message","console","error","users_auth_error","users_code","_code","code","_redirect_uri","redirect_uri","info","dotenv","config","facebookAccessTokenUrl","process","env","FACEBOOK_URL_OAUTH_ACCESS_TOKEN","params","client_id","FACEBOOK_APP_ID","client_secret","FACEBOOK_SECRET_KEY","result","access_token","errorMsg","errMsg","response","timeZone","User","findOne","exec","lastLogin","Date","now","shortLivedToken","changeAccessToken","respChangeToken","hasOwnProperty","hasLongLivedToken","longLivedToken","save","createOrAuthErr","users_create","queryUser","foundUser","log","newRecord","then","record","catch","err","users_get_all","rangeObj","query","range","find","errmsg","setHeader","util","format","total","users_get_one","doc","users_update","updatedElement","sanitizeName","findOneAndUpdate","oldResult","newResult","_id","success","msg","users_delete","findOneAndRemove","NODE_ENV","facebook_secret_key","facebook_app_id","DEV_FACEBOOK_APP_ID","DEV_FACEBOOK_SECRET_KEY","grant_type","fb_exchange_token","removeUserActivePage","activePage"],"mappings":"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","sourcesContent":["import User from \"../models/users\";\nimport axios from 'axios';\nimport dotenv from \"dotenv\";\nimport util from \"util\";\nimport { configSortQuery, configRangeQuery } from '../util/util';\n\nexport const users_auth = async (req, res) => {\n    if (req.body) {\n        let lastInterface = 'users_auth';\n        try {\n            const { userID, accessToken } = req.body;\n\n            lastInterface = 'https://graph.facebook.com/v3.2/me?fields=id,name,email,picture,location&access_token=';\n            const userData = await axios.get(lastInterface + accessToken);\n            if (userData && userData.status === 200) {\n                const { id, name, email, picture, location } = userData.data;\n                const locationName = location ? location.name : null;\n                const pictureUrl = picture ? picture.data.url : null;\n                lastInterface = 'create_or_auth';\n                const user = await create_or_auth({ userID: id, name, email, picture, locationName, pictureUrl, accessToken });\n                if (user) {\n                    res.status(200).json({ user: user.toAuthJSON() });\n                } else {\n                    res.status(500).json({ message: 'Unknown error' });\n                }\n            }\n            else {\n                console.error(userData.status, userData.data);\n                res.status(500).json({ message: userData.data.error.message });\n            }\n        } catch (users_auth_error) {\n            console.error(lastInterface, { users_auth_error });\n            res.status(500).json({ message: users_auth_error.message });\n        }\n    }\n}\n\nexport const users_code = async (req, res) => {\n    let lastInterface = '';\n    try {\n        const _code = req.body.code;\n        const _redirect_uri = req.body.redirect_uri;\n\n        console.info({ _redirect_uri });\n\n        dotenv.config();\n\n        const facebookAccessTokenUrl = process.env.FACEBOOK_URL_OAUTH_ACCESS_TOKEN;\n        const params = {\n            client_id: process.env.FACEBOOK_APP_ID,\n            redirect_uri: _redirect_uri,\n            client_secret: process.env.FACEBOOK_SECRET_KEY,\n            code: _code,\n        }\n\n        lastInterface = facebookAccessTokenUrl;\n        const result = await axios.get(facebookAccessTokenUrl, { params });\n        if (result.status === 200) {\n            const { access_token } = result.data;\n            lastInterface = 'https://graph.facebook.com/v3.2/me?fields=id,name,email,picture,location&access_token=';\n            const userData = await axios.get(lastInterface + access_token);\n            if (userData && userData.status === 200) {\n                const { id, name, email, picture, location } = userData.data;\n                const locationName = location ? location.name : null;\n                const pictureUrl = picture ? picture.data.url : null;\n                lastInterface = 'create_or_auth';\n                const user = await create_or_auth({ userID: id, name, email, picture, locationName, pictureUrl, accessToken: access_token, code: _code });\n                if (user) {\n                    res.status(200).json({ user: user.toAuthJSON() });\n                } else {\n                    res.status(500).json({ message: 'Unknown error' });\n                }\n            } else {\n                console.error(userData.data);\n                const errorMsg = userData.data.error.message;\n                res.status(userData.status).json({ message: errorMsg });\n            }\n        }\n        else {\n            console.error('Failed ' + lastInterface);\n            console.error(result.data);\n            const errorMsg = result.data.error.message;\n            res.status(result.status).json({ message: errorMsg });\n        }\n    } catch (err) {\n        console.error({ lastInterface });\n        let errMsg = lastInterface;\n        if (err.response) {\n            if (err.response.data) {\n                console.error(err.response.data);\n                errMsg = err.response.data.error.message;\n            }\n            else console.error(err.response);\n        }\n        else if (err.data) {\n            console.error(err.data);\n            errMsg = err.data.error.message;\n        }\n        res.status(500).json({ message: errMsg })\n    }\n}\n\nconst create_or_auth = async userData => {\n    try {\n        const { userID, name, email, pictureUrl, accessToken, timeZone, locationName } = userData;\n\n        let user = await User.findOne({ userID: userID }).exec();\n        if (!user) {\n            user = new User({\n                userID: userID,\n                name: name,\n                email: email,\n                pictureUrl: pictureUrl,\n                accessToken: accessToken,\n                timeZone: timeZone,\n                locationName: locationName,\n            });\n        } else {\n            user.accessToken = accessToken;\n        }\n\n        user.lastLogin = Date.now();\n        user.locationName = locationName;\n        user.shortLivedToken = user.accessToken; // only for debug analysis\n\n        const respChangeToken = await changeAccessToken(user.accessToken);\n        if (respChangeToken) {\n            if (respChangeToken.hasOwnProperty('data')) {\n                if (respChangeToken.data.hasOwnProperty('access_token')) {\n                    respChangeToken.access_token = respChangeToken.data.access_token;\n                }\n            }\n            user.hasLongLivedToken = true;\n            user.longLivedToken = respChangeToken.access_token; // only for debug analysis\n            user.accessToken = respChangeToken.access_token; // the token used in the system\n        }\n        await user.save();\n        return user;\n    } catch (createOrAuthErr) {\n        console.error({ createOrAuthErr });\n        throw createOrAuthErr;\n    }\n}\n\nexport const users_create = (req, res) => {\n    var queryUser = User.findOne({ userID: req.body.userID });\n    const foundUser = queryUser.exec();\n    console.log(\"users_create\");\n    console.log(foundUser);\n    if (foundUser) {\n        users_auth(req, res);\n    } else {\n        const newRecord = new User({\n            userID: req.body.userID,\n            name: req.body.name,\n            email: req.body.email,\n            pictureUrl: req.body.pictureUrl,\n            accessToken: req.body.accessToken,\n            timeZone: req.body.timeZone,\n        });\n\n        changeAccessToken(newRecord.accessToken)\n            .then((data) => {\n                newRecord.hasLongLivedToken = true;\n                newRecord.accessToken = data.access_token;\n                newRecord.save()\n                    .then(record => res.status(200).json({ user: record.toAuthJSON() }))\n                    .catch((err) => {\n                        console.error(err);\n                        res.status(500).json(err)\n                    });\n            })\n            .catch((err) => {\n                console.error(err);\n                res.status(500).json(err)\n            });\n    }\n}\n\n// List all users\n// TODO: use filters in the query req.query\nexport const users_get_all = (req, res) => {\n    // Getting the sort from the requisition\n    // var sortObj = configSortQuery(req.query.sort);\n    // Getting the range from the requisition\n    var rangeObj = configRangeQuery(req.query.range);\n\n    // let options = {\n    //     offset: rangeObj['offset'],\n    //     limit: rangeObj['limit'],\n    //     sort: sortObj,\n    //     lean: true,\n    //     leanWithId: false,\n    // };\n\n    var query = {};\n\n    // User.paginate(query, options, (err, result) => {\n    User.find((err, result) => {\n        if (err) {\n            res.status(500).json({ message: err.errmsg });\n        } else {\n            res.setHeader('Content-Range', util.format(\"users %d-%d/%d\", rangeObj['offset'], rangeObj['limit'], result.total));\n            res.status(200).json(result);\n        }\n    });\n}\n\n// List one record by filtering by ID\nexport const users_get_one = (req, res) => {\n    if (req.params && req.params.id) {\n\n        User.findOne({ userID: req.params.id }, (err, doc) => {\n            if (err) {\n                res.status(500).json({ message: err.errMsg });\n            }\n            else {\n                res.status(200).json(doc);\n            }\n        });\n    }\n}\n\n// UPDATE\nexport const users_update = (req, res) => {\n    let updatedElement = {\n        id: req.body.id,\n        name: sanitizeName(req.body.name),\n        email: req.body.email,\n    };\n\n    User.findOneAndUpdate({ id: req.params.id }, updatedElement)\n        .then((oldResult) => {\n            User.findOne({ id: req.params.id })\n                .then((newResult) => {\n                    res.json({\n                        data: {\n                            _id: newResult._id,\n                            id: newResult.id,\n                            name: newResult.name,\n                            email: newResult.email,\n                        }\n                    });\n                })\n                .catch((err) => {\n                    console.log(err);\n                    res.status(500).json({ success: false, msg: `Something went wrong. ${err}` });\n                    return;\n                });\n        })\n        .catch((err) => {\n            if (err) {\n                console.log(err);\n                res.status(500).json({ success: false, msg: `Something went wrong. ${err}` });\n            }\n        });\n}\n\n// DELETE\nexport const users_delete = (req, res) => {\n    User.findOneAndRemove({ id: req.params.id })\n        .then((result) => {\n            res.json({\n                success: true,\n                msg: `It has been deleted.`,\n            });\n        })\n        .catch((err) => {\n            res.status(404).json({ success: false, msg: 'Nothing to delete.' });\n        });\n}\n\n\n\nexport const changeAccessToken = async (accessToken) => {\n    try {\n        dotenv.config();\n\n        const env = process.env.NODE_ENV || 'production';\n        let facebook_app_id, facebook_secret_key = '';\n\n        if (env === 'production') {\n            facebook_app_id = process.env.FACEBOOK_APP_ID;\n            facebook_secret_key = process.env.FACEBOOK_SECRET_KEY;\n        } else {\n            facebook_app_id = process.env.DEV_FACEBOOK_APP_ID;\n            facebook_secret_key = process.env.DEV_FACEBOOK_SECRET_KEY;\n        }\n\n        const facebookAccessTokenUrl = process.env.FACEBOOK_URL_OAUTH_ACCESS_TOKEN;\n        const params = {\n            grant_type: 'fb_exchange_token',\n            client_id: facebook_app_id,\n            client_secret: facebook_secret_key,\n            fb_exchange_token: accessToken,\n        }\n        return await axios.get(facebookAccessTokenUrl, { params });\n    } catch (changeAccessTokenError) {\n        console.error({ changeAccessToken });\n        return null;\n    }\n    // return await axios.get(facebookAccessTokenUrl, { params }).then(res => res.data);\n}\n\nexport const removeUserActivePage = async userID => {\n    try {\n        let user = await User.findOne({ userID: userID }).exec();\n        if (user) {\n            user.activePage = null;\n            await user.save();\n            return true;\n        }\n        return false;\n    } catch (removeUserActivePageErr) {\n        console.error(removeUserActivePageErr);\n        throw removeUserActivePageErr;\n    }\n}\n\n"],"file":"usersController.js"}