{"version":3,"sources":["../../../src/api/controllers/usersController.js"],"names":["users_auth","req","res","body","User","findOne","userID","err","foundUser","status","json","lastLogin","Date","now","locationName","changeAccessToken","accessToken","then","data","hasLongLivedToken","access_token","save","user","toAuthJSON","catch","console","log","response","newRecord","name","email","pictureUrl","timeZone","record","error","users_create","queryUser","exec","users_get_all","rangeObj","query","range","find","result","message","errmsg","setHeader","util","format","total","users_get_one","params","id","doc","errMsg","users_update","updatedElement","sanitizeName","findOneAndUpdate","oldResult","newResult","_id","success","msg","users_delete","findOneAndRemove","dotenv","config","facebookAccessTokenUrl","process","env","FACEBOOK_URL_OAUTH_ACCESS_TOKEN","grant_type","client_id","FACEBOOK_APP_ID","client_secret","FACEBOOK_SECRET_KEY","fb_exchange_token","axios","get"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEO,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAMC,GAAN,EAAc;AACpC,MAAID,GAAG,CAACE,IAAR,EAAc;AAEVC,mBAAKC,OAAL,CAAa;AAAEC,MAAAA,MAAM,EAAEL,GAAG,CAACE,IAAJ,CAASG;AAAnB,KAAb,EAA0C,UAACC,GAAD,EAAMC,SAAN,EAAoB;AAC1D,UAAID,GAAJ,EAAS;AACLL,QAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,GAArB;AACA;AACH;;AAED,UAAIC,SAAJ,EAAe;AACXA,QAAAA,SAAS,CAACG,SAAV,GAAsBC,IAAI,CAACC,GAAL,EAAtB;AACAL,QAAAA,SAAS,CAACM,YAAV,GAAyBb,GAAG,CAACE,IAAJ,CAASW,YAAlC,CAFW,CAGX;;AACAC,QAAAA,iBAAiB,CAACP,SAAS,CAACQ,WAAX,CAAjB,CAAyCC,IAAzC,CAA8C,UAAAC,IAAI,EAAI;AAClDV,UAAAA,SAAS,CAACW,iBAAV,GAA8B,IAA9B;AACAX,UAAAA,SAAS,CAACQ,WAAV,GAAwBE,IAAI,CAACE,YAA7B;AACAZ,UAAAA,SAAS,CAACa,IAAV;AACAnB,UAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEY,YAAAA,IAAI,EAAEd,SAAS,CAACe,UAAV;AAAR,WAArB;AACH,SALD,EAKGC,KALH,CAKS,UAAAjB,GAAG;AAAA,iBAAIkB,OAAO,CAACC,GAAR,CAAYnB,GAAG,CAACoB,QAAJ,CAAaT,IAAzB,CAAJ;AAAA,SALZ,EAJW,CAUX;AACA;AACA;AACA;AACH,OAdD,MAcO;AACH,YAAMU,SAAS,GAAG,IAAIxB,cAAJ,CAAS;AACvBE,UAAAA,MAAM,EAAEL,GAAG,CAACE,IAAJ,CAASG,MADM;AAEvBuB,UAAAA,IAAI,EAAE5B,GAAG,CAACE,IAAJ,CAAS0B,IAFQ;AAGvBC,UAAAA,KAAK,EAAE7B,GAAG,CAACE,IAAJ,CAAS2B,KAHO;AAIvBC,UAAAA,UAAU,EAAE9B,GAAG,CAACE,IAAJ,CAAS4B,UAJE;AAKvBf,UAAAA,WAAW,EAAEf,GAAG,CAACE,IAAJ,CAASa,WALC;AAMvBgB,UAAAA,QAAQ,EAAE/B,GAAG,CAACE,IAAJ,CAAS6B,QANI;AAOvBlB,UAAAA,YAAY,EAAEb,GAAG,CAACE,IAAJ,CAASW;AAPA,SAAT,CAAlB;AAUAC,QAAAA,iBAAiB,CAACa,SAAS,CAACZ,WAAX,CAAjB,CACKC,IADL,CACU,UAAAC,IAAI,EAAI;AACVU,UAAAA,SAAS,CAACT,iBAAV,GAA8B,IAA9B;AACAS,UAAAA,SAAS,CAACZ,WAAV,GAAwBE,IAAI,CAACE,YAA7B;AACAQ,UAAAA,SAAS,CAACP,IAAV,GACKJ,IADL,CACU,UAAAgB,MAAM;AAAA,mBAAI/B,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEY,cAAAA,IAAI,EAAEW,MAAM,CAACV,UAAP;AAAR,aAArB,CAAJ;AAAA,WADhB,EAEKC,KAFL,CAEW,UAACjB,GAAD,EAAS;AACZkB,YAAAA,OAAO,CAACS,KAAR,CAAc3B,GAAd;AACAL,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,GAArB;AACH,WALL;AAMH,SAVL,EAWKiB,KAXL,CAWW,UAACjB,GAAD,EAAS;AACZkB,UAAAA,OAAO,CAACS,KAAR,CAAc3B,GAAd;AACAL,UAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,GAArB;AACH,SAdL;AAeH;AACJ,KA/CD;AAgDH;AACJ,CApDM;;;;AAsDA,IAAM4B,YAAY,GAAG,SAAfA,YAAe,CAAClC,GAAD,EAAMC,GAAN,EAAc;AACtC,MAAIkC,SAAS,GAAGhC,eAAKC,OAAL,CAAa;AAAEC,IAAAA,MAAM,EAAEL,GAAG,CAACE,IAAJ,CAASG;AAAnB,GAAb,CAAhB;;AACA,MAAME,SAAS,GAAG4B,SAAS,CAACC,IAAV,EAAlB;AACAZ,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYlB,SAAZ;;AACA,MAAIA,SAAJ,EAAe;AACXR,IAAAA,UAAU,CAACC,GAAD,EAAMC,GAAN,CAAV;AACH,GAFD,MAEO;AACH,QAAM0B,SAAS,GAAG,IAAIxB,cAAJ,CAAS;AACvBE,MAAAA,MAAM,EAAEL,GAAG,CAACE,IAAJ,CAASG,MADM;AAEvBuB,MAAAA,IAAI,EAAE5B,GAAG,CAACE,IAAJ,CAAS0B,IAFQ;AAGvBC,MAAAA,KAAK,EAAE7B,GAAG,CAACE,IAAJ,CAAS2B,KAHO;AAIvBC,MAAAA,UAAU,EAAE9B,GAAG,CAACE,IAAJ,CAAS4B,UAJE;AAKvBf,MAAAA,WAAW,EAAEf,GAAG,CAACE,IAAJ,CAASa,WALC;AAMvBgB,MAAAA,QAAQ,EAAE/B,GAAG,CAACE,IAAJ,CAAS6B;AANI,KAAT,CAAlB;AASAjB,IAAAA,iBAAiB,CAACa,SAAS,CAACZ,WAAX,CAAjB,CACKC,IADL,CACU,UAACC,IAAD,EAAU;AACZU,MAAAA,SAAS,CAACT,iBAAV,GAA8B,IAA9B;AACAS,MAAAA,SAAS,CAACZ,WAAV,GAAwBE,IAAI,CAACE,YAA7B;AACAQ,MAAAA,SAAS,CAACP,IAAV,GACKJ,IADL,CACU,UAAAgB,MAAM;AAAA,eAAI/B,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEY,UAAAA,IAAI,EAAEW,MAAM,CAACV,UAAP;AAAR,SAArB,CAAJ;AAAA,OADhB,EAEKC,KAFL,CAEW,UAACjB,GAAD,EAAS;AACZkB,QAAAA,OAAO,CAACS,KAAR,CAAc3B,GAAd;AACAL,QAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,GAArB;AACH,OALL;AAMH,KAVL,EAWKiB,KAXL,CAWW,UAACjB,GAAD,EAAS;AACZkB,MAAAA,OAAO,CAACS,KAAR,CAAc3B,GAAd;AACAL,MAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,GAArB;AACH,KAdL;AAeH;AACJ,CAjCM,C,CAmCP;AACA;;;;;AACO,IAAM+B,aAAa,GAAG,SAAhBA,aAAgB,CAACrC,GAAD,EAAMC,GAAN,EAAc;AACvC;AACA;AACA;AACA,MAAIqC,QAAQ,GAAG,6BAAiBtC,GAAG,CAACuC,KAAJ,CAAUC,KAA3B,CAAf,CAJuC,CAMvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAID,KAAK,GAAG,EAAZ,CAduC,CAgBvC;;AACApC,iBAAKsC,IAAL,CAAU,UAACnC,GAAD,EAAMoC,MAAN,EAAiB;AACvB,QAAIpC,GAAJ,EAAS;AACLL,MAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEkC,QAAAA,OAAO,EAAErC,GAAG,CAACsC;AAAf,OAArB;AACH,KAFD,MAEO;AACH3C,MAAAA,GAAG,CAAC4C,SAAJ,CAAc,eAAd,EAA+BC,cAAKC,MAAL,CAAY,gBAAZ,EAA8BT,QAAQ,CAAC,QAAD,CAAtC,EAAkDA,QAAQ,CAAC,OAAD,CAA1D,EAAqEI,MAAM,CAACM,KAA5E,CAA/B;AACA/C,MAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBiC,MAArB;AACH;AACJ,GAPD;AAQH,CAzBM,C,CA2BP;;;;;AACO,IAAMO,aAAa,GAAG,SAAhBA,aAAgB,CAACjD,GAAD,EAAMC,GAAN,EAAc;AACvC,MAAID,GAAG,CAACkD,MAAJ,IAAclD,GAAG,CAACkD,MAAJ,CAAWC,EAA7B,EAAiC;AAE7BhD,mBAAKC,OAAL,CAAa;AAAEC,MAAAA,MAAM,EAAEL,GAAG,CAACkD,MAAJ,CAAWC;AAArB,KAAb,EAAwC,UAAC7C,GAAD,EAAM8C,GAAN,EAAc;AAClD,UAAI9C,GAAJ,EAAS;AACLL,QAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEkC,UAAAA,OAAO,EAAErC,GAAG,CAAC+C;AAAf,SAArB;AACH,OAFD,MAGK;AACDpD,QAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB2C,GAArB;AACH;AACJ,KAPD;AAQH;AACJ,CAZM,C,CAcP;;;;;AACO,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACtD,GAAD,EAAMC,GAAN,EAAc;AACtC,MAAIsD,cAAc,GAAG;AACjBJ,IAAAA,EAAE,EAAEnD,GAAG,CAACE,IAAJ,CAASiD,EADI;AAEjBvB,IAAAA,IAAI,EAAE4B,YAAY,CAACxD,GAAG,CAACE,IAAJ,CAAS0B,IAAV,CAFD;AAGjBC,IAAAA,KAAK,EAAE7B,GAAG,CAACE,IAAJ,CAAS2B;AAHC,GAArB;;AAMA1B,iBAAKsD,gBAAL,CAAsB;AAAEN,IAAAA,EAAE,EAAEnD,GAAG,CAACkD,MAAJ,CAAWC;AAAjB,GAAtB,EAA6CI,cAA7C,EACKvC,IADL,CACU,UAAC0C,SAAD,EAAe;AACjBvD,mBAAKC,OAAL,CAAa;AAAE+C,MAAAA,EAAE,EAAEnD,GAAG,CAACkD,MAAJ,CAAWC;AAAjB,KAAb,EACKnC,IADL,CACU,UAAC2C,SAAD,EAAe;AACjB1D,MAAAA,GAAG,CAACQ,IAAJ,CAAS;AACLQ,QAAAA,IAAI,EAAE;AACF2C,UAAAA,GAAG,EAAED,SAAS,CAACC,GADb;AAEFT,UAAAA,EAAE,EAAEQ,SAAS,CAACR,EAFZ;AAGFvB,UAAAA,IAAI,EAAE+B,SAAS,CAAC/B,IAHd;AAIFC,UAAAA,KAAK,EAAE8B,SAAS,CAAC9B;AAJf;AADD,OAAT;AAQH,KAVL,EAWKN,KAXL,CAWW,UAACjB,GAAD,EAAS;AACZkB,MAAAA,OAAO,CAACC,GAAR,CAAYnB,GAAZ;AACAL,MAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEoD,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,GAAG,kCAA2BxD,GAA3B;AAArB,OAArB;AACA;AACH,KAfL;AAgBH,GAlBL,EAmBKiB,KAnBL,CAmBW,UAACjB,GAAD,EAAS;AACZ,QAAIA,GAAJ,EAAS;AACLkB,MAAAA,OAAO,CAACC,GAAR,CAAYnB,GAAZ;AACAL,MAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEoD,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,GAAG,kCAA2BxD,GAA3B;AAArB,OAArB;AACH;AACJ,GAxBL;AAyBH,CAhCM,C,CAkCP;;;;;AACO,IAAMyD,YAAY,GAAG,SAAfA,YAAe,CAAC/D,GAAD,EAAMC,GAAN,EAAc;AACtCE,iBAAK6D,gBAAL,CAAsB;AAAEb,IAAAA,EAAE,EAAEnD,GAAG,CAACkD,MAAJ,CAAWC;AAAjB,GAAtB,EACKnC,IADL,CACU,UAAC0B,MAAD,EAAY;AACdzC,IAAAA,GAAG,CAACQ,IAAJ,CAAS;AACLoD,MAAAA,OAAO,EAAE,IADJ;AAELC,MAAAA,GAAG;AAFE,KAAT;AAIH,GANL,EAOKvC,KAPL,CAOW,UAACjB,GAAD,EAAS;AACZL,IAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEoD,MAAAA,OAAO,EAAE,KAAX;AAAkBC,MAAAA,GAAG,EAAE;AAAvB,KAArB;AACH,GATL;AAUH,CAXM;;;;AAeA,IAAMhD,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAE7BkD,4BAAOC,MAAP;;AAEMC,YAAAA,sBAJuB,GAIEC,OAAO,CAACC,GAAR,CAAYC,+BAJd;AAKvBpB,YAAAA,MALuB,GAKd;AACXqB,cAAAA,UAAU,EAAE,mBADD;AAEXC,cAAAA,SAAS,EAAEJ,OAAO,CAACC,GAAR,CAAYI,eAFZ;AAGXC,cAAAA,aAAa,EAAEN,OAAO,CAACC,GAAR,CAAYM,mBAHhB;AAIXC,cAAAA,iBAAiB,EAAE7D;AAJR,aALc;AAAA;AAAA,mBAYhB8D,eAAMC,GAAN,CAAUX,sBAAV,EAAkC;AAAEjB,cAAAA,MAAM,EAANA;AAAF,aAAlC,EAA8ClC,IAA9C,CAAmD,UAAAf,GAAG;AAAA,qBAAIA,GAAG,CAACgB,IAAR;AAAA,aAAtD,CAZgB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAjBH,iBAAiB;AAAA;AAAA;AAAA,GAAvB","sourcesContent":["import User from \"../models/users\";\nimport axios from 'axios';\nimport dotenv from \"dotenv\";\nimport util from \"util\";\nimport { configSortQuery, configRangeQuery } from '../util/util';\n\nexport const users_auth = (req, res) => {\n    if (req.body) {\n\n        User.findOne({ userID: req.body.userID }, (err, foundUser) => {\n            if (err) {\n                res.status(500).json(err);\n                return;\n            }\n\n            if (foundUser) {\n                foundUser.lastLogin = Date.now();\n                foundUser.locationName = req.body.locationName;\n                // if (!foundUser.hasLongLivedToken) {\n                changeAccessToken(foundUser.accessToken).then(data => {\n                    foundUser.hasLongLivedToken = true;\n                    foundUser.accessToken = data.access_token;\n                    foundUser.save();\n                    res.status(200).json({ user: foundUser.toAuthJSON() });\n                }).catch(err => console.log(err.response.data));\n                // } else {\n                //     foundUser.save();\n                //     res.status(200).json({ user: foundUser.toAuthJSON() });\n                // }\n            } else {\n                const newRecord = new User({\n                    userID: req.body.userID,\n                    name: req.body.name,\n                    email: req.body.email,\n                    pictureUrl: req.body.pictureUrl,\n                    accessToken: req.body.accessToken,\n                    timeZone: req.body.timeZone,\n                    locationName: req.body.locationName,\n                });\n\n                changeAccessToken(newRecord.accessToken)\n                    .then(data => {\n                        newRecord.hasLongLivedToken = true;\n                        newRecord.accessToken = data.access_token;\n                        newRecord.save()\n                            .then(record => res.status(200).json({ user: record.toAuthJSON() }))\n                            .catch((err) => {\n                                console.error(err);\n                                res.status(500).json(err)\n                            });\n                    })\n                    .catch((err) => {\n                        console.error(err);\n                        res.status(500).json(err)\n                    });\n            }\n        });\n    }\n}\n\nexport const users_create = (req, res) => {\n    var queryUser = User.findOne({ userID: req.body.userID });\n    const foundUser = queryUser.exec();\n    console.log(\"users_create\");\n    console.log(foundUser);\n    if (foundUser) {\n        users_auth(req, res);\n    } else {\n        const newRecord = new User({\n            userID: req.body.userID,\n            name: req.body.name,\n            email: req.body.email,\n            pictureUrl: req.body.pictureUrl,\n            accessToken: req.body.accessToken,\n            timeZone: req.body.timeZone,\n        });\n\n        changeAccessToken(newRecord.accessToken)\n            .then((data) => {\n                newRecord.hasLongLivedToken = true;\n                newRecord.accessToken = data.access_token;\n                newRecord.save()\n                    .then(record => res.status(200).json({ user: record.toAuthJSON() }))\n                    .catch((err) => {\n                        console.error(err);\n                        res.status(500).json(err)\n                    });\n            })\n            .catch((err) => {\n                console.error(err);\n                res.status(500).json(err)\n            });\n    }\n}\n\n// List all users\n// TODO: use filters in the query req.query\nexport const users_get_all = (req, res) => {\n    // Getting the sort from the requisition\n    // var sortObj = configSortQuery(req.query.sort);\n    // Getting the range from the requisition\n    var rangeObj = configRangeQuery(req.query.range);\n\n    // let options = {\n    //     offset: rangeObj['offset'],\n    //     limit: rangeObj['limit'],\n    //     sort: sortObj,\n    //     lean: true,\n    //     leanWithId: false,\n    // };\n\n    var query = {};\n\n    // User.paginate(query, options, (err, result) => {\n    User.find((err, result) => {\n        if (err) {\n            res.status(500).json({ message: err.errmsg });\n        } else {\n            res.setHeader('Content-Range', util.format(\"users %d-%d/%d\", rangeObj['offset'], rangeObj['limit'], result.total));\n            res.status(200).json(result);\n        }\n    });\n}\n\n// List one record by filtering by ID\nexport const users_get_one = (req, res) => {\n    if (req.params && req.params.id) {\n\n        User.findOne({ userID: req.params.id }, (err, doc) => {\n            if (err) {\n                res.status(500).json({ message: err.errMsg });\n            }\n            else {\n                res.status(200).json(doc);\n            }\n        });\n    }\n}\n\n// UPDATE\nexport const users_update = (req, res) => {\n    let updatedElement = {\n        id: req.body.id,\n        name: sanitizeName(req.body.name),\n        email: req.body.email,\n    };\n\n    User.findOneAndUpdate({ id: req.params.id }, updatedElement)\n        .then((oldResult) => {\n            User.findOne({ id: req.params.id })\n                .then((newResult) => {\n                    res.json({\n                        data: {\n                            _id: newResult._id,\n                            id: newResult.id,\n                            name: newResult.name,\n                            email: newResult.email,\n                        }\n                    });\n                })\n                .catch((err) => {\n                    console.log(err);\n                    res.status(500).json({ success: false, msg: `Something went wrong. ${err}` });\n                    return;\n                });\n        })\n        .catch((err) => {\n            if (err) {\n                console.log(err);\n                res.status(500).json({ success: false, msg: `Something went wrong. ${err}` });\n            }\n        });\n}\n\n// DELETE\nexport const users_delete = (req, res) => {\n    User.findOneAndRemove({ id: req.params.id })\n        .then((result) => {\n            res.json({\n                success: true,\n                msg: `It has been deleted.`,\n            });\n        })\n        .catch((err) => {\n            res.status(404).json({ success: false, msg: 'Nothing to delete.' });\n        });\n}\n\n\n\nexport const changeAccessToken = async (accessToken) => {\n\n    dotenv.config();\n\n    const facebookAccessTokenUrl = process.env.FACEBOOK_URL_OAUTH_ACCESS_TOKEN;\n    const params = {\n        grant_type: 'fb_exchange_token',\n        client_id: process.env.FACEBOOK_APP_ID,\n        client_secret: process.env.FACEBOOK_SECRET_KEY,\n        fb_exchange_token: accessToken,\n    }\n\n    return await axios.get(facebookAccessTokenUrl, { params }).then(res => res.data);\n}\n\n"],"file":"usersController.js"}