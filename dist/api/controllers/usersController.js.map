{"version":3,"sources":["../../../src/api/controllers/usersController.js"],"names":["users_auth","req","res","body","create_or_auth","user","status","json","toAuthJSON","console","error","users_auth_error","message","users_code","_code","code","_redirect_uri","redirect_uri","info","dotenv","config","facebookAccessTokenUrl","process","env","FACEBOOK_URL_OAUTH_ACCESS_TOKEN","params","client_id","FACEBOOK_APP_ID","client_secret","FACEBOOK_SECRET_KEY","axios","get","result","access_token","data","userData","id","name","email","picture","location","locationName","pictureUrl","url","userID","accessToken","response","errorMsg","timeZone","User","findOne","exec","lastLogin","Date","now","shortLivedToken","changeAccessToken","respChangeToken","hasOwnProperty","hasLongLivedToken","longLivedToken","save","users_create","queryUser","foundUser","log","newRecord","then","record","catch","err","users_get_all","rangeObj","query","range","find","errmsg","setHeader","util","format","total","users_get_one","doc","errMsg","users_update","updatedElement","sanitizeName","findOneAndUpdate","oldResult","newResult","_id","success","msg","users_delete","findOneAndRemove","NODE_ENV","facebook_secret_key","facebook_app_id","DEV_FACEBOOK_APP_ID","DEV_FACEBOOK_SECRET_KEY","grant_type","fb_exchange_token","removeUserActivePage","activePage"],"mappings":"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","sourcesContent":["import User from \"../models/users\";\nimport axios from 'axios';\nimport dotenv from \"dotenv\";\nimport util from \"util\";\nimport { configSortQuery, configRangeQuery } from '../util/util';\n\nexport const users_auth = async (req, res) => {\n    if (req.body) {\n        try {\n            const user = await create_or_auth(req.body);\n            res.status(200).json({ user: user.toAuthJSON() });\n        } catch (users_auth_error) {\n            console.error({ users_auth_error });\n            res.status(500).json({ message: users_auth_error.message });\n        }\n    }\n}\n\nexport const users_code = async (req, res) => {\n    try {\n        const _code = req.body.code;\n        const _redirect_uri = req.body.redirect_uri;\n\n        console.info({ _redirect_uri });\n\n        dotenv.config();\n\n        const facebookAccessTokenUrl = process.env.FACEBOOK_URL_OAUTH_ACCESS_TOKEN;\n        const params = {\n            client_id: process.env.FACEBOOK_APP_ID,\n            redirect_uri: _redirect_uri,\n            client_secret: process.env.FACEBOOK_SECRET_KEY,\n            code: _code,\n        }\n\n        const result = await axios.get(facebookAccessTokenUrl, { params });\n        if (result.status === 200) {\n            const { access_token } = result.data;\n            const userData = await axios.get('https://graph.facebook.com/v3.2/me?fields=id,name,email,picture,location&access_token=' + access_token);\n            if (userData && userData.status === 200) {\n                const { id, name, email, picture, location } = userData;\n                const locationName = location ? location.name : null;\n                const pictureUrl = picture ? picture.data.url : null;\n\n                const user = await create_or_auth({ userID: id, name, email, picture, locationName, pictureUrl, accessToken: access_token });\n                res.status(200).json({ user: user.toAuthJSON() });\n            } else {\n                console.error(userData.response && userData.data);\n                const errorMsg = userData.response ? userData.response.data.error.message : userData.data ? userData.data.error.message : 'Unknown error';\n                res.status(userData.status).json({ message: errorMsg });\n            }\n        }\n        else {\n            console.error(result.response && response.data);\n            const errorMsg = result.response ? result.response.data.error.message : result.data ? result.data.error.message : 'Unknown error';\n            res.status(result.status).json({ message: errorMsg });\n        }\n    } catch (err) {\n        console.error(err.response);\n        console.error(err.response.data.error);\n        res.status(500).json({ message: err.response.data.error.message })\n    }\n}\n\nconst create_or_auth = async userData => {\n    const { userID, name, email, pictureUrl, accessToken, timeZone, locationName } = userData;\n\n    let user = await User.findOne({ userID: userID }).exec();\n    if (!user) {\n        user = new User({\n            userID: userID,\n            name: name,\n            email: email,\n            pictureUrl: pictureUrl,\n            accessToken: accessToken,\n            timeZone: timeZone,\n            locationName: locationName,\n        });\n    } else {\n        user.accessToken = accessToken;\n    }\n\n    user.lastLogin = Date.now();\n    user.locationName = locationName;\n    user.shortLivedToken = user.accessToken; // only for debug analysis\n\n    const respChangeToken = await changeAccessToken(user.accessToken);\n    if (respChangeToken) {\n        if (respChangeToken.hasOwnProperty('data')) {\n            if (respChangeToken.data.hasOwnProperty('access_token')) {\n                respChangeToken.access_token = respChangeToken.data.access_token;\n            }\n        }\n        user.hasLongLivedToken = true;\n        user.longLivedToken = respChangeToken.access_token; // only for debug analysis\n        user.accessToken = respChangeToken.access_token; // the token used in the system\n    }\n    await user.save();\n    return user;\n}\n\nexport const users_create = (req, res) => {\n    var queryUser = User.findOne({ userID: req.body.userID });\n    const foundUser = queryUser.exec();\n    console.log(\"users_create\");\n    console.log(foundUser);\n    if (foundUser) {\n        users_auth(req, res);\n    } else {\n        const newRecord = new User({\n            userID: req.body.userID,\n            name: req.body.name,\n            email: req.body.email,\n            pictureUrl: req.body.pictureUrl,\n            accessToken: req.body.accessToken,\n            timeZone: req.body.timeZone,\n        });\n\n        changeAccessToken(newRecord.accessToken)\n            .then((data) => {\n                newRecord.hasLongLivedToken = true;\n                newRecord.accessToken = data.access_token;\n                newRecord.save()\n                    .then(record => res.status(200).json({ user: record.toAuthJSON() }))\n                    .catch((err) => {\n                        console.error(err);\n                        res.status(500).json(err)\n                    });\n            })\n            .catch((err) => {\n                console.error(err);\n                res.status(500).json(err)\n            });\n    }\n}\n\n// List all users\n// TODO: use filters in the query req.query\nexport const users_get_all = (req, res) => {\n    // Getting the sort from the requisition\n    // var sortObj = configSortQuery(req.query.sort);\n    // Getting the range from the requisition\n    var rangeObj = configRangeQuery(req.query.range);\n\n    // let options = {\n    //     offset: rangeObj['offset'],\n    //     limit: rangeObj['limit'],\n    //     sort: sortObj,\n    //     lean: true,\n    //     leanWithId: false,\n    // };\n\n    var query = {};\n\n    // User.paginate(query, options, (err, result) => {\n    User.find((err, result) => {\n        if (err) {\n            res.status(500).json({ message: err.errmsg });\n        } else {\n            res.setHeader('Content-Range', util.format(\"users %d-%d/%d\", rangeObj['offset'], rangeObj['limit'], result.total));\n            res.status(200).json(result);\n        }\n    });\n}\n\n// List one record by filtering by ID\nexport const users_get_one = (req, res) => {\n    if (req.params && req.params.id) {\n\n        User.findOne({ userID: req.params.id }, (err, doc) => {\n            if (err) {\n                res.status(500).json({ message: err.errMsg });\n            }\n            else {\n                res.status(200).json(doc);\n            }\n        });\n    }\n}\n\n// UPDATE\nexport const users_update = (req, res) => {\n    let updatedElement = {\n        id: req.body.id,\n        name: sanitizeName(req.body.name),\n        email: req.body.email,\n    };\n\n    User.findOneAndUpdate({ id: req.params.id }, updatedElement)\n        .then((oldResult) => {\n            User.findOne({ id: req.params.id })\n                .then((newResult) => {\n                    res.json({\n                        data: {\n                            _id: newResult._id,\n                            id: newResult.id,\n                            name: newResult.name,\n                            email: newResult.email,\n                        }\n                    });\n                })\n                .catch((err) => {\n                    console.log(err);\n                    res.status(500).json({ success: false, msg: `Something went wrong. ${err}` });\n                    return;\n                });\n        })\n        .catch((err) => {\n            if (err) {\n                console.log(err);\n                res.status(500).json({ success: false, msg: `Something went wrong. ${err}` });\n            }\n        });\n}\n\n// DELETE\nexport const users_delete = (req, res) => {\n    User.findOneAndRemove({ id: req.params.id })\n        .then((result) => {\n            res.json({\n                success: true,\n                msg: `It has been deleted.`,\n            });\n        })\n        .catch((err) => {\n            res.status(404).json({ success: false, msg: 'Nothing to delete.' });\n        });\n}\n\n\n\nexport const changeAccessToken = async (accessToken) => {\n    try {\n        dotenv.config();\n\n        const env = process.env.NODE_ENV || 'production';\n        let facebook_app_id, facebook_secret_key = '';\n\n        if (env === 'production') {\n            facebook_app_id = process.env.FACEBOOK_APP_ID;\n            facebook_secret_key = process.env.FACEBOOK_SECRET_KEY;\n        } else {\n            facebook_app_id = process.env.DEV_FACEBOOK_APP_ID;\n            facebook_secret_key = process.env.DEV_FACEBOOK_SECRET_KEY;\n        }\n\n        const facebookAccessTokenUrl = process.env.FACEBOOK_URL_OAUTH_ACCESS_TOKEN;\n        const params = {\n            grant_type: 'fb_exchange_token',\n            client_id: facebook_app_id,\n            client_secret: facebook_secret_key,\n            fb_exchange_token: accessToken,\n        }\n        return await axios.get(facebookAccessTokenUrl, { params });\n    } catch (changeAccessTokenError) {\n        console.error({ changeAccessToken });\n        return null;\n    }\n    // return await axios.get(facebookAccessTokenUrl, { params }).then(res => res.data);\n}\n\nexport const removeUserActivePage = async userID => {\n    try {\n        let user = await User.findOne({ userID: userID }).exec();\n        if (user) {\n            user.activePage = null;\n            await user.save();\n            return true;\n        }\n        return false;\n    } catch (removeUserActivePageErr) {\n        console.error(removeUserActivePageErr);\n        throw removeUserActivePageErr;\n    }\n}\n\n"],"file":"usersController.js"}