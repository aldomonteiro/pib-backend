{"version":3,"sources":["../../../src/api/controllers/usersController.js"],"names":["users_auth","req","res","body","User","findOne","userID","exec","user","name","email","pictureUrl","accessToken","timeZone","locationName","lastLogin","Date","now","hasLongLivedToken","shortLivedToken","changeAccessToken","respChangeToken","longLivedToken","access_token","save","status","json","toAuthJSON","console","error","users_auth_error","message","users_create","queryUser","foundUser","log","newRecord","then","data","record","catch","err","users_get_all","rangeObj","query","range","find","result","errmsg","setHeader","util","format","total","users_get_one","params","id","doc","errMsg","users_update","updatedElement","sanitizeName","findOneAndUpdate","oldResult","newResult","_id","success","msg","users_delete","findOneAndRemove","dotenv","config","env","process","NODE_ENV","facebook_secret_key","facebook_app_id","FACEBOOK_APP_ID","FACEBOOK_SECRET_KEY","DEV_FACEBOOK_APP_ID","DEV_FACEBOOK_SECRET_KEY","facebookAccessTokenUrl","FACEBOOK_URL_OAUTH_ACCESS_TOKEN","grant_type","client_id","client_secret","fb_exchange_token","axios","get"],"mappings":"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","sourcesContent":["import User from \"../models/users\";\nimport axios from 'axios';\nimport dotenv from \"dotenv\";\nimport util from \"util\";\nimport { configSortQuery, configRangeQuery } from '../util/util';\n\nexport const users_auth = async (req, res) => {\n    if (req.body) {\n        try {\n            let user = await User.findOne({ userID: req.body.userID }).exec();\n            if (!user) {\n                user = new User({\n                    userID: req.body.userID,\n                    name: req.body.name,\n                    email: req.body.email,\n                    pictureUrl: req.body.pictureUrl,\n                    accessToken: req.body.accessToken,\n                    timeZone: req.body.timeZone,\n                    locationName: req.body.locationName,\n                });\n            }\n\n            user.lastLogin = Date.now();\n            user.locationName = req.body.locationName;\n            user.hasLongLivedToken = true;\n            user.shortLivedToken = user.accessToken; // only for debug analysis\n\n            const respChangeToken = await changeAccessToken(user.accessToken);\n            user.longLivedToken = respChangeToken.access_token; // only for debug analysis\n            user.accessToken = respChangeToken.access_token; // the token used in the system\n\n            await user.save();\n            res.status(200).json({ user: user.toAuthJSON() });\n        } catch (users_auth_error) {\n            console.error({ users_auth_error });\n            res.status(500).json({ message: users_auth_error.message });\n        }\n    }\n}\n\nexport const users_create = (req, res) => {\n    var queryUser = User.findOne({ userID: req.body.userID });\n    const foundUser = queryUser.exec();\n    console.log(\"users_create\");\n    console.log(foundUser);\n    if (foundUser) {\n        users_auth(req, res);\n    } else {\n        const newRecord = new User({\n            userID: req.body.userID,\n            name: req.body.name,\n            email: req.body.email,\n            pictureUrl: req.body.pictureUrl,\n            accessToken: req.body.accessToken,\n            timeZone: req.body.timeZone,\n        });\n\n        changeAccessToken(newRecord.accessToken)\n            .then((data) => {\n                newRecord.hasLongLivedToken = true;\n                newRecord.accessToken = data.access_token;\n                newRecord.save()\n                    .then(record => res.status(200).json({ user: record.toAuthJSON() }))\n                    .catch((err) => {\n                        console.error(err);\n                        res.status(500).json(err)\n                    });\n            })\n            .catch((err) => {\n                console.error(err);\n                res.status(500).json(err)\n            });\n    }\n}\n\n// List all users\n// TODO: use filters in the query req.query\nexport const users_get_all = (req, res) => {\n    // Getting the sort from the requisition\n    // var sortObj = configSortQuery(req.query.sort);\n    // Getting the range from the requisition\n    var rangeObj = configRangeQuery(req.query.range);\n\n    // let options = {\n    //     offset: rangeObj['offset'],\n    //     limit: rangeObj['limit'],\n    //     sort: sortObj,\n    //     lean: true,\n    //     leanWithId: false,\n    // };\n\n    var query = {};\n\n    // User.paginate(query, options, (err, result) => {\n    User.find((err, result) => {\n        if (err) {\n            res.status(500).json({ message: err.errmsg });\n        } else {\n            res.setHeader('Content-Range', util.format(\"users %d-%d/%d\", rangeObj['offset'], rangeObj['limit'], result.total));\n            res.status(200).json(result);\n        }\n    });\n}\n\n// List one record by filtering by ID\nexport const users_get_one = (req, res) => {\n    if (req.params && req.params.id) {\n\n        User.findOne({ userID: req.params.id }, (err, doc) => {\n            if (err) {\n                res.status(500).json({ message: err.errMsg });\n            }\n            else {\n                res.status(200).json(doc);\n            }\n        });\n    }\n}\n\n// UPDATE\nexport const users_update = (req, res) => {\n    let updatedElement = {\n        id: req.body.id,\n        name: sanitizeName(req.body.name),\n        email: req.body.email,\n    };\n\n    User.findOneAndUpdate({ id: req.params.id }, updatedElement)\n        .then((oldResult) => {\n            User.findOne({ id: req.params.id })\n                .then((newResult) => {\n                    res.json({\n                        data: {\n                            _id: newResult._id,\n                            id: newResult.id,\n                            name: newResult.name,\n                            email: newResult.email,\n                        }\n                    });\n                })\n                .catch((err) => {\n                    console.log(err);\n                    res.status(500).json({ success: false, msg: `Something went wrong. ${err}` });\n                    return;\n                });\n        })\n        .catch((err) => {\n            if (err) {\n                console.log(err);\n                res.status(500).json({ success: false, msg: `Something went wrong. ${err}` });\n            }\n        });\n}\n\n// DELETE\nexport const users_delete = (req, res) => {\n    User.findOneAndRemove({ id: req.params.id })\n        .then((result) => {\n            res.json({\n                success: true,\n                msg: `It has been deleted.`,\n            });\n        })\n        .catch((err) => {\n            res.status(404).json({ success: false, msg: 'Nothing to delete.' });\n        });\n}\n\n\n\nexport const changeAccessToken = async (accessToken) => {\n\n    dotenv.config();\n\n    const env = process.env.NODE_ENV || 'production';\n    let facebook_app_id, facebook_secret_key = '';\n\n    if (env === 'production') {\n        facebook_app_id = process.env.FACEBOOK_APP_ID;\n        facebook_secret_key = process.env.FACEBOOK_SECRET_KEY;\n    } else {\n        facebook_app_id = process.env.DEV_FACEBOOK_APP_ID;\n        facebook_secret_key = process.env.DEV_FACEBOOK_SECRET_KEY;\n    }\n\n    const facebookAccessTokenUrl = process.env.FACEBOOK_URL_OAUTH_ACCESS_TOKEN;\n    const params = {\n        grant_type: 'fb_exchange_token',\n        client_id: facebook_app_id,\n        client_secret: facebook_secret_key,\n        fb_exchange_token: accessToken,\n    }\n\n    return await axios.get(facebookAccessTokenUrl, { params }).then(res => res.data);\n}\n\n"],"file":"usersController.js"}