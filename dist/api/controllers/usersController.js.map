{"version":3,"sources":["../../../src/api/controllers/usersController.js"],"names":["users_auth","req","res","body","userID","accessToken","name","email","picture","pictureUrl","locationName","create_or_auth","user","status","json","toAuthJSON","message","console","error","users_auth_error","users_code","lastInterface","dotenv","config","_code","code","_redirect_uri","redirect_uri","info","userByCode","User","findOne","facebookCode","exec","facebookAccessTokenUrl","process","env","FACEBOOK_URL_OAUTH_ACCESS_TOKEN","params","client_id","FACEBOOK_APP_ID","client_secret","FACEBOOK_SECRET_KEY","axios","get","result","access_token","data","user_data","userData","id","errorMsg","errMsg","response","url","location","response_data","timeZone","lastLogin","Date","now","shortLivedToken","changeAccessToken","respChangeToken","hasOwnProperty","hasLongLivedToken","longLivedToken","save","createOrAuthErr","users_create","queryUser","foundUser","log","newRecord","then","record","err","users_get_all","rangeObj","query","range","find","errmsg","setHeader","util","format","total","users_get_one","doc","users_update","updatedElement","sanitizeName","users_delete","findOneAndRemove","success","msg","NODE_ENV","facebook_secret_key","facebook_app_id","DEV_FACEBOOK_APP_ID","DEV_FACEBOOK_SECRET_KEY","grant_type","fb_exchange_token","removeUserActivePage","activePage"],"mappings":"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","sourcesContent":["import User from \"../models/users\";\nimport axios from 'axios';\nimport dotenv from \"dotenv\";\nimport util from \"util\";\nimport { configSortQuery, configRangeQuery } from '../util/util';\n\nexport const users_auth = async (req, res) => {\n    if (req.body) {\n        try {\n            const { userID, accessToken, name, email, picture, pictureUrl, locationName } = req.body;\n            const user = await create_or_auth({ userID, name, email, picture, locationName, pictureUrl, accessToken });\n            if (user) {\n                res.status(200).json({ user: user.toAuthJSON() });\n            } else {\n                res.status(500).json({ message: 'Unknown error' });\n            }\n        } catch (users_auth_error) {\n            console.error({ users_auth_error });\n            res.status(500).json({ message: users_auth_error.message });\n        }\n    }\n}\n\nexport const users_code = async (req, res) => {\n    let lastInterface = '';\n\n    dotenv.config();\n\n    try {\n        const _code = req.body.code;\n        const _redirect_uri = req.body.redirect_uri;\n\n        console.info({ _redirect_uri });\n\n        const userByCode = User.findOne({ facebookCode: _code }).exec();\n\n        if (userByCode && userByCode.accessToken) {\n            res.status(200).json({ user: userByCode.toAuthJSON() });\n        } else {\n            const facebookAccessTokenUrl = process.env.FACEBOOK_URL_OAUTH_ACCESS_TOKEN;\n            const params = {\n                client_id: process.env.FACEBOOK_APP_ID,\n                redirect_uri: _redirect_uri,\n                client_secret: process.env.FACEBOOK_SECRET_KEY,\n                code: _code,\n            }\n\n            lastInterface = facebookAccessTokenUrl;\n            const result = await axios.get(facebookAccessTokenUrl, { params });\n            if (result.status === 200) {\n                const { access_token } = result.data;\n                const userData = await user_data(access_token);\n                if (userData && userData.status === 200) {\n                    const { id, name, email, picture, locationName, pictureUrl } = userData;\n                    const user = await create_or_auth({ userID: id, name, email, picture, locationName, pictureUrl, accessToken: access_token, code: _code });\n                    if (user) {\n                        res.status(200).json({ user: user.toAuthJSON() });\n                    } else {\n                        res.status(500).json({ message: 'Unknown error' });\n                    }\n                } else {\n                    console.error(userData.errorMsg);\n                    res.status(userData.status).json({ message: userData.errorMsg });\n                }\n            }\n            else {\n                console.error('Failed ' + lastInterface);\n                console.error(result.data);\n                const errorMsg = result.data.error.message;\n                res.status(result.status).json({ message: errorMsg });\n            }\n        }\n    } catch (err) {\n        console.error({ lastInterface });\n        let errMsg = lastInterface;\n        if (err.response) {\n            if (err.response.data) {\n                console.error(err.response.data);\n                errMsg = err.response.data.error.message;\n            }\n            else console.error(err.response);\n        }\n        else if (err.data) {\n            console.error(err.data);\n            errMsg = err.data.error.message;\n        }\n        res.status(500).json({ message: errMsg })\n    }\n}\n\nconst user_data = async (accessToken) => {\n    try {\n        const url = `https://graph.facebook.com/v3.2/me?fields=id,name,email,picture,location&access_token=${accessToken}`;\n        const userData = await axios.get(url);\n        if (userData && userData.status === 200) {\n            const { id, name, email, picture, location } = userData.data;\n            const locationName = location ? location.name : null;\n            const pictureUrl = picture ? picture.data.url : null;\n            return { status: userData.status, id, name, email, picture, locationName, pictureUrl };\n        } else {\n            console.error(userData.data);\n            return { status: userData.status, errorMsg: userData.data.error.message };\n        }\n    } catch (err) {\n        console.error({ response_data: err.response.data });\n        return { status: err.response.status, errorMsg: err.response.data.error.message };\n    }\n\n}\n\nconst create_or_auth = async userData => {\n    try {\n        const { userID, name, email, pictureUrl, accessToken, timeZone, locationName, code } = userData;\n\n        let user = await User.findOne({ userID: userID }).exec();\n        if (!user) {\n            user = new User({\n                userID: userID,\n                name: name,\n                email: email,\n                pictureUrl: pictureUrl,\n                accessToken: accessToken,\n                timeZone: timeZone,\n                locationName: locationName,\n            });\n        } else {\n            user.accessToken = accessToken;\n        }\n\n        user.lastLogin = Date.now();\n        user.locationName = locationName;\n        user.shortLivedToken = user.accessToken; // only for debug analysis\n        user.facebookCode = code;\n\n        const respChangeToken = await changeAccessToken(user.accessToken);\n        if (respChangeToken) {\n            if (respChangeToken.hasOwnProperty('data')) {\n                if (respChangeToken.data.hasOwnProperty('access_token')) {\n                    respChangeToken.access_token = respChangeToken.data.access_token;\n                }\n            }\n            user.hasLongLivedToken = true;\n            user.longLivedToken = respChangeToken.access_token; // only for debug analysis\n            user.accessToken = respChangeToken.access_token; // the token used in the system\n        }\n        await user.save();\n        return user;\n    } catch (createOrAuthErr) {\n        console.error({ createOrAuthErr });\n        throw createOrAuthErr;\n    }\n}\n\nexport const users_create = (req, res) => {\n    var queryUser = User.findOne({ userID: req.body.userID });\n    const foundUser = queryUser.exec();\n    console.log(\"users_create\");\n    console.log(foundUser);\n    if (foundUser) {\n        users_auth(req, res);\n    } else {\n        const newRecord = new User({\n            userID: req.body.userID,\n            name: req.body.name,\n            email: req.body.email,\n            pictureUrl: req.body.pictureUrl,\n            accessToken: req.body.accessToken,\n            timeZone: req.body.timeZone,\n        });\n\n        changeAccessToken(newRecord.accessToken)\n            .then((data) => {\n                newRecord.hasLongLivedToken = true;\n                newRecord.accessToken = data.access_token;\n                newRecord.save()\n                    .then(record => res.status(200).json({ user: record.toAuthJSON() }))\n                    .catch((err) => {\n                        console.error(err);\n                        res.status(500).json(err)\n                    });\n            })\n            .catch((err) => {\n                console.error(err);\n                res.status(500).json(err)\n            });\n    }\n}\n\n// List all users\n// TODO: use filters in the query req.query\nexport const users_get_all = (req, res) => {\n    // Getting the sort from the requisition\n    // var sortObj = configSortQuery(req.query.sort);\n    // Getting the range from the requisition\n    var rangeObj = configRangeQuery(req.query.range);\n\n    // let options = {\n    //     offset: rangeObj['offset'],\n    //     limit: rangeObj['limit'],\n    //     sort: sortObj,\n    //     lean: true,\n    //     leanWithId: false,\n    // };\n\n    var query = {};\n\n    // User.paginate(query, options, (err, result) => {\n    User.find((err, result) => {\n        if (err) {\n            res.status(500).json({ message: err.errmsg });\n        } else {\n            res.setHeader('Content-Range', util.format(\"users %d-%d/%d\", rangeObj['offset'], rangeObj['limit'], result.total));\n            res.status(200).json(result);\n        }\n    });\n}\n\n// List one record by filtering by ID\nexport const users_get_one = (req, res) => {\n    if (req.params && req.params.id) {\n\n        User.findOne({ userID: req.params.id }, (err, doc) => {\n            if (err) {\n                res.status(500).json({ message: err.errMsg });\n            }\n            else {\n                res.status(200).json(doc);\n            }\n        });\n    }\n}\n\n// UPDATE\nexport const users_update = (req, res) => {\n    let updatedElement = {\n        id: req.body.id,\n        name: sanitizeName(req.body.name),\n        email: req.body.email,\n    };\n\n    User.findOne({ id: req.body.id }, (err, doc) => {\n        if (!err) {\n            doc.name = sanitizeName(req.body.name);\n            doc.email = req.body.email;\n\n            doc.save((err, result) => {\n                if (err) {\n                    res.status(500).json({ message: err.errmsg });\n                } else {\n                    res.status(200).json(result);\n                }\n            });\n        } else {\n            res.status(500).json({ message: err.errmsg });\n        }\n    });\n}\n\n// DELETE\nexport const users_delete = (req, res) => {\n    User.findOneAndRemove({ id: req.params.id })\n        .then((result) => {\n            res.json({\n                success: true,\n                msg: 'It has been deleted.',\n            });\n        })\n        .catch((err) => {\n            console.log(err);\n            res.status(500).json({ message: err.message });\n        });\n}\n\nexport const changeAccessToken = async (accessToken) => {\n    try {\n        dotenv.config();\n\n        const env = process.env.NODE_ENV || 'production';\n        let facebook_app_id;\n        let facebook_secret_key = '';\n\n        if (env === 'production') {\n            facebook_app_id = process.env.FACEBOOK_APP_ID;\n            facebook_secret_key = process.env.FACEBOOK_SECRET_KEY;\n        } else {\n            facebook_app_id = process.env.DEV_FACEBOOK_APP_ID;\n            facebook_secret_key = process.env.DEV_FACEBOOK_SECRET_KEY;\n        }\n\n        const facebookAccessTokenUrl = process.env.FACEBOOK_URL_OAUTH_ACCESS_TOKEN;\n        const params = {\n            grant_type: 'fb_exchange_token',\n            client_id: facebook_app_id,\n            client_secret: facebook_secret_key,\n            fb_exchange_token: accessToken,\n        }\n        return await axios.get(facebookAccessTokenUrl, { params });\n    } catch (changeAccessTokenError) {\n        console.error({ changeAccessToken });\n        return null;\n    }\n    // return await axios.get(facebookAccessTokenUrl, { params }).then(res => res.data);\n}\n\nexport const removeUserActivePage = async userID => {\n    try {\n        let user = await User.findOne({ userID: userID }).exec();\n        if (user) {\n            user.activePage = null;\n            await user.save();\n            return true;\n        }\n        return false;\n    } catch (removeUserActivePageErr) {\n        console.error(removeUserActivePageErr);\n        throw removeUserActivePageErr;\n    }\n}\n\n"],"file":"usersController.js"}