{"version":3,"sources":["../../../src/api/controllers/usersController.js"],"names":["users_auth","req","res","body","User","findOne","userID","err","foundUser","status","json","lastLogin","Date","now","locationName","changeAccessToken","accessToken","then","data","hasLongLivedToken","access_token","save","user","toAuthJSON","catch","console","log","response","newRecord","name","email","pictureUrl","timeZone","record","users_create","queryUser","exec","dotenv","config","facebookAccessTokenUrl","process","env","FACEBOOK_URL_OAUTH_ACCESS_TOKEN","params","grant_type","client_id","FACEBOOK_APP_ID","client_secret","FACEBOOK_SECRET_KEY","fb_exchange_token","axios","get"],"mappings":"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","sourcesContent":["import User from \"../models/users\";\nimport axios from 'axios';\nimport dotenv from \"dotenv\";\n\nexport const users_auth = (req, res) => {\n    if (req.body) {\n\n        User.findOne({ userID: req.body.userID }, (err, foundUser) => {\n            if (err) {\n                res.status(500).json(err);\n                return;\n            }\n\n            if (foundUser) {\n                foundUser.lastLogin = Date.now();\n                foundUser.locationName = req.body.locationName;\n                // if (!foundUser.hasLongLivedToken) {\n                changeAccessToken(foundUser.accessToken).then(data => {\n                    foundUser.hasLongLivedToken = true;\n                    foundUser.accessToken = data.access_token;\n                    foundUser.save();\n                    res.status(200).json({ user: foundUser.toAuthJSON() });\n                }).catch(err => console.log(err.response.data));\n                // } else {\n                //     foundUser.save();\n                //     res.status(200).json({ user: foundUser.toAuthJSON() });\n                // }\n            } else {\n                const newRecord = new User({\n                    userID: req.body.userID,\n                    name: req.body.name,\n                    email: req.body.email,\n                    pictureUrl: req.body.pictureUrl,\n                    accessToken: req.body.accessToken,\n                    timeZone: req.body.timeZone,\n                    locationName: req.body.locationName,\n                });\n\n                changeAccessToken(newRecord.accessToken)\n                    .then(data => {\n                        newRecord.hasLongLivedToken = true;\n                        newRecord.accessToken = data.access_token;\n                        newRecord.save()\n                            .then(record => res.status(200).json({ user: record.toAuthJSON() }))\n                            .catch(err => res.status(500).json(err));\n                    })\n                    .catch(err => res.status(500).json(err));\n            }\n        });\n    }\n}\n\nexport const users_create = (req, res) => {\n    var queryUser = User.findOne({ userID: req.body.userID });\n    const foundUser = queryUser.exec();\n    console.log(\"users_create\");\n    console.log(foundUser);\n    if (foundUser) {\n        users_auth(req, res);\n    } else {\n        const newRecord = new User({\n            userID: req.body.userID,\n            name: req.body.name,\n            email: req.body.email,\n            pictureUrl: req.body.pictureUrl,\n            accessToken: req.body.accessToken,\n            timeZone: req.body.timeZone,\n        });\n\n        changeAccessToken(newRecord.accessToken)\n            .then(data => {\n                newRecord.hasLongLivedToken = true;\n                newRecord.accessToken = data.access_token;\n                newRecord.save()\n                    .then(record => res.status(200).json({ user: record.toAuthJSON() }))\n                    .catch(err => res.status(500).json(err));\n            })\n            .catch(err => res.status(500).json(err));\n    }\n}\n\n//oauth/access_token?grant_type=fb_exchange_token&client_id=267537643995936&client_secret=1b5307cb418218dc1b0d38568be37340&fb_exchange_token=EAADzUvY8AyABALCKnnO0nQKYa5GqwNwIiOn3ZCiUrvCZCiTHFzBZB0GNim12elB7j4WTqZCpQ4q6doZC9ZAmc3K4u1Dz8cCu3vZA8SRy7OqAewcXbPS00XVhAWWLrNkEqevdN9EGNRu2iGpMjTiQ4cxBrrbFmlATwqZCuP0wiRTaOEDcnh66KZABaVHrykAnaAAqNp5On1TvWHQZDZD\nexport const changeAccessToken = async (accessToken) => {\n\n    dotenv.config();\n\n    const facebookAccessTokenUrl = process.env.FACEBOOK_URL_OAUTH_ACCESS_TOKEN;\n    const params = {\n        grant_type: 'fb_exchange_token',\n        client_id: process.env.FACEBOOK_APP_ID,\n        client_secret: process.env.FACEBOOK_SECRET_KEY,\n        fb_exchange_token: accessToken,\n    }\n\n    return await axios.get(facebookAccessTokenUrl, { params }).then(res => res.data);\n}\n\n"],"file":"usersController.js"}