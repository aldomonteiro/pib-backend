{"version":3,"sources":["../../../src/api/controllers/usersController.js"],"names":["users_auth","req","res","body","create_or_auth","user","status","json","toAuthJSON","console","error","users_auth_error","message","users_code","lastInterface","_code","code","_redirect_uri","redirect_uri","info","dotenv","config","facebookAccessTokenUrl","process","env","FACEBOOK_URL_OAUTH_ACCESS_TOKEN","params","client_id","FACEBOOK_APP_ID","client_secret","FACEBOOK_SECRET_KEY","axios","get","result","access_token","data","userData","id","name","email","picture","location","locationName","pictureUrl","url","userID","accessToken","errorMsg","errMsg","response","timeZone","User","findOne","exec","lastLogin","Date","now","shortLivedToken","changeAccessToken","respChangeToken","hasOwnProperty","hasLongLivedToken","longLivedToken","save","createOrAuthErr","users_create","queryUser","foundUser","log","newRecord","then","record","catch","err","users_get_all","rangeObj","query","range","find","errmsg","setHeader","util","format","total","users_get_one","doc","users_update","updatedElement","sanitizeName","findOneAndUpdate","oldResult","newResult","_id","success","msg","users_delete","findOneAndRemove","NODE_ENV","facebook_secret_key","facebook_app_id","DEV_FACEBOOK_APP_ID","DEV_FACEBOOK_SECRET_KEY","grant_type","fb_exchange_token","removeUserActivePage","activePage"],"mappings":"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","sourcesContent":["import User from \"../models/users\";\nimport axios from 'axios';\nimport dotenv from \"dotenv\";\nimport util from \"util\";\nimport { configSortQuery, configRangeQuery } from '../util/util';\n\nexport const users_auth = async (req, res) => {\n    if (req.body) {\n        try {\n            const user = await create_or_auth(req.body);\n            res.status(200).json({ user: user.toAuthJSON() });\n        } catch (users_auth_error) {\n            console.error({ users_auth_error });\n            res.status(500).json({ message: users_auth_error.message });\n        }\n    }\n}\n\nexport const users_code = async (req, res) => {\n    let lastInterface = '';\n    try {\n        const _code = req.body.code;\n        const _redirect_uri = req.body.redirect_uri;\n\n        console.info({ _redirect_uri });\n\n        dotenv.config();\n\n        const facebookAccessTokenUrl = process.env.FACEBOOK_URL_OAUTH_ACCESS_TOKEN;\n        const params = {\n            client_id: process.env.FACEBOOK_APP_ID,\n            redirect_uri: _redirect_uri,\n            client_secret: process.env.FACEBOOK_SECRET_KEY,\n            code: _code,\n        }\n\n        lastInterface = facebookAccessTokenUrl;\n        const result = await axios.get(facebookAccessTokenUrl, { params });\n        if (result.status === 200) {\n            const { access_token } = result.data;\n            lastInterface = 'https://graph.facebook.com/v3.2/me?fields=id,name,email,picture,location&access_token=';\n            const userData = await axios.get(lastInterface + access_token);\n            if (userData && userData.status === 200) {\n                const { id, name, email, picture, location } = userData.data;\n                const locationName = location ? location.name : null;\n                const pictureUrl = picture ? picture.data.url : null;\n                lastInterface = 'create_or_auth';\n                const user = await create_or_auth({ userID: id, name, email, picture, locationName, pictureUrl, accessToken: access_token });\n                if (user) {\n                    res.status(200).json({ user: user.toAuthJSON() });\n                } else {\n                    res.status(500).json({ message: 'Unknown error' });\n                }\n            } else {\n                console.error(userData.data);\n                const errorMsg = userData.data.error.message;\n                res.status(userData.status).json({ message: errorMsg });\n            }\n        }\n        else {\n            console.error(result.data);\n            const errorMsg = result.data.error.message;\n            res.status(result.status).json({ message: errorMsg });\n        }\n    } catch (err) {\n        console.error({ lastInterface });\n        let errMsg = lastInterface;\n        if (err.response) {\n            if (err.response.data) {\n                console.error(err.response.data);\n                errMsg = err.response.data.error.message;\n            }\n            else console.error(err.response);\n        }\n        else if (err.data) {\n            console.error(err.data);\n            errMsg = err.data.error.message;\n        }\n        res.status(500).json({ message: errMsg })\n    }\n}\n\nconst create_or_auth = async userData => {\n    try {\n        const { userID, name, email, pictureUrl, accessToken, timeZone, locationName } = userData;\n\n        let user = await User.findOne({ userID: userID }).exec();\n        if (!user) {\n            user = new User({\n                userID: userID,\n                name: name,\n                email: email,\n                pictureUrl: pictureUrl,\n                accessToken: accessToken,\n                timeZone: timeZone,\n                locationName: locationName,\n            });\n        } else {\n            user.accessToken = accessToken;\n        }\n\n        user.lastLogin = Date.now();\n        user.locationName = locationName;\n        user.shortLivedToken = user.accessToken; // only for debug analysis\n\n        const respChangeToken = await changeAccessToken(user.accessToken);\n        if (respChangeToken) {\n            if (respChangeToken.hasOwnProperty('data')) {\n                if (respChangeToken.data.hasOwnProperty('access_token')) {\n                    respChangeToken.access_token = respChangeToken.data.access_token;\n                }\n            }\n            user.hasLongLivedToken = true;\n            user.longLivedToken = respChangeToken.access_token; // only for debug analysis\n            user.accessToken = respChangeToken.access_token; // the token used in the system\n        }\n        await user.save();\n        return user;\n    } catch (createOrAuthErr) {\n        console.error({ createOrAuthErr });\n        throw createOrAuthErr;\n    }\n}\n\nexport const users_create = (req, res) => {\n    var queryUser = User.findOne({ userID: req.body.userID });\n    const foundUser = queryUser.exec();\n    console.log(\"users_create\");\n    console.log(foundUser);\n    if (foundUser) {\n        users_auth(req, res);\n    } else {\n        const newRecord = new User({\n            userID: req.body.userID,\n            name: req.body.name,\n            email: req.body.email,\n            pictureUrl: req.body.pictureUrl,\n            accessToken: req.body.accessToken,\n            timeZone: req.body.timeZone,\n        });\n\n        changeAccessToken(newRecord.accessToken)\n            .then((data) => {\n                newRecord.hasLongLivedToken = true;\n                newRecord.accessToken = data.access_token;\n                newRecord.save()\n                    .then(record => res.status(200).json({ user: record.toAuthJSON() }))\n                    .catch((err) => {\n                        console.error(err);\n                        res.status(500).json(err)\n                    });\n            })\n            .catch((err) => {\n                console.error(err);\n                res.status(500).json(err)\n            });\n    }\n}\n\n// List all users\n// TODO: use filters in the query req.query\nexport const users_get_all = (req, res) => {\n    // Getting the sort from the requisition\n    // var sortObj = configSortQuery(req.query.sort);\n    // Getting the range from the requisition\n    var rangeObj = configRangeQuery(req.query.range);\n\n    // let options = {\n    //     offset: rangeObj['offset'],\n    //     limit: rangeObj['limit'],\n    //     sort: sortObj,\n    //     lean: true,\n    //     leanWithId: false,\n    // };\n\n    var query = {};\n\n    // User.paginate(query, options, (err, result) => {\n    User.find((err, result) => {\n        if (err) {\n            res.status(500).json({ message: err.errmsg });\n        } else {\n            res.setHeader('Content-Range', util.format(\"users %d-%d/%d\", rangeObj['offset'], rangeObj['limit'], result.total));\n            res.status(200).json(result);\n        }\n    });\n}\n\n// List one record by filtering by ID\nexport const users_get_one = (req, res) => {\n    if (req.params && req.params.id) {\n\n        User.findOne({ userID: req.params.id }, (err, doc) => {\n            if (err) {\n                res.status(500).json({ message: err.errMsg });\n            }\n            else {\n                res.status(200).json(doc);\n            }\n        });\n    }\n}\n\n// UPDATE\nexport const users_update = (req, res) => {\n    let updatedElement = {\n        id: req.body.id,\n        name: sanitizeName(req.body.name),\n        email: req.body.email,\n    };\n\n    User.findOneAndUpdate({ id: req.params.id }, updatedElement)\n        .then((oldResult) => {\n            User.findOne({ id: req.params.id })\n                .then((newResult) => {\n                    res.json({\n                        data: {\n                            _id: newResult._id,\n                            id: newResult.id,\n                            name: newResult.name,\n                            email: newResult.email,\n                        }\n                    });\n                })\n                .catch((err) => {\n                    console.log(err);\n                    res.status(500).json({ success: false, msg: `Something went wrong. ${err}` });\n                    return;\n                });\n        })\n        .catch((err) => {\n            if (err) {\n                console.log(err);\n                res.status(500).json({ success: false, msg: `Something went wrong. ${err}` });\n            }\n        });\n}\n\n// DELETE\nexport const users_delete = (req, res) => {\n    User.findOneAndRemove({ id: req.params.id })\n        .then((result) => {\n            res.json({\n                success: true,\n                msg: `It has been deleted.`,\n            });\n        })\n        .catch((err) => {\n            res.status(404).json({ success: false, msg: 'Nothing to delete.' });\n        });\n}\n\n\n\nexport const changeAccessToken = async (accessToken) => {\n    try {\n        dotenv.config();\n\n        const env = process.env.NODE_ENV || 'production';\n        let facebook_app_id, facebook_secret_key = '';\n\n        if (env === 'production') {\n            facebook_app_id = process.env.FACEBOOK_APP_ID;\n            facebook_secret_key = process.env.FACEBOOK_SECRET_KEY;\n        } else {\n            facebook_app_id = process.env.DEV_FACEBOOK_APP_ID;\n            facebook_secret_key = process.env.DEV_FACEBOOK_SECRET_KEY;\n        }\n\n        const facebookAccessTokenUrl = process.env.FACEBOOK_URL_OAUTH_ACCESS_TOKEN;\n        const params = {\n            grant_type: 'fb_exchange_token',\n            client_id: facebook_app_id,\n            client_secret: facebook_secret_key,\n            fb_exchange_token: accessToken,\n        }\n        return await axios.get(facebookAccessTokenUrl, { params });\n    } catch (changeAccessTokenError) {\n        console.error({ changeAccessToken });\n        return null;\n    }\n    // return await axios.get(facebookAccessTokenUrl, { params }).then(res => res.data);\n}\n\nexport const removeUserActivePage = async userID => {\n    try {\n        let user = await User.findOne({ userID: userID }).exec();\n        if (user) {\n            user.activePage = null;\n            await user.save();\n            return true;\n        }\n        return false;\n    } catch (removeUserActivePageErr) {\n        console.error(removeUserActivePageErr);\n        throw removeUserActivePageErr;\n    }\n}\n\n"],"file":"usersController.js"}