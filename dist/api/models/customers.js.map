{"version":3,"sources":["../../../src/api/models/customers.js"],"names":["Schema","mongoose","schema","id","type","Number","required","userId","String","pageId","first_name","last_name","profile_pic","email","phone","addr_manual","Boolean","addr_formatted","addr_street","addr_streetnumber","addr_sublocality","addr_city","addr_state","addr_postalcode","location_lat","location_long","location_url","timestamps","index","unique","model"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAMA,MAAM,GAAGC,qBAASD,MAAxB;AAEA,IAAME,MAAM,GAAG,IAAIF,MAAJ,CACX;AACIG,EAAAA,EAAE,EAAE;AAAEC,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GADR;AAEIC,EAAAA,MAAM,EAAE;AAAEH,IAAAA,IAAI,EAAEI,MAAR;AAAgBF,IAAAA,QAAQ,EAAE;AAA1B,GAFZ;AAGIG,EAAAA,MAAM,EAAE;AAAEL,IAAAA,IAAI,EAAEI;AAAR,GAHZ;AAIIE,EAAAA,UAAU,EAAE;AAAEN,IAAAA,IAAI,EAAEI;AAAR,GAJhB;AAKIG,EAAAA,SAAS,EAAE;AAAEP,IAAAA,IAAI,EAAEI;AAAR,GALf;AAMII,EAAAA,WAAW,EAAE;AAAER,IAAAA,IAAI,EAAEI;AAAR,GANjB;AAOIK,EAAAA,KAAK,EAAE;AAAET,IAAAA,IAAI,EAAEI;AAAR,GAPX;AAQIM,EAAAA,KAAK,EAAE;AAAEV,IAAAA,IAAI,EAAEI;AAAR,GARX;AASIO,EAAAA,WAAW,EAAE;AAAEX,IAAAA,IAAI,EAAEY,OAAR;AAAiB,eAAS;AAA1B,GATjB;AAUIC,EAAAA,cAAc,EAAE;AAAEb,IAAAA,IAAI,EAAEI;AAAR,GAVpB;AAWIU,EAAAA,WAAW,EAAE;AAAEd,IAAAA,IAAI,EAAEI;AAAR,GAXjB;AAYIW,EAAAA,iBAAiB,EAAE;AAAEf,IAAAA,IAAI,EAAEI;AAAR,GAZvB;AAaIY,EAAAA,gBAAgB,EAAE;AAAEhB,IAAAA,IAAI,EAAEI;AAAR,GAbtB;AAcIa,EAAAA,SAAS,EAAE;AAAEjB,IAAAA,IAAI,EAAEI;AAAR,GAdf;AAeIc,EAAAA,UAAU,EAAE;AAAElB,IAAAA,IAAI,EAAEI;AAAR,GAfhB;AAgBIe,EAAAA,eAAe,EAAE;AAAEnB,IAAAA,IAAI,EAAEI;AAAR,GAhBrB;AAiBIgB,EAAAA,YAAY,EAAE;AAAEpB,IAAAA,IAAI,EAAEC;AAAR,GAjBlB;AAkBIoB,EAAAA,aAAa,EAAE;AAAErB,IAAAA,IAAI,EAAEC;AAAR,GAlBnB;AAmBIqB,EAAAA,YAAY,EAAE;AAAEtB,IAAAA,IAAI,EAAEI;AAAR;AAnBlB,CADW,EAqBR;AAAEmB,EAAAA,UAAU,EAAE;AAAd,CArBQ,CAAf;AAwBAzB,MAAM,CAAC0B,KAAP,CAAa;AAAEnB,EAAAA,MAAM,EAAE,CAAV;AAAaN,EAAAA,EAAE,EAAE;AAAjB,CAAb,EAAmC;AAAE0B,EAAAA,MAAM,EAAE;AAAV,CAAnC;AACA3B,MAAM,CAAC0B,KAAP,CAAa;AAAErB,EAAAA,MAAM,EAAE;AAAV,CAAb;;eAEeN,qBAAS6B,KAAT,CAAe,WAAf,EAA4B5B,MAA5B,C","sourcesContent":["import mongoose from 'mongoose';\n\nconst Schema = mongoose.Schema;\n\nconst schema = new Schema(\n    {\n        id: { type: Number, required: true },\n        userId: { type: String, required: true },\n        pageId: { type: String },\n        first_name: { type: String },\n        last_name: { type: String },\n        profile_pic: { type: String },\n        email: { type: String },\n        phone: { type: String },\n        addr_manual: { type: Boolean, default: false },\n        addr_formatted: { type: String },\n        addr_street: { type: String },\n        addr_streetnumber: { type: String },\n        addr_sublocality: { type: String },\n        addr_city: { type: String },\n        addr_state: { type: String },\n        addr_postalcode: { type: String },\n        location_lat: { type: Number },\n        location_long: { type: Number },\n        location_url: { type: String },\n    }, { timestamps: true },\n);\n\nschema.index({ pageId: 1, id: 1 }, { unique: true });\nschema.index({ userId: 1 });\n\nexport default mongoose.model('customers', schema);\n"],"file":"customers.js"}