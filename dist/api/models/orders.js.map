{"version":3,"sources":["../../../src/api/models/orders.js"],"names":["Schema","mongoose","schema","id","type","Number","required","customerId","userId","String","pageId","status","status2","status3","location_lat","location_long","location_url","phone","address","qty_total","item_complete","currentItem","currentItemSize","currentItemSplit","originalSplit","waitingForAddress","Boolean","waitingFor","total","sent_shipping_notification","Date","sent_reject_notification","no_beverage","payment_type","payment_change","confirmed_at","delivered_at","comments","rejection_reason","timestamps","pre","next","model"],"mappings":"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","sourcesContent":["import mongoose from \"mongoose\";\n\nconst Schema = mongoose.Schema;\n\nconst schema = new Schema({\n  id: { type: Number, required: true },\n  customerId: { type: Number },\n  userId: { type: String, required: true },\n  pageId: { type: String, required: true },\n  status: { type: Number },\n  status2: { type: String },\n  status3: { type: String },\n  location_lat: { type: Number },\n  location_long: { type: Number },\n  location_url: { type: String },\n  phone: { type: String },\n  address: { type: String },\n  qty_total: { type: Number },\n  item_complete: { type: Number },\n  currentItem: { type: Number },\n  currentItemSize: { type: Number },\n  currentItemSplit: { type: Number },\n  originalSplit: { type: Number },\n  waitingForAddress: { type: Boolean },\n  waitingFor: { type: String },\n  total: { type: Number },\n  sent_shipping_notification: { type: Date },\n  sent_reject_notification: { type: Date },\n  no_beverage: { type: Boolean },\n  payment_type: { type: String },\n  payment_change: { type: String },\n  confirmed_at: { type: Date },\n  delivered_at: { type: Date },\n  comments: { type: String },\n  rejection_reason: { type: String },\n}, { timestamps: true });\n\nschema.pre('save', function (next) {\n  switch (this.status) {\n    case 0: this.status2 = 'pending'; this.status3 = 'pending'; break;\n    case 1: this.status2 = 'confirmed'; this.status3 = 'pending'; break;\n    case 2: this.status2 = 'accepted'; this.status3 = 'pending'; break;\n    case 3: this.status2 = 'printed'; this.status3 = 'pending'; break;\n    case 4: this.status2 = 'delivered'; this.status3 = 'delivered'; break;\n    case 8: this.status2 = 'rejected'; this.status3 = 'cancelled'; break;\n    case 9: this.status2 = 'cancelled'; this.status3 = 'cancelled'; break;\n    default:\n      break;\n  }\n  next();\n});\n\nexport default mongoose.model(\"orders\", schema);\n"],"file":"orders.js"}