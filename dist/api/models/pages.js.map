{"version":3,"sources":["../../../src/api/models/pages.js"],"names":["schema","mongoose","Schema","id","type","String","required","name","accessToken","pictureUrl","userID","activeBot","Boolean","greetingText","firstResponseText","orderExample","initialSetupFlavors","Number","initialSetupSizes","initialSetupPricings","initialSetupStores","initialSetupCategories","initialSetupToppings","marketing","timestamps","model"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAMA,MAAM,GAAG,IAAIC,qBAASC,MAAb,CAAoB;AAC/BC,EAAAA,EAAE,EAAE;AAAEC,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAD2B;AAE/BC,EAAAA,IAAI,EAAE;AAAEH,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAFyB;AAG/BE,EAAAA,WAAW,EAAE;AAAEJ,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAHkB;AAI/BG,EAAAA,UAAU,EAAE;AAAEL,IAAAA,IAAI,EAAEC;AAAR,GAJmB;AAK/BK,EAAAA,MAAM,EAAE;AAAEN,IAAAA,IAAI,EAAEC;AAAR,GALuB;AAM/BM,EAAAA,SAAS,EAAE;AAAEP,IAAAA,IAAI,EAAEQ;AAAR,GANoB;AAO/BC,EAAAA,YAAY,EAAE;AAAET,IAAAA,IAAI,EAAEC;AAAR,GAPiB;AAQ/BS,EAAAA,iBAAiB,EAAE;AAAEV,IAAAA,IAAI,EAAEC;AAAR,GARY;AAS/BU,EAAAA,YAAY,EAAE;AAAEX,IAAAA,IAAI,EAAEC;AAAR,GATiB;AAU/BW,EAAAA,mBAAmB,EAAE;AAAEZ,IAAAA,IAAI,EAAEa;AAAR,GAVU;AAW/BC,EAAAA,iBAAiB,EAAE;AAAEd,IAAAA,IAAI,EAAEa;AAAR,GAXY;AAY/BE,EAAAA,oBAAoB,EAAE;AAAEf,IAAAA,IAAI,EAAEa;AAAR,GAZS;AAa/BG,EAAAA,kBAAkB,EAAE;AAAEhB,IAAAA,IAAI,EAAEa;AAAR,GAbW;AAc/BI,EAAAA,sBAAsB,EAAE;AAAEjB,IAAAA,IAAI,EAAEa;AAAR,GAdO;AAe/BK,EAAAA,oBAAoB,EAAE;AAAElB,IAAAA,IAAI,EAAEa;AAAR,GAfS;AAgB/BM,EAAAA,SAAS,EAAE;AAAEnB,IAAAA,IAAI,EAAEQ,OAAR;AAAiB,eAAS;AAA1B;AAhBoB,CAApB,EAiBZ;AAAEY,EAAAA,UAAU,EAAE;AAAd,CAjBY,CAAf,C,CAmBA;;eAEevB,qBAASwB,KAAT,CAAe,OAAf,EAAwBzB,MAAxB,C","sourcesContent":["import mongoose from 'mongoose';\n\nconst schema = new mongoose.Schema({\n    id: { type: String, required: true },\n    name: { type: String, required: true },\n    accessToken: { type: String, required: true },\n    pictureUrl: { type: String },\n    userID: { type: String },\n    activeBot: { type: Boolean },\n    greetingText: { type: String },\n    firstResponseText: { type: String },\n    orderExample: { type: String },\n    initialSetupFlavors: { type: Number },\n    initialSetupSizes: { type: Number },\n    initialSetupPricings: { type: Number },\n    initialSetupStores: { type: Number },\n    initialSetupCategories: { type: Number },\n    initialSetupToppings: { type: Number },\n    marketing: { type: Boolean, default: false },\n}, { timestamps: true });\n\n// TODO: store access_token expiring date\n\nexport default mongoose.model('pages', schema);\n"],"file":"pages.js"}