{"version":3,"sources":["../../../src/api/models/users.js"],"names":["Schema","mongoose","schema","userID","type","String","required","name","email","pictureUrl","hasLongLivedToken","Boolean","default","accessToken","shortLivedToken","longLivedToken","expireDate","Date","lastLogin","activePage","timeZone","locationName","role","timestamps","post","doc","console","log","methods","generateJWT","jwt","sign","process","env","JWT_SECRET","toAuthJSON","token","model"],"mappings":";;;;;;;AAAA;;AACA;;;;AACA;AAEA,IAAMA,MAAM,GAAGC,kBAASD,MAAxB;AAEA,IAAME,MAAM,GAAG,IAAIF,MAAJ,CAAW;AACxBG,EAAAA,MAAM,EAAE;AAAEC,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GADgB;AAExBC,EAAAA,IAAI,EAAE;AAAEH,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAFkB;AAGxBE,EAAAA,KAAK,EAAE;AAAEJ,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAHiB;AAIxBG,EAAAA,UAAU,EAAE;AAAEL,IAAAA,IAAI,EAAEC;AAAR,GAJY;AAKxBK,EAAAA,iBAAiB,EAAE;AAAEN,IAAAA,IAAI,EAAEO,OAAR;AAAiBC,IAAAA,OAAO,EAAE;AAA1B,GALK;AAMxBC,EAAAA,WAAW,EAAE;AAAET,IAAAA,IAAI,EAAEC;AAAR,GANW;AAOxBS,EAAAA,eAAe,EAAE;AAAEV,IAAAA,IAAI,EAAEC;AAAR,GAPO;AAQxBU,EAAAA,cAAc,EAAE;AAAEX,IAAAA,IAAI,EAAEC;AAAR,GARQ;AASxBW,EAAAA,UAAU,EAAE;AAAEZ,IAAAA,IAAI,EAAEa;AAAR,GATY;AAUxBC,EAAAA,SAAS,EAAE;AAAEd,IAAAA,IAAI,EAAEa;AAAR,GAVa;AAWxBE,EAAAA,UAAU,EAAE;AAAEf,IAAAA,IAAI,EAAEC;AAAR,GAXY;AAYxBe,EAAAA,QAAQ,EAAE;AAAEhB,IAAAA,IAAI,EAAEC;AAAR,GAZc;AAaxBgB,EAAAA,YAAY,EAAE;AAAEjB,IAAAA,IAAI,EAAEC;AAAR,GAbU;AAcxBiB,EAAAA,IAAI,EAAE;AAAElB,IAAAA,IAAI,EAAEC,MAAR;AAAgBO,IAAAA,OAAO,EAAE;AAAzB;AAdkB,CAAX,EAeZ;AAAEW,EAAAA,UAAU,EAAE;AAAd,CAfY,CAAf;AAiBArB,MAAM,CAACsB,IAAP,CAAY,MAAZ,EAAoB,UAAAC,GAAG,EAAI;AACzBC,EAAAA,OAAO,CAACC,GAAR,uCAA2CF,GAAG,CAACtB,MAA/C,oBAA+DsB,GAAG,CAAClB,IAAnE,uBAAoFkB,GAAG,CAACf,iBAAxF;AACD,CAFD;;AAIAR,MAAM,CAAC0B,OAAP,CAAeC,WAAf,GAA6B,SAASA,WAAT,GAAuB;AAClD,SAAOC,sBAAIC,IAAJ,CACL;AACEvB,IAAAA,KAAK,EAAE,KAAKA,KADd;AAEEc,IAAAA,IAAI,EAAE,KAAKA;AAFb,GADK,EAKLU,OAAO,CAACC,GAAR,CAAYC,UALP,CAAP;AAOD,CARD;;AAUAhC,MAAM,CAAC0B,OAAP,CAAeO,UAAf,GAA4B,SAASA,UAAT,GAAsB;AAChD,SAAO;AACL5B,IAAAA,IAAI,EAAE,KAAKA,IADN;AAELC,IAAAA,KAAK,EAAE,KAAKA,KAFP;AAGLW,IAAAA,UAAU,EAAE,KAAKA,UAHZ;AAILN,IAAAA,WAAW,EAAE,KAAKA,WAJb;AAKLuB,IAAAA,KAAK,EAAE,KAAKP,WAAL;AALF,GAAP;AAOD,CARD,C,CAUA;;;eAEe5B,kBAASoC,KAAT,CAAe,OAAf,EAAwBnC,MAAxB,C","sourcesContent":["import mongoose from \"mongoose\";\nimport jwt from \"jsonwebtoken\";\n// import paginate from 'mongoose-paginate';\n\nconst Schema = mongoose.Schema;\n\nconst schema = new Schema({\n  userID: { type: String, required: true },\n  name: { type: String, required: true },\n  email: { type: String, required: true },\n  pictureUrl: { type: String },\n  hasLongLivedToken: { type: Boolean, default: false },\n  accessToken: { type: String },\n  shortLivedToken: { type: String },\n  longLivedToken: { type: String },\n  expireDate: { type: Date },\n  lastLogin: { type: Date },\n  activePage: { type: String },\n  timeZone: { type: String },\n  locationName: { type: String },\n  role: { type: String, default: \"user\" },\n}, { timestamps: true });\n\nschema.post('save', doc => {\n  console.log(`user has benn saved: userID:${doc.userID}, name:${doc.name}, hasLong:${doc.hasLongLivedToken}`);\n});\n\nschema.methods.generateJWT = function generateJWT() {\n  return jwt.sign(\n    {\n      email: this.email,\n      role: this.role,\n    },\n    process.env.JWT_SECRET\n  );\n};\n\nschema.methods.toAuthJSON = function toAuthJSON() {\n  return {\n    name: this.name,\n    email: this.email,\n    activePage: this.activePage,\n    accessToken: this.accessToken,\n    token: this.generateJWT()\n  };\n};\n\n// schema.plugin(paginate);\n\nexport default mongoose.model(\"users\", schema);\n"],"file":"users.js"}