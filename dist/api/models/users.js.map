{"version":3,"sources":["../../../src/api/models/users.js"],"names":["Schema","mongoose","schema","userID","type","String","required","name","email","pictureUrl","hasLongLivedToken","Boolean","default","accessToken","expireDate","Date","lastLogin","activePage","timeZone","locationName","role","timestamps","post","doc","console","log","methods","generateJWT","jwt","sign","process","env","JWT_SECRET","toAuthJSON","token","model"],"mappings":"oGAAA;AACA,oE;;AAEA,IAAMA,MAAM,GAAGC,kBAASD,MAAxB;;AAEA,IAAME,MAAM,GAAG,IAAIF,MAAJ,CAAW;AACxBG,EAAAA,MAAM,EAAE,EAAEC,IAAI,EAAEC,MAAR,EAAgBC,QAAQ,EAAE,IAA1B,EADgB;AAExBC,EAAAA,IAAI,EAAE,EAAEH,IAAI,EAAEC,MAAR,EAAgBC,QAAQ,EAAE,IAA1B,EAFkB;AAGxBE,EAAAA,KAAK,EAAE,EAAEJ,IAAI,EAAEC,MAAR,EAAgBC,QAAQ,EAAE,IAA1B,EAHiB;AAIxBG,EAAAA,UAAU,EAAE,EAAEL,IAAI,EAAEC,MAAR,EAJY;AAKxBK,EAAAA,iBAAiB,EAAE,EAAEN,IAAI,EAAEO,OAAR,EAAiBC,OAAO,EAAE,KAA1B,EALK;AAMxBC,EAAAA,WAAW,EAAE,EAAET,IAAI,EAAEC,MAAR,EANW;AAOxBS,EAAAA,UAAU,EAAE,EAAEV,IAAI,EAAEW,IAAR,EAPY;AAQxBC,EAAAA,SAAS,EAAE,EAAEZ,IAAI,EAAEW,IAAR,EARa;AASxBE,EAAAA,UAAU,EAAE,EAAEb,IAAI,EAAEC,MAAR,EATY;AAUxBa,EAAAA,QAAQ,EAAE,EAAEd,IAAI,EAAEC,MAAR,EAVc;AAWxBc,EAAAA,YAAY,EAAE,EAAEf,IAAI,EAAEC,MAAR,EAXU;AAYxBe,EAAAA,IAAI,EAAE,EAAEhB,IAAI,EAAEC,MAAR,EAAgBO,OAAO,EAAE,MAAzB,EAZkB,EAAX;AAaZ,EAAES,UAAU,EAAE,IAAd,EAbY,CAAf;;AAeAnB,MAAM,CAACoB,IAAP,CAAY,MAAZ,EAAoB,UAAAC,GAAG,EAAI;AACzBC,EAAAA,OAAO,CAACC,GAAR,uCAA2CF,GAAG,CAACpB,MAA/C,oBAA+DoB,GAAG,CAAChB,IAAnE,uBAAoFgB,GAAG,CAACb,iBAAxF;AACD,CAFD;;AAIAR,MAAM,CAACwB,OAAP,CAAeC,WAAf,GAA6B,SAASA,WAAT,GAAuB;AAClD,SAAOC,sBAAIC,IAAJ;AACL;AACErB,IAAAA,KAAK,EAAE,KAAKA,KADd;AAEEY,IAAAA,IAAI,EAAE,KAAKA,IAFb,EADK;;AAKLU,EAAAA,OAAO,CAACC,GAAR,CAAYC,UALP,CAAP;;AAOD,CARD;;AAUA9B,MAAM,CAACwB,OAAP,CAAeO,UAAf,GAA4B,SAASA,UAAT,GAAsB;AAChD,SAAO;AACL1B,IAAAA,IAAI,EAAE,KAAKA,IADN;AAELC,IAAAA,KAAK,EAAE,KAAKA,KAFP;AAGLS,IAAAA,UAAU,EAAE,KAAKA,UAHZ;AAILJ,IAAAA,WAAW,EAAE,KAAKA,WAJb;AAKLqB,IAAAA,KAAK,EAAE,KAAKP,WAAL,EALF,EAAP;;AAOD,CARD,C;;AAUe1B,kBAASkC,KAAT,CAAe,OAAf,EAAwBjC,MAAxB,C","sourcesContent":["import mongoose from \"mongoose\";\nimport jwt from \"jsonwebtoken\";\n\nconst Schema = mongoose.Schema;\n\nconst schema = new Schema({\n  userID: { type: String, required: true },\n  name: { type: String, required: true },\n  email: { type: String, required: true },\n  pictureUrl: { type: String },\n  hasLongLivedToken: { type: Boolean, default: false },\n  accessToken: { type: String },\n  expireDate: { type: Date },\n  lastLogin: { type: Date },\n  activePage: { type: String },\n  timeZone: { type: String },\n  locationName: { type: String },\n  role: { type: String, default: \"user\" },\n}, { timestamps: true });\n\nschema.post('save', doc => {\n  console.log(`user has benn saved: userID:${doc.userID}, name:${doc.name}, hasLong:${doc.hasLongLivedToken}`);\n});\n\nschema.methods.generateJWT = function generateJWT() {\n  return jwt.sign(\n    {\n      email: this.email,\n      role: this.role,\n    },\n    process.env.JWT_SECRET\n  );\n};\n\nschema.methods.toAuthJSON = function toAuthJSON() {\n  return {\n    name: this.name,\n    email: this.email,\n    activePage: this.activePage,\n    accessToken: this.accessToken,\n    token: this.generateJWT()\n  };\n};\n\nexport default mongoose.model(\"users\", schema);\n"],"file":"users.js"}