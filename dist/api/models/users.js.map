{"version":3,"sources":["../../../src/api/models/users.js"],"names":["Schema","mongoose","schema","userID","type","String","required","name","email","pictureUrl","hasLongLivedToken","Boolean","default","accessToken","facebookCode","shortLivedToken","longLivedToken","expireDate","Date","lastLogin","activePage","timeZone","locationName","role","timestamps","post","doc","console","log","methods","generateJWT","jwt","sign","process","env","JWT_SECRET","toAuthJSON","token","model"],"mappings":";;;;;;;AAAA;;AACA;;;;AACA;AAEA,IAAMA,MAAM,GAAGC,kBAASD,MAAxB;AAEA,IAAME,MAAM,GAAG,IAAIF,MAAJ,CAAW;AACtBG,EAAAA,MAAM,EAAE;AAAEC,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GADc;AAEtBC,EAAAA,IAAI,EAAE;AAAEH,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAFgB;AAGtBE,EAAAA,KAAK,EAAE;AAAEJ,IAAAA,IAAI,EAAEC;AAAR,GAHe;AAItBI,EAAAA,UAAU,EAAE;AAAEL,IAAAA,IAAI,EAAEC;AAAR,GAJU;AAKtBK,EAAAA,iBAAiB,EAAE;AAAEN,IAAAA,IAAI,EAAEO,OAAR;AAAiBC,IAAAA,OAAO,EAAE;AAA1B,GALG;AAMtBC,EAAAA,WAAW,EAAE;AAAET,IAAAA,IAAI,EAAEC;AAAR,GANS;AAOtBS,EAAAA,YAAY,EAAE;AAAEV,IAAAA,IAAI,EAAEC;AAAR,GAPQ;AAQtBU,EAAAA,eAAe,EAAE;AAAEX,IAAAA,IAAI,EAAEC;AAAR,GARK;AAStBW,EAAAA,cAAc,EAAE;AAAEZ,IAAAA,IAAI,EAAEC;AAAR,GATM;AAUtBY,EAAAA,UAAU,EAAE;AAAEb,IAAAA,IAAI,EAAEc;AAAR,GAVU;AAWtBC,EAAAA,SAAS,EAAE;AAAEf,IAAAA,IAAI,EAAEc;AAAR,GAXW;AAYtBE,EAAAA,UAAU,EAAE;AAAEhB,IAAAA,IAAI,EAAEC;AAAR,GAZU;AAatBgB,EAAAA,QAAQ,EAAE;AAAEjB,IAAAA,IAAI,EAAEC;AAAR,GAbY;AActBiB,EAAAA,YAAY,EAAE;AAAElB,IAAAA,IAAI,EAAEC;AAAR,GAdQ;AAetBkB,EAAAA,IAAI,EAAE;AAAEnB,IAAAA,IAAI,EAAEC,MAAR;AAAgBO,IAAAA,OAAO,EAAE;AAAzB;AAfgB,CAAX,EAgBZ;AAAEY,EAAAA,UAAU,EAAE;AAAd,CAhBY,CAAf;AAkBAtB,MAAM,CAACuB,IAAP,CAAY,MAAZ,EAAoB,UAAAC,GAAG,EAAI;AACvBC,EAAAA,OAAO,CAACC,GAAR,uCAA2CF,GAAG,CAACvB,MAA/C,oBAA+DuB,GAAG,CAACnB,IAAnE,uBAAoFmB,GAAG,CAAChB,iBAAxF;AACH,CAFD;;AAIAR,MAAM,CAAC2B,OAAP,CAAeC,WAAf,GAA6B,SAASA,WAAT,GAAuB;AAChD,SAAOC,sBAAIC,IAAJ,CACH;AACIxB,IAAAA,KAAK,EAAE,KAAKA,KADhB;AAEIe,IAAAA,IAAI,EAAE,KAAKA;AAFf,GADG,EAKHU,OAAO,CAACC,GAAR,CAAYC,UALT,CAAP;AAOH,CARD;;AAUAjC,MAAM,CAAC2B,OAAP,CAAeO,UAAf,GAA4B,SAASA,UAAT,GAAsB;AAC9C,SAAO;AACH7B,IAAAA,IAAI,EAAE,KAAKA,IADR;AAEHC,IAAAA,KAAK,EAAE,KAAKA,KAFT;AAGHY,IAAAA,UAAU,EAAE,KAAKA,UAHd;AAIHP,IAAAA,WAAW,EAAE,KAAKA,WAJf;AAKHwB,IAAAA,KAAK,EAAE,KAAKP,WAAL;AALJ,GAAP;AAOH,CARD,C,CAUA;;;eAEe7B,kBAASqC,KAAT,CAAe,OAAf,EAAwBpC,MAAxB,C","sourcesContent":["import mongoose from 'mongoose';\nimport jwt from 'jsonwebtoken';\n// import paginate from 'mongoose-paginate';\n\nconst Schema = mongoose.Schema;\n\nconst schema = new Schema({\n    userID: { type: String, required: true },\n    name: { type: String, required: true },\n    email: { type: String },\n    pictureUrl: { type: String },\n    hasLongLivedToken: { type: Boolean, default: false },\n    accessToken: { type: String },\n    facebookCode: { type: String },\n    shortLivedToken: { type: String },\n    longLivedToken: { type: String },\n    expireDate: { type: Date },\n    lastLogin: { type: Date },\n    activePage: { type: String },\n    timeZone: { type: String },\n    locationName: { type: String },\n    role: { type: String, default: 'user' },\n}, { timestamps: true });\n\nschema.post('save', doc => {\n    console.log(`user has been saved: userID:${doc.userID}, name:${doc.name}, hasLong:${doc.hasLongLivedToken}`);\n});\n\nschema.methods.generateJWT = function generateJWT() {\n    return jwt.sign(\n        {\n            email: this.email,\n            role: this.role,\n        },\n        process.env.JWT_SECRET\n    );\n};\n\nschema.methods.toAuthJSON = function toAuthJSON() {\n    return {\n        name: this.name,\n        email: this.email,\n        activePage: this.activePage,\n        accessToken: this.accessToken,\n        token: this.generateJWT(),\n    };\n};\n\n// schema.plugin(paginate);\n\nexport default mongoose.model('users', schema);\n"],"file":"users.js"}