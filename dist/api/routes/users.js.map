{"version":3,"sources":["../../../src/api/routes/users.js"],"names":["router","express","Router","post","users_auth","users_create","get","req","res","sortObj","query","sort","User","find","then","result","setHeader","util","format","length","json","findOne","id","params","put","updatedElement","body","name","sanitizeName","email","findOneAndUpdate","oldResult","newResult","data","_id","catch","err","console","log","status","success","msg","delete","findOneAndRemove"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,GAAGC,iBAAQC,MAAR,EAAf,C,CAEA;;;AACAF,MAAM,CAACG,IAAP,CAAY,OAAZ,EAAqBC,2BAArB,E,CAEA;;AACAJ,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBE,6BAAvB,E,CAEA;AACA;AACA;;AACAL,MAAM,CAACM,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAE5B,MAAIC,OAAO,GAAG,4BAAgBF,GAAG,CAACG,KAAJ,CAAUC,IAA1B,CAAd;;AAEAC,iBAAKC,IAAL,GAAYF,IAAZ,CAAiBF,OAAjB,EAA0BK,IAA1B,CAA+B,UAAAC,MAAM,EAAI;AACvCP,IAAAA,GAAG,CAACQ,SAAJ,CAAc,eAAd,EAA+BC,cAAKC,MAAL,CAAY,gBAAZ,EAA8BH,MAAM,CAACI,MAArC,EAA6C,CAA7C,EAAgDJ,MAAM,CAACI,MAAvD,CAA/B;AACAX,IAAAA,GAAG,CAACY,IAAJ,CAASL,MAAT;AACD,GAHD;AAKD,CATD;AAWAf,MAAM,CAACM,GAAP,CAAW,MAAX,EAAmB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/BI,iBAAKS,OAAL,CAAa;AAAEC,IAAAA,EAAE,EAAEf,GAAG,CAACgB,MAAJ,CAAWD;AAAjB,GAAb,EAAoCR,IAApC,CAAyC,UAAAC,MAAM,EAAI;AACjDP,IAAAA,GAAG,CAACY,IAAJ,CAASL,MAAT;AACD,GAFD;AAGD,CAJD,E,CAMA;;AACAf,MAAM,CAACwB,GAAP,CAAW,MAAX,EAAmB,UAACjB,GAAD,EAAMC,GAAN,EAAc;AAC/B,MAAIiB,cAAc,GAAG;AACnBH,IAAAA,EAAE,EAAEf,GAAG,CAACmB,IAAJ,CAASJ,EADM;AAEnBK,IAAAA,IAAI,EAAEC,YAAY,CAACrB,GAAG,CAACmB,IAAJ,CAASC,IAAV,CAFC;AAGnBE,IAAAA,KAAK,EAAEtB,GAAG,CAACmB,IAAJ,CAASG;AAHG,GAArB;;AAMAjB,iBAAKkB,gBAAL,CAAsB;AAAER,IAAAA,EAAE,EAAEf,GAAG,CAACgB,MAAJ,CAAWD;AAAjB,GAAtB,EAA6CG,cAA7C,EACGX,IADH,CACQ,UAACiB,SAAD,EAAe;AACnBnB,mBAAKS,OAAL,CAAa;AAAEC,MAAAA,EAAE,EAAEf,GAAG,CAACgB,MAAJ,CAAWD;AAAjB,KAAb,EACGR,IADH,CACQ,UAACkB,SAAD,EAAe;AACnBxB,MAAAA,GAAG,CAACY,IAAJ,CAAS;AACPa,QAAAA,IAAI,EAAE;AACJC,UAAAA,GAAG,EAAEF,SAAS,CAACE,GADX;AAEJZ,UAAAA,EAAE,EAAEU,SAAS,CAACV,EAFV;AAGJK,UAAAA,IAAI,EAAEK,SAAS,CAACL,IAHZ;AAIJE,UAAAA,KAAK,EAAEG,SAAS,CAACH;AAJb;AADC,OAAT;AAQD,KAVH,EAWGM,KAXH,CAWS,UAACC,GAAD,EAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA5B,MAAAA,GAAG,CAAC+B,MAAJ,CAAW,GAAX,EAAgBnB,IAAhB,CAAqB;AAAEoB,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,GAAG,kCAA2BL,GAA3B;AAArB,OAArB;AACA;AACD,KAfH;AAgBD,GAlBH,EAmBGD,KAnBH,CAmBS,UAACC,GAAD,EAAS;AACd,QAAIA,GAAJ,EAAS;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA5B,MAAAA,GAAG,CAAC+B,MAAJ,CAAW,GAAX,EAAgBnB,IAAhB,CAAqB;AAAEoB,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,GAAG,kCAA2BL,GAA3B;AAArB,OAArB;AACD;AACF,GAxBH;AAyBD,CAhCD,E,CAkCA;;AACApC,MAAM,CAAC0C,MAAP,CAAc,MAAd,EAAsB,UAACnC,GAAD,EAAMC,GAAN,EAAc;AAClCI,iBAAK+B,gBAAL,CAAsB;AAAErB,IAAAA,EAAE,EAAEf,GAAG,CAACgB,MAAJ,CAAWD;AAAjB,GAAtB,EACGR,IADH,CACQ,UAACC,MAAD,EAAY;AAChBP,IAAAA,GAAG,CAACY,IAAJ,CAAS;AACPoB,MAAAA,OAAO,EAAE,IADF;AAEPC,MAAAA,GAAG;AAFI,KAAT;AAID,GANH,EAOGN,KAPH,CAOS,UAACC,GAAD,EAAS;AACd5B,IAAAA,GAAG,CAAC+B,MAAJ,CAAW,GAAX,EAAgBnB,IAAhB,CAAqB;AAAEoB,MAAAA,OAAO,EAAE,KAAX;AAAkBC,MAAAA,GAAG,EAAE;AAAvB,KAArB;AACD,GATH;AAUD,CAXD;;AAcA,IAAMb,YAAY,GAAG,SAAfA,YAAe,CAACD,IAAD,EAAU;AAC7B,SAAO,mCAAqBA,IAArB,CAAP;AACD,CAFD;;eAIe3B,M","sourcesContent":["import express from \"express\";\nimport User from \"../models/users\";\nimport util from \"util\";\nimport stringCapitalizeName from 'string-capitalize-name';\nimport { configSortQuery } from '../util/util';\nimport { users_auth, users_create } from '../controllers/usersController';\n\nconst router = express.Router();\n\n// Authenticate user\nrouter.post('/auth', users_auth);\n\n// Create/update/authenticate user\nrouter.post('/create', users_create);\n\n// TODO: move to usersController\n// List all users\n// TODO: use filters in the query req.query\nrouter.get(\"/\", (req, res) => {\n\n  var sortObj = configSortQuery(req.query.sort);\n\n  User.find().sort(sortObj).then(result => {\n    res.setHeader('Content-Range', util.format(\"users %d-%d/%d\", result.length, 1, result.length));\n    res.json(result);\n  });\n\n});\n\nrouter.get(\"/:id\", (req, res) => {\n  User.findOne({ id: req.params.id }).then(result => {\n    res.json(result);\n  });\n});\n\n// UPDATE\nrouter.put('/:id', (req, res) => {\n  let updatedElement = {\n    id: req.body.id,\n    name: sanitizeName(req.body.name),\n    email: req.body.email,\n  };\n\n  User.findOneAndUpdate({ id: req.params.id }, updatedElement)\n    .then((oldResult) => {\n      User.findOne({ id: req.params.id })\n        .then((newResult) => {\n          res.json({\n            data: {\n              _id: newResult._id,\n              id: newResult.id,\n              name: newResult.name,\n              email: newResult.email,\n            }\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n          res.status(500).json({ success: false, msg: `Something went wrong. ${err}` });\n          return;\n        });\n    })\n    .catch((err) => {\n      if (err) {\n        console.log(err);\n        res.status(500).json({ success: false, msg: `Something went wrong. ${err}` });\n      }\n    });\n});\n\n// DELETE\nrouter.delete('/:id', (req, res) => {\n  User.findOneAndRemove({ id: req.params.id })\n    .then((result) => {\n      res.json({\n        success: true,\n        msg: `It has been deleted.`,\n      });\n    })\n    .catch((err) => {\n      res.status(404).json({ success: false, msg: 'Nothing to delete.' });\n    });\n});\n\n\nconst sanitizeName = (name) => {\n  return stringCapitalizeName(name);\n}\n\nexport default router;\n"],"file":"users.js"}