{"version":3,"sources":["../../../src/api/util/util.js"],"names":["configSortQuery","sortString","sortObj","arr","JSON","parse","configRangeQuery","rangeString","offset","limit","configRangeQueryNew","json","configFilterQuery","filterString","_field","Object","keys","_values","values","filterField","filterValues","configFilterQueryMultiple","choices_sizes","id","name","order","choices_kinds","shuffle","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","degreesToRadians","degrees","PI","distanceBetweenCoordinates","lat1","lon1","lat2","lon2","earthRadiusKm","dLat","dLon","a","sin","cos","c","atan2","sqrt","formatWhatsappNumber","index","indexOf","substr","formatAsCurrency","amount","toLocaleString","style","currency","maximumSignificantDigits"],"mappings":"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","sourcesContent":["\nexport const configSortQuery = sortString => {\n    var sortObj = {};\n    if (typeof (sortString) != 'undefined') {\n        var arr = JSON.parse(sortString);\n        sortObj[arr[0]] = arr[1];\n    }\n    return sortObj;\n}\n\n/**\n * This function is deprecated and is used with the mongoose paginate plugin.\n * Insted of this function, use configRangeQueryNew\n * react-admin sends a range [0,9] and I am transforming it in offset: 0, limit: 10\n * @param {*} rangeString \n */\nexport const configRangeQuery = rangeString => {\n    if (typeof rangeString !== 'undefined') {\n        var arr = JSON.parse(rangeString);\n        return {\n            offset: arr[0],\n            limit: arr[1] + 1\n        }\n    } else return null;\n}\n\n/**\n * Using without the paginate plugin.\n * @param {*} rangeString \n */\nexport const configRangeQueryNew = rangeString => {\n    if (typeof (rangeString) !== 'undefined') {\n        let json = JSON.parse(rangeString);\n        return {\n            offset: json[0],\n            limit: (json[1] + 1) - json[0]\n        };\n    } else\n        return null;\n}\n\nexport const configFilterQuery = filterString => {\n    if (typeof filterString !== 'undefined') {\n        const json = JSON.parse(filterString);\n        const _field = Object.keys(json)[0];\n        const _values = Object.values(json)[0];\n\n        return { filterField: _field, filterValues: _values };\n    } else return null;\n}\n\nexport const configFilterQueryMultiple = filterString => {\n    if (typeof filterString !== 'undefined') {\n        const json = JSON.parse(filterString);\n        return { filterField: Object.keys(json), filterValues: Object.values(json) };\n    } else return null;\n}\n\n\nexport const choices_sizes = async () => {\n    return [\n        { id: 'mini', name: 'Mini', order: 1 },\n        { id: 'pequena', name: 'Pequena', order: 2 },\n        { id: 'media', name: 'MÃ©dia', order: 3 },\n        { id: 'grande', name: 'Grande', order: 4 },\n        { id: 'gigante', name: 'Gigante', order: 5 }\n    ];\n}\n\nexport const choices_kinds = () => {\n    return [\n        { id: 'tradicional', name: 'Tradicional' },\n        { id: 'especial', name: 'Especial' },\n        { id: 'doce', name: 'Doce' },\n    ];\n}\n\n\n/**\n * Shuffle (randomize) the elements of array\n * @param {*} array \n */\nexport const shuffle = array => {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n\n        // And swap it with the current element.\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n}\n\nconst degreesToRadians = degrees => degrees * Math.PI / 180;\n\nexport const distanceBetweenCoordinates = (lat1, lon1, lat2, lon2) => {\n    if (lat1 && lon1 && lat2 && lon2) {\n        var earthRadiusKm = 6371;\n\n        var dLat = degreesToRadians(lat2 - lat1);\n        var dLon = degreesToRadians(lon2 - lon1);\n\n        lat1 = degreesToRadians(lat1);\n        lat2 = degreesToRadians(lat2);\n\n        var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n            Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);\n        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n        return earthRadiusKm * c;\n    }\n    else return null;\n}\n\n/**\n * Whatsapp send the id this way: \"554184163676@c.us\",\n * I am removing the last part, after @.\n * @param {*} id\n */\nexport const formatWhatsappNumber = id => {\n    const index = id.indexOf('@');\n    if (index > 0)\n        return id.substr(0, index);\n    else\n        return id;\n}\n\n/**\n * Format as a currency\n * @param {*} amount\n */\nexport const formatAsCurrency = amount =>\n    amount.toLocaleString('pt-BR',\n        { style: 'currency', currency: 'BRL', maximumSignificantDigits: 2 });\n"],"file":"util.js"}