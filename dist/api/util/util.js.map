{"version":3,"sources":["../../../src/api/util/util.js"],"names":["configSortQuery","sortString","sortObj","arr","JSON","parse","configRangeQuery","rangeString","rangeObj","offset","limit","choices_sizes","Object","id","name","order"],"mappings":";;;;;;;;;;;AAAO,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,UAAU,EAAI;AACzC,MAAIC,OAAO,GAAG,EAAd;;AACA,MAAI,OAAQD,UAAR,IAAuB,WAA3B,EAAwC;AACpC,QAAIE,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWJ,UAAX,CAAV;AACAC,IAAAA,OAAO,CAACC,GAAG,CAAC,CAAD,CAAJ,CAAP,GAAkBA,GAAG,CAAC,CAAD,CAArB;AACH;;AACD,SAAOD,OAAP;AACH,CAPM,C,CASP;AACA;;;;;AACO,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,WAAW,EAAI;AAC3C,MAAIC,QAAQ,GAAG,EAAf;;AACA,MAAI,OAAQD,WAAR,IAAwB,WAA5B,EAAyC;AACrC,QAAIJ,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWE,WAAX,CAAV;AACAC,IAAAA,QAAQ,GAAG;AACPC,MAAAA,MAAM,EAAEN,GAAG,CAAC,CAAD,CADJ;AAEPO,MAAAA,KAAK,EAAEP,GAAG,CAAC,CAAD,CAAH,GAAS;AAFT,KAAX;AAIH;;AACD,SAAOK,QAAP;AACH,CAVM;;;;AAYA,IAAMG,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG;AAAA;AAAA;AAAA;AAAA;AAAA,6CAClB,IAAIC,MAAJ,CAAW,CACd;AAAEC,cAAAA,EAAE,EAAE,MAAN;AAAcC,cAAAA,IAAI,EAAE,MAApB;AAA4BC,cAAAA,KAAK,EAAE;AAAnC,aADc,EAEd;AAAEF,cAAAA,EAAE,EAAE,SAAN;AAAiBC,cAAAA,IAAI,EAAE,SAAvB;AAAkCC,cAAAA,KAAK,EAAE;AAAzC,aAFc,EAGd;AAAEF,cAAAA,EAAE,EAAE,OAAN;AAAeC,cAAAA,IAAI,EAAE,OAArB;AAA8BC,cAAAA,KAAK,EAAE;AAArC,aAHc,EAId;AAAEF,cAAAA,EAAE,EAAE,QAAN;AAAgBC,cAAAA,IAAI,EAAE,QAAtB;AAAgCC,cAAAA,KAAK,EAAE;AAAvC,aAJc,EAKd;AAAEF,cAAAA,EAAE,EAAE,SAAN;AAAiBC,cAAAA,IAAI,EAAE,SAAvB;AAAkCC,cAAAA,KAAK,EAAE;AAAzC,aALc,CAAX,CADkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbJ,aAAa;AAAA;AAAA;AAAA,GAAnB","sourcesContent":["export const configSortQuery = sortString => {\n    var sortObj = {};\n    if (typeof (sortString) != \"undefined\") {\n        var arr = JSON.parse(sortString);\n        sortObj[arr[0]] = arr[1];\n    }\n    return sortObj;\n}\n\n// react-admin sends a range [0,9] and I am transforming\n// it in offset: 0, limit: 10\nexport const configRangeQuery = rangeString => {\n    var rangeObj = {};\n    if (typeof (rangeString) != \"undefined\") {\n        var arr = JSON.parse(rangeString);\n        rangeObj = {\n            offset: arr[0],\n            limit: arr[1] + 1\n        }\n    }\n    return rangeObj;\n}\n\nexport const choices_sizes = async () => {\n    return new Object([\n        { id: 'mini', name: 'Mini', order: 1 },\n        { id: 'pequena', name: 'Pequena', order: 2 },\n        { id: 'media', name: 'MÃ©dia', order: 3 },\n        { id: 'grande', name: 'Grande', order: 4 },\n        { id: 'gigante', name: 'Gigante', order: 5 }\n    ]);\n}\n\n"],"file":"util.js"}