{"version":3,"sources":["../../../src/api/whatsapp/whatController.js"],"names":["w_controller","args","console","info","myId","message","userId","match","location","contactName","profileImg","names","split","first_name","shift","last_name","length","join","_profile_pic","decodeURIComponent","replace","user","profile_pic","store","name","pageId","pendingOrder","order","id","waitingFor","undo","sendActions","action","pageID","userID","data","currentItemCategory","addrData","manual_addres","formattedAddress","result","getText","sendWelcomeMessage","replyText","dataMenu","text","hasOwnProperty","objectWithEvent","buttons","event","multiple","mapEventsActions","fn","params","type","index","options","map","option","payload","getElement","basicReply","out","checkTypedText","askForContinue","optionsStopOrder","sendMainMenu","askForCategoryCardapio","sendHorario","askForDeliver","showDeliverCheckAddress","confirmAddressOrAskLocation","confirmAddress","askForWantOrder","confirmLocationAddress","showAddressAskForCategory","askForLocation","showDeliverAskForCategory","askForQuantity","askForQuantityMore","showQuantityAskForSize","askToTypeComments","showCategoryAskForSize","askForCategory","cancelPendingShowPartialOrder","sendCardapio","error","waboxapp_sendMessage","to","myToken","uid","custom_uid","encodeURIComponent","Math","random","qText","waboxApp","axios","get"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n    basicReply, askForContinue, passThreadControl,\n    sendMainMenu, sendWelcomeMessage, sendCardapio, sendHorario,\n    checkLastAction, optionsStopOrder,\n    showDeliverCheckAddress,\n    confirmLocationAddress, confirmAddressOrAskLocation, confirmAddress,\n    askForLocation, askToTypeAddress,\n    askForQuantityMore, showQuantityAskForSize,\n    showSizeCheckSplit,\n    showSplitCheckFlavor, askForQuantity,\n    showFlavor, showFlavorCheckItem, showOrderOrNextItem,\n    askForWantBeverage, askForBeverages, showBeverageAskForPaymentType,\n    showNoBeverageAskForPaymentType,\n    showPaymentTypeAskForPaymentChange,\n    showPaymentTypeAskForComments, showPaymentChangeAskForComments,\n    confirmOrder, askForChangeOrder, askForSpecificItem, updateItemAskOptions,\n    askForFlavorOrConfirm, cancelPendingOrder, changeItem, cancelItem,\n    askForDeliver, askForComments,\n    showFullOrderConfirmOrder, askToTypeComments, showDeliverAskForCategory,\n    showCategoryAskForSize, askForCategory, askForPaymentType, showAddressAskForCategory,\n    askForSizeCat, cancelPendingShowPartialOrder,\n} from '../bot/botController';\nimport { getStoreByPhone } from '../controllers/storesController';\nimport { getOrderPending } from '../controllers/ordersController';\nimport { askForCategoryCardapio } from '../bot/show_cardapio';\n\n/**\n * Receives the user and message from whatsapp and\n * returns a message from the system.\n * @param {*} args\n */\nexport const w_controller = async (args) => {\n    console.info('###### w_controller ######');\n    console.info(args);\n    const { myId, message, userId, match, location, contactName, profileImg } = args;\n\n    const names = contactName.split(' ');\n    const first_name = names.shift();\n    const last_name = names.length >= 1 ? names.join(' ') : null;\n    const _profile_pic = profileImg && decodeURIComponent(profileImg.replace('https://web.whatsapp.com/pp?e=', ''));\n    const user = {\n        first_name: first_name,\n        last_name: last_name,\n        profile_pic: _profile_pic,\n    }\n\n    const store = await getStoreByPhone(myId);\n    if (store) {\n        console.info(`store name: ${store.name}, match:${match}`);\n        const { pageId } = store;\n\n        // Welcome Message\n        if (!match) {\n            const pendingOrder = await getOrderPending({ pageId: pageId, userId: userId });\n\n            if (pendingOrder && pendingOrder.order) {\n                console.info(`pendingorder id:${pendingOrder.order.id} \n                waitingFor:${pendingOrder.order.waitingFor}\n                undo:${pendingOrder.order.undo} `);\n\n                let result;\n\n                // user typed 0, it is undo\n                if (message === '0') {\n                    if (pendingOrder.order.undo === 'quantity') {\n                        return await sendActions({\n                            action: 'ASK_FOR_QUANTITY',\n                            pageID: pageId, userID: userId,\n                        });\n                    } else if (pendingOrder.order.undo === 'size') {\n                        return await sendActions({\n                            action: 'ASK_FOR_SIZE',\n                            pageID: pageId, userID: userId,\n                            data: pendingOrder.order.currentItemCategory,\n                        });\n                    }\n                }\n\n                if (pendingOrder.order.waitingFor === 'typed_address') {\n                    const addrData = {\n                        manual_addres: true,\n                        formattedAddress: message,\n                    }\n                    result = await sendActions({\n                        action: 'CONFIRM_ADDRESS',\n                        pageID: pageId, userID: userId, addrData, user,\n                    });\n                } else if (pendingOrder.order.waitingFor === 'typed_comments') {\n                    result = await sendActions({\n                        action: 'SHOW_FULL_ORDER_CONFIRM_ORDER',\n                        pageID: pageId, userID: userId, data: message,\n                    });\n                } else if (pendingOrder.order.waitingFor === 'location') {\n                    if (location) {\n                        result = await sendActions({\n                            action: 'LOCATION_CONFIRM_ADDRESS',\n                            pageID: pageId, userID: userId, location,\n                        });\n                    } else {\n                        result = await sendActions({\n                            action: 'ASK_TO_TYPE_ADDRESS',\n                            pageID: pageId, userID: userId,\n                        });\n                    }\n                } else {\n                    result = await sendActions({\n                        action: 'ASK_FOR_CONTINUE',\n                        pageID: pageId, userID: userId, user,\n                    });\n                }\n                return result;\n            } else {\n                let replyText = await getText(sendWelcomeMessage, [pageId, contactName]);\n                replyText = replyText + '\\n';\n\n                const dataMenu = await sendMainMenu();\n                dataMenu.text = replyText + dataMenu.text;\n                return dataMenu;\n            }\n        } else {\n            let objectWithEvent;\n            if (match.hasOwnProperty('event'))\n                objectWithEvent = match;\n            else if (match.hasOwnProperty('buttons')) {\n                if (match.buttons.hasOwnProperty('event'))\n                    objectWithEvent = match.buttons;\n            }\n\n            const { event, data } = objectWithEvent;\n            const multiple = data ? (data.multiple ? data.multiple : 1) : 1;\n            const action = mapEventsActions(event, data);\n            const result = await sendActions({\n                action, pageID: pageId,\n                userID: userId, data, location, multiple, user,\n            });\n            return result;\n        }\n    } else {\n        console.info(`### w_controller ### did not find store for myId: ${myId}`);\n    }\n}\n\nconst getText = async (fn, params) => {\n    const data = params ? await fn(...params) : await fn();\n    let replyText = '';\n    if (data.type === 'buttons') {\n        replyText = data.text + '\\n';\n        let index = 1;\n        data.options.map(option => {\n            replyText = replyText + index + '. ' + option.text + '\\n';\n            index++;\n        });\n    } else if (data.type === 'text') {\n        replyText = data.text + '\\n';\n    }\n    return replyText;\n}\n\n\nconst mapEventsActions = (event, data) => {\n    switch (event) {\n        case 'MAIN_MENU':\n            return 'SEND_MAIN_MENU'\n        case 'ORDER_CONTINUE_ORDER':\n            switch (data) {\n                case 'continueorder_yes':\n                    return 'CHECK_LAST_ACTION';\n                case 'continueorder_no':\n                    return 'CONTINUE_ORDER_NO';\n            }\n            break;\n        case 'STOP_ORDER_OPTIONS':\n            switch (data) {\n                case 'stoporder_init':\n                    return 'CANCEL_PENDING_ORDER';\n                case 'stoporder_human':\n                    return 'PASS_THREAD_CONTROL';\n            }\n            break;\n        case 'MAIN-MENU':\n            switch (data) {\n                case 'CARDAPIO_PAYLOAD':\n                    return 'SEND_CARDAPIO';\n                case 'PEDIDO_PAYLOAD':\n                    return 'ASK_FOR_DELIVER';\n                case 'HORARIO_PAYLOAD':\n                    return 'SEND_HORARIO';\n            }\n            break;\n        case 'ORDER_WANT_ORDER':\n            switch (data) {\n                case 'wantorder_yes':\n                    return 'ASK_FOR_DELIVER';\n                case 'wantorder_no':\n                    return 'SEND_MAIN_MENU';\n            }\n            break;\n        case 'ORDER_DELIVER':\n            switch (data.type) {\n                case 'delivery':\n                    return 'SHOW_DELIVER_CHECK_ADDRESS'\n                case 'pickup':\n                    return 'SHOW_DELIVER_ASK_FOR_CATEGORY';\n            }\n            break;\n        case 'CORRECT_SAVED_ADDRESS':\n            return 'SHOW_ADDRESS_ASK_FOR_CATEGORY';\n        case 'WRONG_SAVED_ADDRESS':\n            return 'ASK_FOR_LOCATION';\n        case 'LOCATION':\n            switch (data) {\n                case 'location_location':\n                    return 'LOCATION_CONFIRM_ADDRESS';\n            }\n            break;\n        case 'LOCATION_ADDRESS':\n            switch (data) {\n                case 'incorrect_address':\n                    return 'ASK_TO_TYPE_ADDRESS';\n                default:\n                    return 'SHOW_ADDRESS_ASK_FOR_CATEGORY';\n            }\n        case 'ORDER_QTY':\n            switch (data) {\n                case 'qty_more':\n                    return 'ASK_FOR_QUANTITY_MORE';\n                case 'qty_less':\n                    return 'ASK_FOR_QUANTITY';\n                default:\n                    return 'SHOW_QUANTITY_ASK_FOR_SIZE';\n            }\n        case 'ORDER_SIZE':\n            return 'SHOW_SIZE_CHECK_SPLIT';\n        case 'ORDER_SPLIT':\n            return 'SHOW_SPLIT_CHECK_FLAVOR';\n        case 'ORDER_FLAVOR':\n            switch (data.option) {\n                case 'flavors_more':\n                    return 'ASK_FOR_FLAVOR';\n                default:\n                    return 'SHOW_FLAVOR_CHECK_ITEM';\n            }\n        case 'ORDER_PIZZA_CONFIRMATION':\n            switch (data.type) {\n                case 'confirmation_yes':\n                    return 'ASK_FOR_PAYMENT_TYPE';\n                default:\n                    return 'ASK_FOR_CHANGE_ORDER';\n            }\n        case 'ORDER_WANT_CHANGE':\n            return 'ASK_FOR_SPECIFIC_ITEM';\n        case 'ORDER_CHANGE':\n            switch (data) {\n                case 'change_quantity':\n                    return 'ASK_FOR_QUANTITY';\n                case 'change_size':\n                    return 'ASK_FOR_SIZE';\n                case 'change_flavor':\n                    return 'ASK_FOR_FLAVOR';\n                case 'change_address':\n                    return 'ASK_FOR_LOCATION';\n                case 'change_item':\n                    return 'CHANGE_ITEM';\n                case 'cancel_item':\n                    return 'CANCEL_ITEM';\n            }\n            break;\n        case 'ORDER_CHANGE_ITEM':\n            return 'CHANGE_ITEM';\n        case 'ORDER_CANCEL_ITEM':\n            return 'CANCEL_ITEM';\n        case 'ORDER_CONFIRM_BEVERAGE':\n            switch (data) {\n                case 'beverage_yes':\n                    return 'ASK_FOR_BEVERAGE_OPTIONS';\n                default:\n                    return 'SHOW_NO_BEVERAGE_ASK_FOR_PAYMENT_TYPE';\n            }\n        case 'ORDER_BEVERAGE':\n            switch (data.option) {\n                case 'beverages_more':\n                    return 'ASK_FOR_BEVERAGE_OPTIONS';\n                case 'beverages_cancel':\n                    return 'SHOW_NO_BEVERAGE_ASK_FOR_PAYMENT_TYPE';\n                default:\n                    return 'SHOW_BEVERAGE_ASK_FOR_PAYMENT_TYPE';\n            }\n        case 'ORDER_PAYMENT_TYPE':\n            switch (data) {\n                case 'payment_money':\n                    return 'SHOW_PAYMENT_TYPE_ASK_FOR_PAYMENT_CHANGE';\n                case 'payment_card':\n                    return 'SHOW_PAYMENT_TYPE_ASK_FOR_COMMENTS';\n            }\n            break;\n        case 'ORDER_PAYMENT_CHANGE':\n            return 'SHOW_PAYMENT_CHANGE_ASK_FOR_COMMENTS';\n        case 'ORDER_COMMENTS':\n            switch (data) {\n                case 'comments_yes':\n                    return 'ASK_FOR_TYPE_COMMENTS';\n                default:\n                    return 'SHOW_FULL_ORDER_CONFIRM_ORDER';\n            }\n        case 'ORDER_CONFIRMATION':\n            switch (data.type) {\n                case 'confirmation_yes':\n                    return 'CONFIRM_ORDER';\n                default:\n                    return 'ASK_FOR_CHANGE_ORDER';\n            }\n        case 'ORDER_CHANGE_SELECT_ITEM':\n            return 'UPDATE_ITEM';\n        case 'ORDER_PARTIAL_CONFIRMATION':\n            return 'CANCEL_PENDING_SHOW_PARTIAL_ORDER';\n        case 'ORDER_CATEGORY':\n            return 'SHOW_CATEGORY_ASK_FOR_SIZE';\n        case 'ORDER_ASK_CATEGORY':\n            return 'ASK_FOR_CATEGORY';\n        case 'ORDER_CATEGORY_CARDAPIO':\n            return 'SHOW_FLAVORS_CATEGORY';\n    }\n\n}\n\n\nexport const sendActions = async ({\n    action, pageID, userID, multiple, data, payload,\n    location, text, addrData, user }) => {\n    try {\n        let out;\n        switch (action) {\n            case 'BASIC_REPLY':\n                out = await getElement(basicReply, data);\n                break;\n            case 'CHECK_TYPED_TEXT':\n                out = await checkTypedText(pageID, userID, text);\n                break;\n            case 'ASK_FOR_CONTINUE':\n                out = await getElement(askForContinue);\n                break;\n            case 'CHECK_LAST_ACTION':\n                out = await checkLastAction(pageID, userID);\n                break;\n            case 'CONTINUE_ORDER_NO':\n                out = await getElement(optionsStopOrder);\n                break;\n            case 'PASS_THREAD_CONTROL':\n                out = await passThreadControl(pageID, userID, 'whatsapp');\n                break;\n            case 'SEND_WELCOME':\n                out = await getElement(sendWelcomeMessage, [pageID, user.first_name]);\n                break;\n            case 'SEND_MAIN_MENU':\n                out = await getElement(sendMainMenu);\n                break;\n            case 'SEND_CARDAPIO':\n                out = await getElement(askForCategoryCardapio, [pageID]);\n                break;\n            case 'SEND_HORARIO':\n                out = await getElement(sendHorario, [pageID, 'whatsapp']);\n                break;\n            case 'ASK_FOR_DELIVER':\n                out = await getElement(askForDeliver, [pageID, userID]);\n                break;\n            case 'SHOW_DELIVER_CHECK_ADDRESS':\n                out = await getElement(showDeliverCheckAddress,\n                    [pageID, userID, data, user, 'whatsapp']);\n                break;\n            case 'CHECK_ADDRESS':\n                out = await getElement(confirmAddressOrAskLocation,\n                    [pageID, userID, user, 'whatsapp']);\n                break;\n            case 'CONFIRM_ADDRESS':\n                out = await getElement(confirmAddress, [pageID, userID, addrData, user, 'whatsapp']);\n                break;\n            case 'ASK_FOR_ORDER':\n                out = await getElement(askForWantOrder);\n                break;\n            case 'LOCATION_CONFIRM_ADDRESS':\n                out = await getElement(confirmLocationAddress, [pageID, userID, location]);\n                break;\n            case 'SHOW_ADDRESS_ASK_FOR_CATEGORY':\n                out = await getElement(showAddressAskForCategory, [pageID, userID, data, 'whatsapp']);\n                break;\n            case 'ASK_FOR_LOCATION':\n                out = await getElement(askForLocation, [pageID, userID, user, 'whatsapp']);\n                break;\n            case 'ASK_TO_TYPE_ADDRESS':\n                out = await askToTypeAddress(pageID, userID);\n                break;\n            case 'SHOW_DELIVER_ASK_FOR_CATEGORY':\n                out = await getElement(showDeliverAskForCategory, [pageID, userID, data, user, 'whatsapp']);\n                break;\n            case 'ASK_FOR_QUANTITY':\n                out = await getElement(askForQuantity, [pageID, userID]);\n                break;\n            case 'ASK_FOR_QUANTITY_MORE':\n                out = await getElement(askForQuantityMore, [pageID, userID]);\n                break;\n            case 'SHOW_QUANTITY_ASK_FOR_SIZE':\n                out = await getElement(showQuantityAskForSize, [pageID, userID, data]);\n                break;\n            case 'ASK_FOR_SIZE':\n                out = await askForSizeCat(pageID, userID, data);\n                break;\n            case 'SHOW_SIZE_CHECK_SPLIT':\n                out = await showSizeCheckSplit(pageID, userID, data, 1);\n                break;\n            case 'SHOW_SPLIT_CHECK_FLAVOR':\n                out = await showSplitCheckFlavor(pageID, userID, data);\n                break;\n            case 'ASK_FOR_FLAVOR':\n                out = await askForFlavorOrConfirm(pageID, userID, multiple);\n                break;\n            case 'SHOW_FLAVOR':\n                out = await showFlavor(pageID, userID, data);\n                break;\n            case 'CHECK_ITEM':\n                out = await showOrderOrNextItem(pageID, userID);\n                break;\n            case 'SHOW_FLAVOR_CHECK_ITEM':\n                out = await showFlavorCheckItem(pageID, userID, data);\n                break;\n            case 'ASK_FOR_WANT_BEVERAGE':\n                out = await askForWantBeverage(pageID, userID);\n                break;\n            case 'SHOW_NO_BEVERAGE_ASK_FOR_PAYMENT_TYPE':\n                out = await showNoBeverageAskForPaymentType(pageID, userID, data);\n                break;\n            case 'ASK_FOR_BEVERAGE_OPTIONS':\n                out = await askForBeverages(pageID, userID, multiple);\n                break;\n            case 'SHOW_BEVERAGE_ASK_FOR_PAYMENT_TYPE':\n                out = await showBeverageAskForPaymentType(pageID, userID, data);\n                break;\n            case 'ASK_FOR_PAYMENT_TYPE':\n                out = await askForPaymentType(pageID, userID);\n                break;\n            case 'SHOW_PAYMENT_TYPE_ASK_FOR_COMMENTS':\n                out = await showPaymentTypeAskForComments(pageID, userID, data);\n                break;\n            case 'SHOW_PAYMENT_TYPE_ASK_FOR_PAYMENT_CHANGE':\n                out = await showPaymentTypeAskForPaymentChange(pageID, userID, data);\n                break;\n            case 'SHOW_PAYMENT_CHANGE_ASK_FOR_COMMENTS':\n                out = await showPaymentChangeAskForComments(pageID, userID, data);\n                break;\n            case 'ASK_FOR_COMMENTS':\n                out = await askForComments(pageID, userID);\n                break;\n            case 'ASK_FOR_TYPE_COMMENTS':\n                out = await getElement(askToTypeComments, [pageID, userID]);\n                break;\n            case 'SHOW_FULL_ORDER_CONFIRM_ORDER':\n                out = await showFullOrderConfirmOrder(pageID, userID, data);\n                break;\n            case 'ASK_FOR_CHANGE_ORDER':\n                out = await askForChangeOrder(pageID, userID, data);\n                break;\n            case 'ASK_FOR_SPECIFIC_ITEM':\n                out = await askForSpecificItem(pageID, userID);\n                break;\n            case 'CHANGE_ITEM':\n                out = await changeItem(pageID, userID, data);\n                break;\n            case 'CANCEL_ITEM':\n                out = await cancelItem(pageID, userID, data);\n                break;\n            case 'UPDATE_ITEM':\n                out = await updateItemAskOptions(pageID, userID, data);\n                break;\n            case 'CONFIRM_ORDER':\n                out = await confirmOrder(pageID, userID);\n                break;\n            case 'CANCEL_PENDING_ORDER':\n                out = await cancelPendingOrder(pageID, userID);\n                break;\n            case 'SHOW_CATEGORY_ASK_FOR_SIZE':\n                out = await getElement(showCategoryAskForSize, [pageID, userID, data]);\n                break;\n            case 'ASK_FOR_CATEGORY':\n                out = await getElement(askForCategory, [pageID, userID, data]);\n                break;\n            case 'CANCEL_PENDING_SHOW_PARTIAL_ORDER':\n                out = await getElement(cancelPendingShowPartialOrder, [pageID, userID]);\n                break;\n            case 'SHOW_FLAVORS_CATEGORY':\n                out = await getElement(sendCardapio, [pageID, data, 'whatsapp']);\n                break;\n            default:\n                break;\n        }\n        return out;\n    } catch (sendActionsErr) {\n        console.error('action:', action, 'data:', data, 'err:', sendActionsErr);\n        throw sendActionsErr;\n    }\n}\n\nconst getElement = async (fn, params) => {\n    const data = params ? await fn(...params) : await fn();\n    return data;\n}\n\n\n/**\n * Used in waboxapp\n * @param {*} to\n * @param {*} text\n */\nexport const waboxapp_sendMessage = async (to, text) => {\n    const myToken = '3207ecb3e9815b97c7efea3f45e7f8205c646bc16cd19';\n    const uid = '554499485760';\n    const custom_uid = encodeURIComponent(Math.random() * 100);\n    const qText = encodeURIComponent(text);\n    // eslint-disable-next-line max-len\n    const waboxApp = `https://www.waboxapp.com/api/send/chat?token=${myToken}&uid=${uid}&to=${to}&custom_uid=${custom_uid}&text=${qText}`;\n\n    console.info('**** Ready to send: ****');\n    console.info(waboxApp);\n\n    return await axios.get(waboxApp);\n}\n"],"file":"whatController.js"}