{"version":3,"sources":["../../../src/api/whatsapp/whatSimpleController.js"],"names":["w_controller","args","console","info","myId","message","userId","match","location","contactName","profileImg","names","split","first_name","shift","last_name","length","join","_profile_pic","decodeURIComponent","replace","user","profile_pic","store","name","pageId","pendingOrder","order","log","id","waitingFor","addrData","manual_addres","formattedAddress","sendActions","action","pageID","userID","result","oldComments","comments","updatedComents","text","page","lastOrder","tempoEntregar","delivery_time","tempoRetirar","pickup_time","replyText","firstResponseText","payload","data","orderExample","hasOwnProperty","objectWithEvent","buttons","event","multiple","mapEventsActions","subText","type","option","out","error","waboxapp_sendMessage","to","myToken","uid","custom_uid","encodeURIComponent","Math","random","qText","waboxApp","axios","get"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n    basicReply,\n    basicOption,\n    basicComments,\n} from '../bot/botController';\nimport { getStoreByPhone, getStoreData } from '../controllers/storesController';\nimport { getOrderPending, getLastUserOrder } from '../controllers/ordersController';\nimport { getOnePageData } from '../controllers/pagesController';\n\n/**\n * Receives the user and message from whatsapp and\n * returns a message from the system.\n * @param {*} args\n */\nexport const w_controller = async (args) => {\n    console.info('###### w_controller SIMPLE ######');\n    console.info(args);\n    const { myId, message, userId, match, location, contactName, profileImg } = args;\n\n    const names = contactName.split(' ');\n    const first_name = names.shift();\n    const last_name = names.length >= 1 ? names.join(' ') : null;\n    const _profile_pic = profileImg && decodeURIComponent(profileImg.replace('https://web.whatsapp.com/pp?e=', ''));\n    const user = {\n        first_name: first_name,\n        last_name: last_name,\n        profile_pic: _profile_pic,\n    }\n\n    const store = await getStoreByPhone(myId);\n    if (store) {\n        console.info(`store name: ${store.name}, match:${match}`);\n        const { pageId } = store;\n\n        if (!match) {\n            const pendingOrder = await getOrderPending({ pageId: pageId, userId: userId });\n            if (pendingOrder && pendingOrder.order) {\n                console.log(`pendingorder id:${pendingOrder.order.id} \n                waitingFor:${pendingOrder.order.waitingFor}`);\n\n                let result;\n\n                if (pendingOrder.order.waitingFor === 'typed_address') {\n                    const addrData = {\n                        manual_addres: true,\n                        formattedAddress: message,\n                    }\n                    result = await sendActions({\n                        action: 'CONFIRM_ADDRESS',\n                        pageID: pageId, userID: userId, addrData, user,\n                    });\n                } else if (pendingOrder.order.waitingFor === 'typed_comments') {\n                    const oldComments = pendingOrder.order.comments;\n\n                    // concat old comments and the new comments\n                    let updatedComents = oldComments ? oldComments + '\\n' + message : message;\n\n                    result = await sendActions({\n                        action: 'BASIC_UPDATE_COMMENTS',\n                        pageID: pageId, userID: userId, text: updatedComents,\n                    });\n                }\n                return result;\n            } else {\n                const page = await getOnePageData(pageId);\n                const store = await getStoreData(pageId);\n                // Get the last order from this customer.\n                const lastOrder = await getLastUserOrder({ pageId, userId });\n                console.log('>> Found lastOrder:', lastOrder.id);\n\n                const tempoEntregar = store.delivery_time ? `(+ ou - ${store.delivery_time} min.)` : '';\n                const tempoRetirar = store.pickup_time ? `(+ ou - ${store.pickup_time} min.)` : '';\n\n                let replyText = page.firstResponseText.replace('$NAME', contactName);\n                replyText = replyText + '\\n\\n';\n\n                if (lastOrder && lastOrder.comments) {\n                    replyText = replyText + 'Seu último pedido:\\n';\n                    replyText = replyText + lastOrder.comments + '\\n';\n                    replyText = replyText + 'Envie *REPETIR* para fazer o mesmo pedido OU envie os dados do pedido:\\n';\n\n                    return await sendActions({\n                        action: 'BASIC_OPTION',\n                        pageID: pageId,\n                        userID: userId,\n                        text: replyText,\n                        payload: lastOrder.comments,\n                        data: 'REPETIR',\n                        user: user,\n                    });\n                } else {\n                    replyText = replyText + page.orderExample + '\\n';\n                    replyText = replyText.replace('$TEMPOENTREGAR', tempoEntregar);\n                    replyText = replyText.replace('$TEMPORETIRAR', tempoRetirar);\n\n                    return await sendActions({\n                        action: 'BASIC_REPLY',\n                        pageID: pageId,\n                        userID: userId,\n                        text: replyText,\n                        user: user,\n                    });\n                }\n\n            }\n        } else {\n            let objectWithEvent;\n            if (match.hasOwnProperty('event'))\n                objectWithEvent = match;\n            else if (match.hasOwnProperty('buttons')) {\n                if (match.buttons.hasOwnProperty('event'))\n                    objectWithEvent = match.buttons;\n            }\n\n            if (objectWithEvent) {\n                const { event, data } = objectWithEvent;\n                const multiple = data ? (data.multiple ? data.multiple : 1) : 1;\n                const action = mapEventsActions(event, data);\n                const result = await sendActions({\n                    action, pageID: pageId,\n                    userID: userId, data, location, multiple, user,\n                });\n                return result;\n            } else {\n                if (match.hasOwnProperty('text') && match.text === 'REPETIR') {\n                    return await sendActions({\n                        action: 'BASIC_REPLY',\n                        pageID: pageId,\n                        userID: userId,\n                        text: 'Ok, vamos repetir o pedido.',\n                        user: user,\n                        data: match.subText,\n                    });\n                }\n            }\n        }\n    } else {\n        console.info(`### w_controller ### did not find store for myId: ${myId}`);\n    }\n}\n\nconst mapEventsActions = (event, data) => {\n    switch (event) {\n        case 'MAIN_MENU':\n            return 'SEND_MAIN_MENU'\n        case 'ORDER_CONTINUE_ORDER':\n            switch (data) {\n                case 'continueorder_yes':\n                    return 'CHECK_LAST_ACTION';\n                case 'continueorder_no':\n                    return 'CONTINUE_ORDER_NO';\n            }\n            break;\n        case 'STOP_ORDER_OPTIONS':\n            switch (data) {\n                case 'stoporder_init':\n                    return 'CANCEL_PENDING_ORDER';\n                case 'stoporder_human':\n                    return 'PASS_THREAD_CONTROL';\n            }\n            break;\n        case 'MAIN-MENU':\n            switch (data) {\n                case 'CARDAPIO_PAYLOAD':\n                    return 'SEND_CARDAPIO';\n                case 'PEDIDO_PAYLOAD':\n                    return 'ASK_FOR_DELIVER';\n                case 'HORARIO_PAYLOAD':\n                    return 'SEND_HORARIO';\n                case 'stoporder_human':\n                    return 'PASS_THREAD_CONTROL';\n            }\n            break;\n        case 'ORDER_WANT_ORDER':\n            switch (data) {\n                case 'wantorder_yes':\n                    return 'ASK_FOR_DELIVER';\n                case 'wantorder_no':\n                    return 'SEND_MAIN_MENU';\n            }\n            break;\n        case 'ORDER_DELIVER':\n            switch (data.type) {\n                case 'delivery':\n                    return 'SHOW_DELIVER_CHECK_ADDRESS'\n                case 'pickup':\n                    return 'SHOW_DELIVER_ASK_FOR_CATEGORY';\n            }\n            break;\n        case 'CORRECT_SAVED_ADDRESS':\n            return 'SHOW_ADDRESS_ASK_FOR_CATEGORY';\n        case 'WRONG_SAVED_ADDRESS':\n            return 'ASK_FOR_LOCATION';\n        case 'LOCATION':\n            switch (data) {\n                case 'location_location':\n                    return 'LOCATION_CONFIRM_ADDRESS';\n            }\n            break;\n        case 'LOCATION_ADDRESS':\n            switch (data) {\n                case 'incorrect_address':\n                    return 'ASK_TO_TYPE_ADDRESS';\n                default:\n                    return 'SHOW_ADDRESS_ASK_FOR_CATEGORY';\n            }\n        case 'ORDER_QTY':\n            switch (data) {\n                case 'qty_more':\n                    return 'ASK_FOR_QUANTITY_MORE';\n                case 'qty_less':\n                    return 'ASK_FOR_QUANTITY';\n                default:\n                    return 'SHOW_QUANTITY_ASK_FOR_SIZE';\n            }\n        case 'ORDER_SIZE':\n            return 'SHOW_SIZE_CHECK_SPLIT';\n        case 'ORDER_SPLIT':\n            return 'SHOW_SPLIT_CHECK_FLAVOR';\n        case 'ORDER_FLAVOR':\n            switch (data.option) {\n                case 'flavors_more':\n                    return 'ASK_FOR_FLAVOR';\n                default:\n                    return 'SHOW_FLAVOR_CHECK_ITEM';\n            }\n        case 'ORDER_PIZZA_CONFIRMATION':\n            switch (data.type) {\n                case 'confirmation_yes':\n                    return 'ASK_FOR_PAYMENT_TYPE';\n                default:\n                    return 'ASK_FOR_CHANGE_ORDER';\n            }\n        case 'ORDER_WANT_CHANGE':\n            return 'ASK_FOR_SPECIFIC_ITEM';\n        case 'ORDER_CHANGE':\n            switch (data) {\n                case 'change_quantity':\n                    return 'ASK_FOR_QUANTITY';\n                case 'change_size':\n                    return 'ASK_FOR_SIZE';\n                case 'change_flavor':\n                    return 'ASK_FOR_FLAVOR';\n                case 'change_address':\n                    return 'ASK_FOR_LOCATION';\n                case 'change_item':\n                    return 'CHANGE_ITEM';\n                case 'cancel_item':\n                    return 'CANCEL_ITEM';\n            }\n            break;\n        case 'ORDER_CHANGE_ITEM':\n            return 'CHANGE_ITEM';\n        case 'ORDER_CANCEL_ITEM':\n            return 'CANCEL_ITEM';\n        case 'ORDER_CONFIRM_BEVERAGE':\n            switch (data) {\n                case 'beverage_yes':\n                    return 'ASK_FOR_BEVERAGE_OPTIONS';\n                default:\n                    return 'SHOW_NO_BEVERAGE_ASK_FOR_PAYMENT_TYPE';\n            }\n        case 'ORDER_BEVERAGE':\n            switch (data.option) {\n                case 'beverages_more':\n                    return 'ASK_FOR_BEVERAGE_OPTIONS';\n                case 'beverages_cancel':\n                    return 'SHOW_NO_BEVERAGE_ASK_FOR_PAYMENT_TYPE';\n                default:\n                    return 'SHOW_BEVERAGE_ASK_FOR_PAYMENT_TYPE';\n            }\n        case 'ORDER_PAYMENT_TYPE':\n            // switch (data) {\n            //     case 'payment_money':\n            //         return 'SHOW_PAYMENT_TYPE_ASK_FOR_PAYMENT_CHANGE';\n            //     case 'payment_card':\n            return 'SHOW_PAYMENT_TYPE_ASK_FOR_COMMENTS';\n        // }\n        // break;\n        case 'ORDER_PAYMENT_CHANGE':\n            return 'SHOW_PAYMENT_CHANGE_ASK_FOR_COMMENTS';\n        case 'ORDER_COMMENTS':\n            switch (data) {\n                case 'comments_yes':\n                    return 'ASK_FOR_TYPE_COMMENTS';\n                default:\n                    return 'SHOW_FULL_ORDER_CONFIRM_ORDER';\n            }\n        case 'ORDER_CONFIRMATION':\n            switch (data.type) {\n                case 'confirmation_yes':\n                    return 'CONFIRM_ORDER';\n                default:\n                    return 'ASK_FOR_CHANGE_ORDER';\n            }\n        case 'ORDER_CHANGE_SELECT_ITEM':\n            return 'UPDATE_ITEM';\n        case 'ORDER_PARTIAL_CONFIRMATION':\n            return 'CANCEL_PENDING_SHOW_PARTIAL_ORDER';\n        case 'ORDER_CATEGORY':\n            return 'SHOW_CATEGORY_ASK_FOR_SIZE';\n        case 'ORDER_ASK_CATEGORY':\n            return 'ASK_FOR_CATEGORY';\n        case 'ORDER_CATEGORY_CARDAPIO':\n            return 'SHOW_FLAVORS_CATEGORY';\n    }\n\n}\n\nexport const sendActions = async ({\n    action, pageID, userID, multiple, data, payload,\n    location, text, addrData, user }) => {\n    try {\n        let out;\n        switch (action) {\n            case 'BASIC_REPLY':\n                out = await basicReply(pageID, userID, text, user, data);\n                break;\n            case 'BASIC_OPTION':\n                out = await basicOption(pageID, userID, text, data, payload, user);\n                break;\n            case 'BASIC_UPDATE_COMMENTS':\n                out = await basicComments(pageID, userID, text, user);\n                break;\n            default:\n                break;\n        }\n        return out;\n    } catch (sendActionsErr) {\n        console.error('action:', action, 'data:', data, 'err:', sendActionsErr);\n        throw sendActionsErr;\n    }\n}\n\n/**\n * Used in waboxapp\n * @param {*} to\n * @param {*} text\n */\nexport const waboxapp_sendMessage = async (to, text) => {\n    const myToken = '3207ecb3e9815b97c7efea3f45e7f8205c646bc16cd19';\n    const uid = '554499485760';\n    const custom_uid = encodeURIComponent(Math.random() * 100);\n    const qText = encodeURIComponent(text);\n    // eslint-disable-next-line max-len\n    const waboxApp = `https://www.waboxapp.com/api/send/chat?token=${myToken}&uid=${uid}&to=${to}&custom_uid=${custom_uid}&text=${qText}`;\n\n    console.info('**** Ready to send: ****');\n    console.info(waboxApp);\n\n    return await axios.get(waboxApp);\n}\n"],"file":"whatSimpleController.js"}