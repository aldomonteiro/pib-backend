{"version":3,"sources":["../src/server-bot.js"],"names":["dotenv","config","RETRY_TIMEOUT","options","useNewUrlParser","autoReconnect","keepAlive","reconnectInterval","reconnectTries","isConnectedBefore","connect","mongoose","process","env","MONGODB_URL","catch","err","console","error","set","Promise","connection","on","setTimeout","info","close","warn","exit","global","pagesKeyID","Object","app","bot","Bot","FB_VERIFY_TOKEN","logger","token","req","res","tz","format","use","bodyParser","urlencoded","extended","json","next","doNext","body","object","entry","length","pageID","id","timerIdentifier","Math","random","time","accessToken","name","timeEnd","expressAppUseGetTokenError","log","router","listen","FB_WEBHOOK_PORT","message","sender","action","recipient","startTyping","out2","wait","stopTyping","send","outError","event","data","fetchUser","user","answer","out","mainMenuError","location","text","onMessageError","quick_reply","payload","quickReplyError","split","Number","option","multiple","summary","multple","orderBeverageErr","orderConfirmationError","orderConfirmationErr"],"mappings":"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","sourcesContent":["import \"@babel/polyfill\";\nimport express from \"express\";\nimport logger from \"morgan\";\nimport bodyParser from \"body-parser\";\nimport dotenv from \"dotenv\";\nimport moment from 'moment-timezone';\nimport mongoose from 'mongoose';\nimport { Bot } from 'facebook-messenger-bot';\nimport { getOnePageToken, getAllPages, getOnePageData } from './api/controllers/pagesController';\nimport { getPricingSizing } from './api/controllers/pricingsController';\nimport getCardapio from './api/bot/show_cardapio';\nimport { choices_sizes } from './api/util/util';\nimport {\n  sendWelcomeMessage,\n  sendErrorMsg,\n  sendMainMenu,\n  sendCardapio,\n  askForPhone,\n  showPhone,\n  askToTypePhone,\n  askForQuantity,\n  askForQuantityMore,\n  showQuantity,\n  askForSize,\n  showSize,\n  askForFlavor,\n  showFlavor,\n  showOrderOrNextItem,\n  askForLocation,\n  confirmAddressOrAskLocation,\n  confirmLocationAddress,\n  showAddress,\n  confirmOrder,\n  askToTypeAddress,\n  confirmTypedText,\n  sendHorario,\n  basicReply,\n  askForChangeOrder,\n  askForSplitFlavorOrConfirm,\n  askForFlavorOrConfirm,\n  askForSpecificItem,\n  updateItemAskOptions,\n  showOrderOrAskForPhone,\n  showSplit\n} from './api/bot/botController';\n\nimport { sendActions } from './api/bot/actionsController';\n\ndotenv.config();\n\n// mongoose.connect(\n//   process.env.MONGODB_URL,\n//   { useNewUrlParser: true }\n// );\n\nconst RETRY_TIMEOUT = 3000\n\nconst options = {\n  useNewUrlParser: true,\n  autoReconnect: true,\n  keepAlive: 30000,\n  reconnectInterval: RETRY_TIMEOUT,\n  reconnectTries: 10000\n}\n\nlet isConnectedBefore = false\n\nconst connect = () => {\n  return mongoose.connect(process.env.MONGODB_URL, options)\n    .catch(err => console.error('Mongoose connect(...) failed with err: ', err))\n}\n\nconnect();\n\nmongoose.set('useCreateIndex', true);\nmongoose.Promise = Promise;\n\nmongoose.connection.on('error', () => {\n  console.error('Could not connect to MongoDB')\n});\n\nmongoose.connection.on('disconnected', () => {\n  console.error('Lost MongoDB connection...')\n  if (!isConnectedBefore) {\n    setTimeout(() => connect(), RETRY_TIMEOUT)\n  }\n});\n\nmongoose.connection.on('connected', () => {\n  isConnectedBefore = true\n  console.info('Connection established to MongoDB')\n});\n\nmongoose.connection.on('reconnected', () => {\n  console.info('Reconnected to MongoDB')\n});\n\n// Close the Mongoose connection, when receiving SIGINT\nprocess.on('SIGINT', () => {\n  mongoose.connection.close(function () {\n    console.warn('Force to close the MongoDB connection after SIGINT')\n    process.exit(0)\n  })\n});\n\nglobal.pagesKeyID = new Object();\n\nconst app = express();\n\nconst bot = new Bot(process.env.FB_VERIFY_TOKEN, true);\n\n// getAllPages().then(async (pageArray) => {\n//   for (let i = 0; i < pageArray.length; i++) {\n//     const page = pageArray[i];\n//     const fields = ['greeting', 'get_started', 'persistent_menu'];\n//     bot._token = page.accessToken;\n//     const response = await bot.getFields(fields);\n//     global.pagesKeyID[page.pageID] = page.accessToken;\n\n//     console.info(`GET fields for ${page.pageID}-${page.name}:`)\n//     console.info(response);\n//   }\n// });\n\n\n// Beggining - That is all to log in the local timezone\n// https://medium.com/front-end-hacking/node-js-logs-in-local-timezone-on-morgan-and-winston-9e98b2b9ca45\n// [Node.js] Logs in Local Timezone on Morgan\nlogger.token('date', (req, res, tz) => {\n  return moment().tz(tz).format();\n})\nlogger.format('myformat', '[:date[America/Sao_Paulo]] \":method :url\" :status :res[content-length] - :response-time ms');\n\napp.use(logger(\"myformat\"));\n// End - That is all to log in the right timezone\n\napp.set('json spaces', 2);\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use('/buckets/facebook', async (req, res, next) => {\n  let doNext = true;\n  if (req.body && req.body.object === 'page') {\n    if (req.body.entry.length > 0) {\n      try {\n        // Iterates over each entry - there may be multiple if batched\n        // for (let i = 0; i < req.body.entry.length; i++) {\n        let pageID = req.body.entry[0].id;\n        if (global.pagesKeyID[pageID] && global.pagesKeyID[pageID] !== '') {\n          req.token = global.pagesKeyID[pageID];\n        }\n        else {\n          let timerIdentifier = \"getOnePageToken\" + Math.random();\n          console.time(timerIdentifier);\n          const { accessToken, name } = await getOnePageToken(pageID);\n          req.token = accessToken;\n          console.timeEnd(timerIdentifier);\n          global.pagesKeyID[pageID] = accessToken;\n        }\n\n        // const _time = req.body.entry[0].time;\n        // const messageTime = new Date(_time).toLocaleTimeString('pt-BR');\n        // console.info(`${messageTime} From ${pageID} memory tokens:${Object.keys(global.pagesKeyID).length}`);\n\n      } catch (expressAppUseGetTokenError) {\n        console.error({ expressAppUseGetTokenError });\n      }\n    }\n  }\n  else {\n    console.log('Something came, not a page...');\n  }\n  if (doNext)\n    next();\n});\n\napp.use('/buckets/facebook', bot.router());\napp.listen(process.env.FB_WEBHOOK_PORT, () => console.log(`Bot server listening on port ${process.env.FB_WEBHOOK_PORT}`));\n\n/**\n * Event triggered when the button \"GET_STARTED\" is pressed.\n */\nbot.on('GET_STARTED', async (message) => {\n  const { sender } = message;\n  try {\n    // Send Welcome Message\n    // await bot.startTyping(sender.id);\n    // const out1 = await sendWelcomeMessage(sender, message.recipient.id)\n    // await Bot.wait(1000);\n    // await bot.stopTyping(sender.id);\n    // await bot.send(sender.id, out1);\n\n    await sendActions({ action: 'SEND_WELCOME', bot, sender, pageID: message.recipient.id });\n\n    // Send Main Menu\n    await bot.startTyping(sender.id);\n    const out2 = await sendMainMenu();\n    await Bot.wait(1000);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, out2);\n\n  } catch (error) {\n    console.error('GET_STARTED error:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n// all postbacks are emitted via 'postback'\nbot.on('postback', async (event, message, data) => {\n  console.info(`postback from ${data}, you need to take care of this thing!`);\n  console.info(message);\n});\n\n// all postbacks are emitted via 'postback'\nbot.on('MAIN-MENU', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n    if (data === 'CARDAPIO_PAYLOAD') {\n      // const out = await sendCardapio(message.recipient.id);\n      // await bot.stopTyping(sender.id);\n      // await bot.send(sender.id, out);\n      await sendActions({ action: 'SEND_CARDAPIO', bot, sender, pageID: message.recipient.id });\n\n    } else if (data === 'PEDIDO_PAYLOAD') {\n      // Show saved address or ask for location\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const user = await bot.fetchUser(sender.id);\n      const answer = await confirmAddressOrAskLocation(recipient.id, sender.id, user);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n    } else if (data === 'HORARIO_PAYLOAD') {\n      await bot.startTyping(sender.id);\n      const out = await sendHorario(message.recipient.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n  } catch (mainMenuError) {\n    console.error({ mainMenuError });\n    const outError = await sendErrorMsg(mainMenuError.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n\n/**\n * Question No.02 (location)\n * clicked \"Fazer Pedido\"\n * gonna ask for QUANTITY\n */\nbot.on('message', async (message) => {\n  const { sender, recipient, location } = message;\n\n  try {\n    if (location) {\n      console.info({ location });\n\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const user = await bot.fetchUser(sender.id);\n      const answer = await confirmLocationAddress(recipient.id, sender.id, location, user);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n    }\n    else if (message.text === 'hello' || message.text === 'hi') {\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const answer = await basicReply();\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n    }\n    else {\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const answer = await confirmTypedText(recipient.id, sender.id, message);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n    }\n  } catch (onMessageError) {\n    console.error({ onMessageError });\n    const outError = await sendErrorMsg(onMessageError.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n/**\n * clicked \"Fazer Pedido\"\n * gonna ask for QUANTITY\n */\nbot.on('quick-reply', async (message, quick_reply) => {\n\n  const { sender, recipient } = message;\n  const { payload } = quick_reply;\n  try {\n    if (payload) {\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const answer = await showPhone(recipient.id, sender.id, payload);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n\n      // next question\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const out = await askForQuantity(recipient.id, sender.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n  } catch (quickReplyError) {\n    console.error({ quickReplyError });\n    const outError = await sendErrorMsg(quickReplyError.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n/**\n * Answer No.01\n * answered CORRECT_SAVED_ADDRESS\n * gonna ask for phone\n */\nbot.on('CORRECT_SAVED_ADDRESS', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n    // show what the user chose\n    await bot.startTyping(sender.id);\n    await Bot.wait(800);\n    const answer = await showAddress(recipient.id, sender.id, data);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, answer);\n\n    // next question\n    await bot.startTyping(sender.id);\n    await Bot.wait(800);\n    const out = await askForPhone(recipient.id, sender.id);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, out);\n  } catch (error) {\n    console.error('CORRECT_SAVED_ADDRESS:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n\n});\n\n/**\n * answered CORRECT_SAVED_ADDRESS\n * gonna ask for phone\n */\nbot.on('LOCATION_ADDRESS', async (message, data) => {\n  const { sender, recipient } = message;\n\n  try {\n    if (data === 'incorrect_address') {\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const answer = await askToTypeAddress(recipient.id, sender.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n    }\n    else {\n      // show what the user chose\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const answer = await showAddress(recipient.id, sender.id, data);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n\n      // next question\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const out = await showOrderOrAskForPhone(recipient.id, sender.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n  } catch (error) {\n    console.error('LOCATION_ADDRESS:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n\n/**\n * answered CORRECT_SAVED_ADDRESS\n * gonna ask for phone\n */\nbot.on('WRONG_SAVED_ADDRESS', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n    const out = await askForLocation();\n    await Bot.wait(1000);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, out);\n  } catch (error) {\n    console.error('WRONG_SAVED_ADDRESS:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\nbot.on('PHONE_CONFIRMED', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n    if (data === 'change_phone') {\n      // next question\n      const out = await askToTypePhone(recipient.id, sender.id);\n      await Bot.wait(1000);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n    else {\n      // show what the user typed\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const answer = await showPhone(recipient.id, sender.id, data);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n\n      // next question\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const out = await askForQuantity(recipient.id, sender.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n  } catch (error) {\n    console.error('PHONE_CONFIRMED:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n\n});\n\n\n/**\n * answered ORDER_QTY\n * gonna ask for SIZE\n */\nbot.on('ORDER_QTY', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n    if (data && data === 'qty_more') {\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const out = await askForQuantityMore();\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n    else {\n      // show what the user chose\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const answer = await showQuantity(recipient.id, sender.id, data);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n      // next question\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const out = await askForSize(recipient.id, sender.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n  } catch (error) {\n    console.error('ORDER_QTY:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n/**\n * answered ORDER_SIZE\n * gonna ask for FLAVOR\n */\nbot.on('ORDER_SIZE', async (message, data) => {\n  const { sender, recipient } = message;\n\n  try {\n    // show what the user chose\n    await bot.startTyping(sender.id);\n    await Bot.wait(900);\n    const answer = await showSize(recipient.id, sender.id, data);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, answer);\n\n    // check if the size is splitable.\n    await bot.startTyping(sender.id);\n    await Bot.wait(900);\n    const out = await askForSplitFlavorOrConfirm(message.recipient.id, sender.id, 1);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, out);\n\n  } catch (error) {\n    console.error('ORDER_SIZE:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n\nbot.on('ORDER_SPLIT', async (message, data) => {\n  const { sender, recipient } = message;\n\n  await bot.startTyping(sender.id);\n  await Bot.wait(900);\n  const answer = await showSplit(recipient.id, sender.id, data);\n  await bot.stopTyping(sender.id);\n  await bot.send(sender.id, answer);\n\n  const split = Number(data);\n\n  // next question\n  await bot.startTyping(sender.id);\n  await Bot.wait(500);\n  const out = await askForFlavorOrConfirm(message.recipient.id, sender.id, 1, split);\n  await bot.stopTyping(sender.id);\n  await bot.send(sender.id, out);\n});\n\n/**\n * answered ORDER_FLAVOR\n * gonna ask for confirmation\n */\nbot.on('ORDER_FLAVOR', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n    if (data && data.option && data.option === 'flavors_more') {\n      // next question\n      await bot.startTyping(sender.id);\n      await Bot.wait(500);\n      const out = await askForFlavor(message.recipient.id, sender.id, data.multiple);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n    else {\n      // show what the user chose\n      await bot.startTyping(sender.id);\n      await Bot.wait(900);\n      const answer = await showFlavor(recipient.id, sender.id, data);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n\n      // show summary\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const summary = await showOrderOrNextItem(recipient.id, sender.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, summary);\n    }\n  } catch (error) {\n    console.error('ORDER_FLAVOR:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n/**\n * answered ORDER_SIZE\n * gonna ask for FLAVOR\n */\nbot.on('ORDER_CONFIRM_BEVERAGE', async (message, data) => {\n  const { sender, recipient } = message;\n\n  try {\n    if (data === 'beverage_yes')\n      await sendActions({ action: 'ASK_FOR_BEVERAGE_OPTIONS', bot, sender, pageID: recipient.id, multple: 1 })\n    else {\n      await sendActions({ action: 'SHOW_FULL_ORDER', bot, sender, pageID: recipient.id })\n    }\n\n  } catch (orderBeverageErr) {\n    console.error({ orderBeverageErr });\n    const outError = await sendErrorMsg(orderBeverageErr.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n/**\n * answered ORDER_BEVERAGE\n * gonna ask for confirmation\n */\nbot.on('ORDER_BEVERAGE', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n    if (data && data.option && data.option === 'beverages_more') {\n      // more beverages\n      await sendActions({ action: 'ASK_FOR_BEVERAGE_OPTIONS', bot, sender, pageID: recipient.id, multiple: data.multiple })\n    }\n    else {\n      await sendActions({ action: 'SHOW_BEVERAGE', bot, sender, pageID: recipient.id, data: data })\n\n      await sendActions({ action: 'SHOW_FULL_ORDER', bot, sender, pageID: recipient.id })\n    }\n  } catch (orderBeverageErr) {\n    console.error({ orderBeverageErr });\n    const outError = await sendErrorMsg(orderBeverageErr.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n/**\n * answered ORDER_CONFIRMATION\n */\nbot.on('ORDER_PIZZA_CONFIRMATION', async (message, data) => {\n  const { sender, recipient } = message;\n\n  try {\n    if (data === 'confirmation_yes') {\n      await sendActions({ action: 'ASK_FOR_WANT_BEVERAGE', bot, sender, pageID: recipient.id });\n    }\n    else if (data === 'confirmation_no') {\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const out = await askForChangeOrder(recipient.id, sender.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n  } catch (orderConfirmationError) {\n    console.error({ orderConfirmationError });\n    const outError = await sendErrorMsg(orderConfirmationError.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n\n});\n\n\n/**\n * answered ORDER_CONFIRMATION\n */\nbot.on('ORDER_CONFIRMATION', async (message, data) => {\n  const { sender, recipient } = message;\n\n  try {\n    if (data === 'confirmation_yes') {\n      await sendActions({ action: 'CONFIRM_ORDER', bot, sender, pageID: recipient.id });\n    }\n    else if (data === 'confirmation_no') {\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const out = await askForChangeOrder(recipient.id, sender.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n  } catch (orderConfirmationErr) {\n    console.error({ orderConfirmationErr });\n    const outError = await sendErrorMsg(orderConfirmationErr.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n\n});\n\n/**\n * answered wants change something in the order\n */\nbot.on('ORDER_WANT_CHANGE', async (message, data) => {\n  const { sender, recipient } = message;\n\n  try {\n    await bot.startTyping(sender.id);\n    await Bot.wait(1000);\n    const out = await askForSpecificItem(recipient.id, sender.id);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, out);\n  } catch (error) {\n    console.error('ORDER_WANT_CHANGE:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n\n});\n\nbot.on('ORDER_CHANGE', async (message, data) => {\n  const { sender, recipient } = message;\n\n  try {\n    await bot.startTyping(sender.id);\n    await Bot.wait(500);\n    let out;\n    if (data === 'change_quantity') {\n      out = await askForQuantity(recipient.id, sender.id);\n    }\n    else if (data === 'change_size') {\n      out = await askForSize(recipient.id, sender.id);\n    }\n    else if (data === 'change_flavor') {\n      out = await askForFlavor(message.recipient.id, sender.id, 1);\n    }\n    else if (data === 'change_address') {\n      out = await askForLocation();\n    }\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, out);\n  } catch (error) {\n    console.error('ORDER_CHANGE:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\nbot.on('ORDER_CHANGE_SELECT_ITEM', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n    await bot.startTyping(sender.id);\n    await Bot.wait(1000);\n    const out = await updateItemAskOptions(recipient.id, sender.id, data);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, out);\n  } catch (error) {\n    console.error('ORDER_CHANGE_SELECT_ITEM:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n\n"],"file":"server-bot.js"}