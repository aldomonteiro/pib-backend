{"version":3,"sources":["../src/server-bot.js"],"names":["ORDER_STATE_QUANTITY","ORDER_STATE_SIZE","ORDER_STATE_FLAVOR","dotenv","config","mongoose","connect","process","env","MONGODB_URL","useNewUrlParser","set","Promise","global","pagesKeyID","Array","app","bot","Bot","FB_VERIFY_TOKEN","then","pageArray","i","length","page","fields","_token","accessToken","getFields","response","pageID","console","info","name","logger","token","req","res","tz","format","use","bodyParser","urlencoded","extended","json","next","body","object","entry","id","_accessToken","error","expressAppUseGetTokenError","log","router","listen","FB_WEBHOOK_PORT","on","message","sender","startTyping","recipient","out1","wait","stopTyping","send","out2","outError","event","data","out","fetchUser","user","answer","location","text","quick_reply","payload","option","multiple","summary"],"mappings":"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","sourcesContent":["import \"@babel/polyfill\";\nimport express from \"express\";\nimport logger from \"morgan\";\nimport bodyParser from \"body-parser\";\nimport dotenv from \"dotenv\";\nimport moment from 'moment-timezone';\nimport mongoose from 'mongoose';\nimport { Bot, Elements, Buttons, QuickReplies } from 'facebook-messenger-bot';\nimport { getOnePageToken, getAllPages, getOnePageData } from './api/controllers/pagesController';\nimport { getPricingSizing } from './api/controllers/pricingsController';\nimport getCardapio from './api/bot/show_cardapio';\nimport { choices_sizes } from './api/util/util';\nimport {\n  sendWelcomeMessage,\n  sendErrorMsg,\n  sendMainMenu,\n  sendCardapio,\n  askForPhone,\n  showPhone,\n  askForQuantity,\n  askForQuantityMore,\n  showQuantity,\n  askForSize,\n  showSize,\n  askForFlavor,\n  showFlavor,\n  showOrderOrNextItem,\n  askForLocation,\n  confirmAddressOrAskLocation,\n  confirmLocationAddress,\n  showAddress,\n  confirmOrder,\n  askToTypeAddress,\n  confirmTypedText,\n  sendHorario,\n  basicReply,\n  askForChangeOrder,\n  askForOptionsToChange,\n  askForFlavorOrConfirm,\n  askForSpecificItem,\n  updateItemAskOptions,\n  showOrderOrAskForPhone\n} from './api/bot/botController';\n\nconst\n  ORDER_STATE_QUANTITY = 1,\n  ORDER_STATE_SIZE = 2,\n  ORDER_STATE_FLAVOR = 3;\n\ndotenv.config();\n\nmongoose.connect(\n  process.env.MONGODB_URL,\n  { useNewUrlParser: true }\n);\nmongoose.set('useCreateIndex', true);\nmongoose.Promise = Promise;\n\nglobal.pagesKeyID = new Array();\n\nconst app = express();\n\nconst bot = new Bot(process.env.FB_VERIFY_TOKEN, true);\n\ngetAllPages().then(async (pageArray) => {\n  for (let i = 0; i < pageArray.length; i++) {\n    const page = pageArray[i];\n    const fields = ['greeting', 'get_started', 'persistent_menu'];\n    bot._token = page.accessToken;\n    const response = await bot.getFields(fields);\n    global.pagesKeyID[page.pageID] = page.accessToken;\n\n    console.info(`GET fields for ${page.pageID}-${page.name}:`)\n    console.info(response);\n  }\n});\n\n\n// Beggining - That is all to log in the local timezone\n// https://medium.com/front-end-hacking/node-js-logs-in-local-timezone-on-morgan-and-winston-9e98b2b9ca45\n// [Node.js] Logs in Local Timezone on Morgan\nlogger.token('date', (req, res, tz) => {\n  return moment().tz(tz).format();\n})\nlogger.format('myformat', '[:date[America/Sao_Paulo]] \":method :url\" :status :res[content-length] - :response-time ms');\n\napp.use(logger(\"myformat\"));\n// End - That is all to log in the right timezone\n\napp.set('json spaces', 2);\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use('/buckets/facebook', async (req, res, next) => {\n  if (req.body && req.body.object === 'page') {\n    if (req.body.entry.length > 0) {\n      try {\n        // Iterates over each entry - there may be multiple if batched\n        // for (let i = 0; i < req.body.entry.length; i++) {\n        let pageID = req.body.entry[0].id;\n\n        console.info(`Message from ${pageID}`);\n\n        if (global.pagesKeyID[pageID] && global.pagesKeyID[pageID] !== '') {\n          req.token = global.pagesKeyID[pageID];\n        }\n        else {\n          const _accessToken = await getOnePageToken(pageID);\n          req.token = _accessToken;\n          global.pagesKeyID[pageID] = _accessToken;\n          console.info(`Got token from ${pageID}`);\n        }\n      } catch (expressAppUseGetTokenError) {\n        console.error({ expressAppUseGetTokenError });\n      }\n    }\n  }\n  else {\n    console.log('Something came, not a page...');\n  }\n  next();\n});\n\napp.use('/buckets/facebook', bot.router());\napp.listen(process.env.FB_WEBHOOK_PORT, () => console.log(`Bot server listening on port ${process.env.FB_WEBHOOK_PORT}`));\n\n/**\n * Event triggered when the button \"GET_STARTED\" is pressed.\n */\nbot.on('GET_STARTED', async (message) => {\n  const { sender } = message;\n  try {\n    // Send Welcome Message\n    await bot.startTyping(sender.id);\n    const out1 = await sendWelcomeMessage(sender, message.recipient.id)\n    await Bot.wait(1000);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, out1);\n\n    // Send Main Menu\n    await bot.startTyping(sender.id);\n    const out2 = await sendMainMenu();\n    await Bot.wait(1000);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, out2);\n\n  } catch (error) {\n    console.error('GET_STARTED error:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n// all postbacks are emitted via 'postback'\nbot.on('postback', async (event, message, data) => {\n  console.info(`postback from ${data}, you need to take care of this thing!`);\n  console.info(message);\n});\n\n// all postbacks are emitted via 'postback'\nbot.on('MAIN-MENU', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n    await bot.startTyping(sender.id);\n    if (data === 'CARDAPIO_PAYLOAD') {\n      const out = await sendCardapio(message.recipient.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n\n    } else if (data === 'PEDIDO_PAYLOAD') {\n      // Show saved address or ask for location\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const user = await bot.fetchUser(sender.id);\n      const answer = await confirmAddressOrAskLocation(recipient.id, sender.id, user);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n    } else if (data === 'HORARIO_PAYLOAD') {\n      const out = await sendHorario(message.recipient.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n  } catch (error) {\n    console.error('MAIN_MENU error:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n\n/**\n * clicked \"Fazer Pedido\"\n * gonna ask for QUANTITY\n */\nbot.on('message', async (message) => {\n  const { sender, recipient, location } = message;\n\n  try {\n    console.info({ message });\n\n    if (location) {\n      console.info({ location });\n\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const user = await bot.fetchUser(sender.id);\n      const answer = await confirmLocationAddress(recipient.id, sender.id, location, user);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n    }\n    else if (message.text === 'hello' || message.text === 'hi') {\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const answer = await basicReply();\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n    }\n    else {\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const answer = await confirmTypedText(recipient.id, sender.id, message);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n    }\n  } catch (error) {\n    console.error('on message error:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n/**\n * clicked \"Fazer Pedido\"\n * gonna ask for QUANTITY\n */\nbot.on('quick-reply', async (message, quick_reply) => {\n\n  const { sender, recipient } = message;\n  const { payload } = quick_reply;\n  try {\n    if (payload) {\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const answer = await showPhone(recipient.id, sender.id, payload);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n\n      // next question\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const out = await askForQuantity(recipient.id, sender.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n  } catch (error) {\n    console.error('quick-reply error:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n/**\n * answered CORRECT_SAVED_ADDRESS\n * gonna ask for phone\n */\nbot.on('CORRECT_SAVED_ADDRESS', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n    // show what the user chose\n    await bot.startTyping(sender.id);\n    await Bot.wait(1000);\n    const answer = await showAddress(recipient.id, sender.id, data);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, answer);\n\n    // next question\n    const out = await askForPhone(recipient.id, sender.id);\n    await Bot.wait(1000);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, out);\n  } catch (error) {\n    console.error('CORRECT_SAVED_ADDRESS:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n\n});\n\n/**\n * answered CORRECT_SAVED_ADDRESS\n * gonna ask for phone\n */\nbot.on('LOCATION_ADDRESS', async (message, data) => {\n  const { sender, recipient } = message;\n\n  try {\n    if (data === 'incorrect_address') {\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const answer = await askToTypeAddress(recipient.id, sender.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n    }\n    else {\n      // show what the user chose\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const answer = await showAddress(recipient.id, sender.id, data);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n\n      // next question\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const out = await showOrderOrAskForPhone(recipient.id, sender.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n  } catch (error) {\n    console.error('LOCATION_ADDRESS:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n\n/**\n * answered CORRECT_SAVED_ADDRESS\n * gonna ask for phone\n */\nbot.on('WRONG_SAVED_ADDRESS', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n    const out = await askForLocation();\n    await Bot.wait(1000);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, out);\n  } catch (error) {\n    console.error('WRONG_SAVED_ADDRESS:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\nbot.on('PHONE_CONFIRMED', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n    if (data === 'change_phone') {\n      // next question\n      const out = await askForPhone(recipient.id, sender.id);\n      await Bot.wait(1000);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n    else {\n      // show what the user typed\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const answer = await showPhone(recipient.id, sender.id, data);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n\n      // next question\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const out = await askForQuantity(recipient.id, sender.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n  } catch (error) {\n    console.error('PHONE_CONFIRMED:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n\n});\n\n\n/**\n * answered ORDER_QTY\n * gonna ask for SIZE\n */\nbot.on('ORDER_QTY', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n    if (data && data === 'qty_more') {\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const out = await askForQuantityMore();\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n    else {\n      // show what the user chose\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const answer = await showQuantity(recipient.id, sender.id, data);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n      // next question\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const out = await askForSize(recipient.id, sender.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n  } catch (error) {\n    console.error('ORDER_QTY:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n/**\n * answered ORDER_SIZE\n * gonna ask for FLAVOR\n */\nbot.on('ORDER_SIZE', async (message, data) => {\n  const { sender, recipient } = message;\n\n  try {\n    // show what the user chose\n    await bot.startTyping(sender.id);\n    await Bot.wait(2000);\n    const answer = await showSize(recipient.id, sender.id, data);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, answer);\n\n    // next question\n    await bot.startTyping(sender.id);\n    await Bot.wait(2000);\n    const out = await askForFlavorOrConfirm(message.recipient.id, sender.id, 1);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, out);\n  } catch (error) {\n    console.error('ORDER_SIZE:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n/**\n * answered ORDER_FLAVOR\n * gonna ask for confirmation\n */\nbot.on('ORDER_FLAVOR', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n    if (data && data.option && data.option === 'flavors_more') {\n      // next question\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const out = await askForFlavor(message.recipient.id, sender.id, data.multiple);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n    else {\n      // show what the user chose\n      await bot.startTyping(sender.id);\n      await Bot.wait(2000);\n      const answer = await showFlavor(recipient.id, sender.id, data);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n\n\n      // show summary\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const summary = await showOrderOrNextItem(recipient.id, sender.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, summary);\n    }\n  } catch (error) {\n    console.error('ORDER_FLAVOR:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n\n/**\n * answered ORDER_CONFIRMATION\n */\nbot.on('ORDER_CONFIRMATION', async (message, data) => {\n  const { sender, recipient } = message;\n\n  try {\n    if (data === 'confirmation_yes') {\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const out = await confirmOrder(recipient.id, sender.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n    else if (data === 'confirmation_no') {\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const out = await askForChangeOrder(recipient.id, sender.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n  } catch (error) {\n    console.error('ORDER_CONFIRMATION:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n\n});\n\n/**\n * answered wants change something in the order\n */\nbot.on('ORDER_WANT_CHANGE', async (message, data) => {\n  const { sender, recipient } = message;\n\n  try {\n    await bot.startTyping(sender.id);\n    await Bot.wait(1000);\n    const out = await askForSpecificItem(recipient.id, sender.id);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, out);\n  } catch (error) {\n    console.error('ORDER_WANT_CHANGE:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n\n});\n\nbot.on('ORDER_CHANGE', async (message, data) => {\n  const { sender, recipient } = message;\n\n  try {\n    await bot.startTyping(sender.id);\n    await Bot.wait(1000);\n    let out;\n    if (data === 'change_quantity') {\n      out = await askForQuantity(recipient.id, sender.id);\n    }\n    else if (data === 'change_size') {\n      out = await askForSize(recipient.id, sender.id);\n    }\n    else if (data === 'change_flavor') {\n      out = await askForFlavor(message.recipient.id, sender.id, 1);\n    }\n    else if (data === 'change_address') {\n      out = await askForLocation();\n    }\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, out);\n  } catch (error) {\n    console.error('ORDER_CHANGE:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\nbot.on('ORDER_CHANGE_SELECT_ITEM', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n    await bot.startTyping(sender.id);\n    await Bot.wait(1000);\n    const out = await updateItemAskOptions(recipient.id, sender.id, data);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, out);\n  } catch (error) {\n    console.error('ORDER_CHANGE_SELECT_ITEM:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n\n"],"file":"server-bot.js"}