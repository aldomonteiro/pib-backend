{"version":3,"sources":["../src/server-bot.js"],"names":["dotenv","config","env","process","NODE_ENV","mongo_url","DEV_MONGODB_URL","PRD_MONGODB_URL","RETRY_TIMEOUT","options","useNewUrlParser","autoReconnect","keepAlive","reconnectInterval","reconnectTries","isConnectedBefore","connect","mongoose","catch","err","console","error","set","Promise","connection","on","setTimeout","info","close","warn","exit","global","pagesKeyID","Object","app","bot","Bot","FB_VERIFY_TOKEN","logger","token","req","res","tz","format","use","bodyParser","urlencoded","extended","json","next","doNext","body","object","entry","length","pageID","id","timerIdentifier","Math","random","time","accessToken","name","timeEnd","expressAppUseGetTokenError","log","router","listen","FB_WEBHOOK_PORT","message","sender","action","recipient","outError","stopTyping","send","event","data","wait","startTyping","fetchUser","user","answer","out","mainMenuError","location","text","onMessageError","quick_reply","payload","quickReplyError","split","Number","option","multiple","summary","orderConfirmBeverageErr","orderBeverageErr","orderConfirmationError","orderConfirmationErr"],"mappings":"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","sourcesContent":["import \"@babel/polyfill\";\nimport express from \"express\";\nimport logger from \"morgan\";\nimport bodyParser from \"body-parser\";\nimport dotenv from \"dotenv\";\nimport moment from 'moment-timezone';\nimport mongoose from 'mongoose';\nimport { Bot } from 'facebook-messenger-bot';\nimport { getOnePageToken, getAllPages, getOnePageData } from './api/controllers/pagesController';\nimport { getPricingSizing } from './api/controllers/pricingsController';\nimport getCardapio from './api/bot/show_cardapio';\nimport { choices_sizes } from './api/util/util';\nimport {\n  sendWelcomeMessage,\n  sendErrorMsg,\n  sendMainMenu,\n  sendCardapio,\n  askForPhone,\n  showPhone,\n  askToTypePhone,\n  askForQuantity,\n  askForQuantityMore,\n  showQuantity,\n  askForSize,\n  showSize,\n  askForFlavor,\n  showFlavor,\n  showOrderOrNextItem,\n  askForLocation,\n  confirmAddressOrAskLocation,\n  confirmLocationAddress,\n  showAddress,\n  confirmOrder,\n  askToTypeAddress,\n  confirmTypedText,\n  sendHorario,\n  basicReply,\n  askForChangeOrder,\n  askForSplitFlavorOrConfirm,\n  askForFlavorOrConfirm,\n  askForSpecificItem,\n  updateItemAskOptions,\n  showOrderOrAskForPhone,\n  showSplit\n} from './api/bot/botController';\n\nimport { sendActions } from './api/bot/actionsController';\n\ndotenv.config();\n\n// mongoose.connect(\n//   process.env.MONGODB_URL,\n//   { useNewUrlParser: true }\n// );\n\nconst env = process.env.NODE_ENV || 'production';\n\nlet mongo_url = process.env.DEV_MONGODB_URL;\nif (env === 'production')\n  mongo_url = process.env.PRD_MONGODB_URL;\n\n\nconst RETRY_TIMEOUT = 3000\n\nconst options = {\n  useNewUrlParser: true,\n  autoReconnect: true,\n  keepAlive: 30000,\n  reconnectInterval: RETRY_TIMEOUT,\n  reconnectTries: 10000\n}\n\nlet isConnectedBefore = false\n\nconst connect = () => {\n  return mongoose.connect(mongo_url, options)\n    .catch(err => console.error('Mongoose connect(...) failed with err: ', err))\n}\n\nconnect();\n\nmongoose.set('useCreateIndex', true);\nmongoose.Promise = Promise;\n\nmongoose.connection.on('error', () => {\n  console.error('Could not connect to MongoDB')\n});\n\nmongoose.connection.on('disconnected', () => {\n  console.error('Lost MongoDB connection...')\n  if (!isConnectedBefore) {\n    setTimeout(() => connect(), RETRY_TIMEOUT)\n  }\n});\n\nmongoose.connection.on('connected', () => {\n  isConnectedBefore = true\n  console.info('Connection established to MongoDB')\n});\n\nmongoose.connection.on('reconnected', () => {\n  console.info('Reconnected to MongoDB')\n});\n\n// Close the Mongoose connection, when receiving SIGINT\nprocess.on('SIGINT', () => {\n  mongoose.connection.close(function () {\n    console.warn('Force to close the MongoDB connection after SIGINT')\n    process.exit(0)\n  })\n});\n\nglobal.pagesKeyID = new Object();\n\nconst app = express();\n\nconst bot = new Bot(process.env.FB_VERIFY_TOKEN, true);\n\n// getAllPages().then(async (pageArray) => {\n//   for (let i = 0; i < pageArray.length; i++) {\n//     const page = pageArray[i];\n//     const fields = ['greeting', 'get_started', 'persistent_menu'];\n//     bot._token = page.accessToken;\n//     const response = await bot.getFields(fields);\n//     global.pagesKeyID[page.pageID] = page.accessToken;\n\n//     console.info(`GET fields for ${page.pageID}-${page.name}:`)\n//     console.info(response);\n//   }\n// });\n\n\n// Beggining - That is all to log in the local timezone\n// https://medium.com/front-end-hacking/node-js-logs-in-local-timezone-on-morgan-and-winston-9e98b2b9ca45\n// [Node.js] Logs in Local Timezone on Morgan\nlogger.token('date', (req, res, tz) => {\n  return moment().tz(tz).format();\n})\nlogger.format('myformat', '[:date[America/Sao_Paulo]] \":method :url\" :status :res[content-length] - :response-time ms');\n\napp.use(logger(\"myformat\"));\n// End - That is all to log in the right timezone\n\napp.set('json spaces', 2);\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use('/buckets/facebook', async (req, res, next) => {\n  let doNext = true;\n  if (req.body && req.body.object === 'page') {\n    if (req.body.entry.length > 0) {\n      try {\n        // Iterates over each entry - there may be multiple if batched\n        // for (let i = 0; i < req.body.entry.length; i++) {\n        let pageID = req.body.entry[0].id;\n        if (global.pagesKeyID[pageID] && global.pagesKeyID[pageID] !== '') {\n          req.token = global.pagesKeyID[pageID];\n        }\n        else {\n          let timerIdentifier = \"getOnePageToken\" + Math.random();\n          console.time(timerIdentifier);\n          const { accessToken, name } = await getOnePageToken(pageID);\n          req.token = accessToken;\n          console.timeEnd(timerIdentifier);\n          global.pagesKeyID[pageID] = accessToken;\n        }\n\n        // const _time = req.body.entry[0].time;\n        // const messageTime = new Date(_time).toLocaleTimeString('pt-BR');\n        // console.info(`${messageTime} From ${pageID} memory tokens:${Object.keys(global.pagesKeyID).length}`);\n\n      } catch (expressAppUseGetTokenError) {\n        console.error({ expressAppUseGetTokenError });\n      }\n    }\n  }\n  else {\n    console.log('Something came, not a page...');\n  }\n  if (doNext)\n    next();\n});\n\napp.use('/buckets/facebook', bot.router());\napp.listen(process.env.FB_WEBHOOK_PORT, () => console.log(`Bot server listening on port ${process.env.FB_WEBHOOK_PORT}`));\n\n/**\n * Event triggered when the button \"GET_STARTED\" is pressed.\n */\nbot.on('GET_STARTED', async (message) => {\n  const { sender } = message;\n  try {\n    await sendActions({ action: 'SEND_WELCOME', bot, sender, pageID: message.recipient.id });\n\n    // Send Main Menu\n    await sendActions({ action: 'SEND_MAIN_MENU', bot, sender, pageID: message.recipient.id });\n  } catch (error) {\n    console.error('GET_STARTED error:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n// all postbacks are emitted via 'postback'\nbot.on('postback', async (event, message, data) => {\n  console.info(`postback from ${data}, you need to take care of this thing!`);\n  console.info(message);\n});\n\n// all postbacks are emitted via 'postback'\nbot.on('MAIN-MENU', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n    if (data === 'CARDAPIO_PAYLOAD') {\n      // const out = await sendCardapio(message.recipient.id);\n      // await bot.stopTyping(sender.id);\n      // await bot.send(sender.id, out);\n      await sendActions({ action: 'SEND_CARDAPIO', bot, sender, pageID: message.recipient.id });\n      await Bot.wait(2000);\n      await sendActions({ action: 'ASK_FOR_ORDER', bot, sender, pageID: message.recipient.id });\n    } else if (data === 'PEDIDO_PAYLOAD') {\n      // Show saved address or ask for location\n      await bot.startTyping(sender.id);\n      await Bot.wait(500);\n      const user = await bot.fetchUser(sender.id);\n      const answer = await confirmAddressOrAskLocation(recipient.id, sender.id, user);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n    } else if (data === 'HORARIO_PAYLOAD') {\n      await bot.startTyping(sender.id);\n      const out = await sendHorario(message.recipient.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n  } catch (mainMenuError) {\n    console.error({ mainMenuError });\n    const outError = await sendErrorMsg(mainMenuError.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\nbot.on('ORDER_WANT_ORDER', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n    if (data === 'wantorder_yes') {\n      // Show saved address or ask for location\n      await bot.startTyping(sender.id);\n      await Bot.wait(500);\n      const user = await bot.fetchUser(sender.id);\n      const answer = await confirmAddressOrAskLocation(recipient.id, sender.id, user);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n    } else if (data === 'wantorder_no') {\n      await sendActions({ action: 'BASIC_REPLY', bot, sender, pageID: message.recipient.id, data: 'Ok, vou enviar as opções então. Para continuar é só clicar em uma delas' });\n      // Send Main Menu\n      await sendActions({ action: 'SEND_MAIN_MENU', bot, sender, pageID: message.recipient.id });\n    }\n  } catch (mainMenuError) {\n    console.error({ mainMenuError });\n    const outError = await sendErrorMsg(mainMenuError.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n\n/**\n * Question No.02 (location)\n * clicked \"Fazer Pedido\"\n * gonna ask for QUANTITY\n */\nbot.on('message', async (message) => {\n  const { sender, recipient, location } = message;\n\n  try {\n    if (location) {\n      await sendActions({ action: 'LOCATION_CONFIRM_ADDRESS', bot, sender, pageID: recipient.id, location });\n    }\n    else if (message.text === 'hello' || message.text === 'hi') {\n      await sendActions({ action: 'BASIC_REPLY', bot, sender, pageID: message.recipient.id, data: 'Hello, how are you doing? Currently, I am working only in Portuguese, but, soon enough, your favorite restaurant will be with me.' });\n    }\n    else {\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const answer = await confirmTypedText(recipient.id, sender.id, message);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n    }\n  } catch (onMessageError) {\n    console.error({ onMessageError });\n    const outError = await sendErrorMsg(onMessageError.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n/**\n * clicked \"Fazer Pedido\"\n * gonna ask for QUANTITY\n */\nbot.on('quick-reply', async (message, quick_reply) => {\n\n  const { sender, recipient } = message;\n  const { payload } = quick_reply;\n  try {\n    if (payload) {\n      await sendActions({ action: 'SHOW_PHONE', bot, sender, pageID: recipient.id, payload: payload });\n\n      await sendActions({ action: 'ASK_FOR_QUANTITY', bot, sender, pageID: recipient.id });\n    }\n  } catch (quickReplyError) {\n    console.error({ quickReplyError });\n    const outError = await sendErrorMsg(quickReplyError.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n/**\n * Answer No.01\n * answered CORRECT_SAVED_ADDRESS\n * gonna ask for phone\n */\nbot.on('CORRECT_SAVED_ADDRESS', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n    await sendActions({ action: 'SHOW_ADDRESS', bot, sender, pageID: recipient.id, data: data });\n\n    await sendActions({ action: 'ASK_FOR_PHONE', bot, sender, pageID: recipient.id });\n\n  } catch (error) {\n    console.error('CORRECT_SAVED_ADDRESS:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n\n});\n\n/**\n * answered CORRECT_SAVED_ADDRESS\n * gonna ask for phone\n */\nbot.on('LOCATION_ADDRESS', async (message, data) => {\n  const { sender, recipient } = message;\n\n  try {\n    if (data === 'incorrect_address') {\n      await sendActions({ action: 'ASK_TO_TYPE_ADDRESS', bot, sender, pageID: recipient.id });\n    }\n    else {\n      await sendActions({ action: 'SHOW_ADDRESS', bot, sender, pageID: recipient.id, data: data });\n\n      await sendActions({ action: 'SHOW_ORDER_OR_ASK_FOR_PHONE', bot, sender, pageID: recipient.id });\n    }\n  } catch (error) {\n    console.error('LOCATION_ADDRESS:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n\n/**\n * answered CORRECT_SAVED_ADDRESS\n * gonna ask for phone\n */\nbot.on('WRONG_SAVED_ADDRESS', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n\n    await sendActions({ action: 'ASK_FOR_LOCATION', bot, sender, pageID: recipient.id });\n\n  } catch (error) {\n    console.error('WRONG_SAVED_ADDRESS:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\nbot.on('PHONE_CONFIRMED', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n    if (data === 'change_phone') {\n      await sendActions({ action: 'ASK_TO_TYPE_PHONE', bot, sender, pageID: recipient.id });\n    }\n    else {\n      await sendActions({ action: 'SHOW_PHONE', bot, sender, pageID: recipient.id, data: data });\n\n      await sendActions({ action: 'ASK_FOR_QUANTITY', bot, sender, pageID: recipient.id });\n    }\n  } catch (error) {\n    console.error('PHONE_CONFIRMED:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n\n});\n\n\n/**\n * answered ORDER_QTY\n * gonna ask for SIZE\n */\nbot.on('ORDER_QTY', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n    if (data && data === 'qty_more') {\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const out = await askForQuantityMore();\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n    else {\n      // show what the user chose\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const answer = await showQuantity(recipient.id, sender.id, data);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n      // next question\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const out = await askForSize(recipient.id, sender.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n  } catch (error) {\n    console.error('ORDER_QTY:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n/**\n * answered ORDER_SIZE\n * gonna ask for FLAVOR\n */\nbot.on('ORDER_SIZE', async (message, data) => {\n  const { sender, recipient } = message;\n\n  try {\n    // show what the user chose\n    await bot.startTyping(sender.id);\n    await Bot.wait(900);\n    const answer = await showSize(recipient.id, sender.id, data);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, answer);\n\n    // check if the size is splitable.\n    await bot.startTyping(sender.id);\n    await Bot.wait(900);\n    const out = await askForSplitFlavorOrConfirm(message.recipient.id, sender.id, 1);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, out);\n\n  } catch (error) {\n    console.error('ORDER_SIZE:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n\nbot.on('ORDER_SPLIT', async (message, data) => {\n  const { sender, recipient } = message;\n\n  await bot.startTyping(sender.id);\n  await Bot.wait(900);\n  const answer = await showSplit(recipient.id, sender.id, data);\n  await bot.stopTyping(sender.id);\n  await bot.send(sender.id, answer);\n\n  const split = Number(data);\n\n  // next question\n  await bot.startTyping(sender.id);\n  await Bot.wait(250);\n  const out = await askForFlavorOrConfirm(message.recipient.id, sender.id, 1, split);\n  await bot.stopTyping(sender.id);\n  await bot.send(sender.id, out);\n});\n\n/**\n * answered ORDER_FLAVOR\n * gonna ask for confirmation\n */\nbot.on('ORDER_FLAVOR', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n    if (data && data.option && data.option === 'flavors_more') {\n      await sendActions({ action: 'ASK_FOR_FLAVOR', bot, sender, pageID: recipient.id, multiple: data.multiple })\n    }\n    else {\n      await sendActions({ action: 'SHOW_FLAVOR', bot, sender, pageID: recipient.id, data })\n\n      // show summary\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const summary = await showOrderOrNextItem(recipient.id, sender.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, summary);\n    }\n  } catch (error) {\n    console.error('ORDER_FLAVOR:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n/**\n * answered ORDER_SIZE\n * gonna ask for FLAVOR\n */\nbot.on('ORDER_CONFIRM_BEVERAGE', async (message, data) => {\n  const { sender, recipient } = message;\n\n  try {\n    if (data === 'beverage_yes')\n      await sendActions({ action: 'ASK_FOR_BEVERAGE_OPTIONS', bot, sender, pageID: recipient.id, multiple: 1 })\n    else {\n      await sendActions({ action: 'SHOW_NO_BEVERAGE', bot, sender, pageID: recipient.id })\n      await sendActions({ action: 'SHOW_FULL_ORDER', bot, sender, pageID: recipient.id })\n    }\n\n  } catch (orderConfirmBeverageErr) {\n    console.error({ orderConfirmBeverageErr });\n    const outError = await sendErrorMsg(orderConfirmBeverageErr.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n/**\n * answered ORDER_BEVERAGE\n * gonna ask for confirmation\n */\nbot.on('ORDER_BEVERAGE', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n    if (data && data.option && data.option === 'beverages_more') {\n      // more beverages\n      await sendActions({ action: 'ASK_FOR_BEVERAGE_OPTIONS', bot, sender, pageID: recipient.id, multiple: data.multiple })\n    }\n    else if (data && data.option && data.option === 'beverages_cancel') {\n      await sendActions({ action: 'SHOW_NO_BEVERAGE', bot, sender, pageID: recipient.id })\n      await sendActions({ action: 'SHOW_FULL_ORDER', bot, sender, pageID: recipient.id })\n    }\n    else {\n      await sendActions({ action: 'SHOW_BEVERAGE', bot, sender, pageID: recipient.id, data: data })\n\n      await sendActions({ action: 'SHOW_FULL_ORDER', bot, sender, pageID: recipient.id })\n    }\n  } catch (orderBeverageErr) {\n    console.error({ orderBeverageErr });\n    const outError = await sendErrorMsg(orderBeverageErr.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n/**\n * answered ORDER_CONFIRMATION\n */\nbot.on('ORDER_PIZZA_CONFIRMATION', async (message, data) => {\n  const { sender, recipient } = message;\n\n  try {\n    if (data === 'confirmation_yes') {\n      await sendActions({ action: 'ASK_FOR_WANT_BEVERAGE', bot, sender, pageID: recipient.id });\n    }\n    else if (data === 'confirmation_no') {\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const out = await askForChangeOrder(recipient.id, sender.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n  } catch (orderConfirmationError) {\n    console.error({ orderConfirmationError });\n    const outError = await sendErrorMsg(orderConfirmationError.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n\n});\n\n\n/**\n * answered ORDER_CONFIRMATION\n */\nbot.on('ORDER_CONFIRMATION', async (message, data) => {\n  const { sender, recipient } = message;\n\n  try {\n    if (data === 'confirmation_yes') {\n      await sendActions({ action: 'CONFIRM_ORDER', bot, sender, pageID: recipient.id });\n    }\n    else if (data === 'confirmation_no') {\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const out = await askForChangeOrder(recipient.id, sender.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n  } catch (orderConfirmationErr) {\n    console.error({ orderConfirmationErr });\n    const outError = await sendErrorMsg(orderConfirmationErr.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n\n});\n\n/**\n * answered wants change something in the order\n */\nbot.on('ORDER_WANT_CHANGE', async (message, data) => {\n  const { sender, recipient } = message;\n\n  try {\n    await bot.startTyping(sender.id);\n    await Bot.wait(1000);\n    const out = await askForSpecificItem(recipient.id, sender.id);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, out);\n  } catch (error) {\n    console.error('ORDER_WANT_CHANGE:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n\n});\n\nbot.on('ORDER_CHANGE', async (message, data) => {\n  const { sender, recipient } = message;\n\n  try {\n    await bot.startTyping(sender.id);\n    await Bot.wait(500);\n    let out;\n    if (data === 'change_quantity') {\n      out = await askForQuantity(recipient.id, sender.id);\n    }\n    else if (data === 'change_size') {\n      out = await askForSize(recipient.id, sender.id);\n    }\n    else if (data === 'change_flavor') {\n      out = await askForFlavor(message.recipient.id, sender.id, 1);\n    }\n    else if (data === 'change_address') {\n      out = await askForLocation();\n    }\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, out);\n  } catch (error) {\n    console.error('ORDER_CHANGE:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\nbot.on('ORDER_CHANGE_SELECT_ITEM', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n    await bot.startTyping(sender.id);\n    await Bot.wait(1000);\n    const out = await updateItemAskOptions(recipient.id, sender.id, data);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, out);\n  } catch (error) {\n    console.error('ORDER_CHANGE_SELECT_ITEM:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n\n"],"file":"server-bot.js"}