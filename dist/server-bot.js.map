{"version":3,"sources":["../src/server-bot.js"],"names":["dotenv","config","mongoose","connect","process","env","MONGODB_URL","useNewUrlParser","set","Promise","global","pagesKeyID","Object","app","bot","Bot","FB_VERIFY_TOKEN","logger","token","req","res","tz","format","use","bodyParser","urlencoded","extended","json","next","doNext","body","object","entry","length","pageID","id","accessToken","name","_time","time","messageTime","Date","toLocaleTimeString","console","info","keys","error","expressAppUseGetTokenError","log","router","listen","FB_WEBHOOK_PORT","on","message","sender","startTyping","recipient","out1","wait","stopTyping","send","out2","outError","event","data","out","fetchUser","user","answer","location","text","quick_reply","payload","option","multiple","summary"],"mappings":"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","sourcesContent":["import \"@babel/polyfill\";\nimport express from \"express\";\nimport logger from \"morgan\";\nimport bodyParser from \"body-parser\";\nimport dotenv from \"dotenv\";\nimport moment from 'moment-timezone';\nimport mongoose from 'mongoose';\nimport { Bot, Elements, Buttons, QuickReplies } from 'facebook-messenger-bot';\nimport { getOnePageToken, getAllPages, getOnePageData } from './api/controllers/pagesController';\nimport { getPricingSizing } from './api/controllers/pricingsController';\nimport getCardapio from './api/bot/show_cardapio';\nimport { choices_sizes } from './api/util/util';\nimport {\n  sendWelcomeMessage,\n  sendErrorMsg,\n  sendMainMenu,\n  sendCardapio,\n  askForPhone,\n  showPhone,\n  askToTypePhone,\n  askForQuantity,\n  askForQuantityMore,\n  showQuantity,\n  askForSize,\n  showSize,\n  askForFlavor,\n  showFlavor,\n  showOrderOrNextItem,\n  askForLocation,\n  confirmAddressOrAskLocation,\n  confirmLocationAddress,\n  showAddress,\n  confirmOrder,\n  askToTypeAddress,\n  confirmTypedText,\n  sendHorario,\n  basicReply,\n  askForChangeOrder,\n  askForFlavorOrConfirm,\n  askForSpecificItem,\n  updateItemAskOptions,\n  showOrderOrAskForPhone\n} from './api/bot/botController';\n\ndotenv.config();\n\nmongoose.connect(\n  process.env.MONGODB_URL,\n  { useNewUrlParser: true }\n);\nmongoose.set('useCreateIndex', true);\nmongoose.Promise = Promise;\n\nglobal.pagesKeyID = new Object();\n\nconst app = express();\n\nconst bot = new Bot(process.env.FB_VERIFY_TOKEN, true);\n\n// getAllPages().then(async (pageArray) => {\n//   for (let i = 0; i < pageArray.length; i++) {\n//     const page = pageArray[i];\n//     const fields = ['greeting', 'get_started', 'persistent_menu'];\n//     bot._token = page.accessToken;\n//     const response = await bot.getFields(fields);\n//     global.pagesKeyID[page.pageID] = page.accessToken;\n\n//     console.info(`GET fields for ${page.pageID}-${page.name}:`)\n//     console.info(response);\n//   }\n// });\n\n\n// Beggining - That is all to log in the local timezone\n// https://medium.com/front-end-hacking/node-js-logs-in-local-timezone-on-morgan-and-winston-9e98b2b9ca45\n// [Node.js] Logs in Local Timezone on Morgan\nlogger.token('date', (req, res, tz) => {\n  return moment().tz(tz).format();\n})\nlogger.format('myformat', '[:date[America/Sao_Paulo]] \":method :url\" :status :res[content-length] - :response-time ms');\n\napp.use(logger(\"myformat\"));\n// End - That is all to log in the right timezone\n\napp.set('json spaces', 2);\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use('/buckets/facebook', async (req, res, next) => {\n  let doNext = true;\n  if (req.body && req.body.object === 'page') {\n    if (req.body.entry.length > 0) {\n      try {\n        // Iterates over each entry - there may be multiple if batched\n        // for (let i = 0; i < req.body.entry.length; i++) {\n        let pageID = req.body.entry[0].id;\n        if (global.pagesKeyID[pageID] && global.pagesKeyID[pageID] !== '') {\n          req.token = global.pagesKeyID[pageID];\n        }\n        else {\n          const { accessToken, name } = await getOnePageToken(pageID);\n          req.token = accessToken;\n          global.pagesKeyID[pageID] = accessToken;\n        }\n\n        const _time = req.body.entry[0].time;\n        const messageTime = new Date(_time).toLocaleTimeString('pt-BR');\n        console.info(`${messageTime} From ${pageID} memory tokens:${Object.keys(global.pagesKeyID).length}`);\n\n      } catch (expressAppUseGetTokenError) {\n        console.error({ expressAppUseGetTokenError });\n      }\n    }\n  }\n  else {\n    console.log('Something came, not a page...');\n  }\n  if (doNext)\n    next();\n});\n\napp.use('/buckets/facebook', bot.router());\napp.listen(process.env.FB_WEBHOOK_PORT, () => console.log(`Bot server listening on port ${process.env.FB_WEBHOOK_PORT}`));\n\n/**\n * Event triggered when the button \"GET_STARTED\" is pressed.\n */\nbot.on('GET_STARTED', async (message) => {\n  const { sender } = message;\n  try {\n    // Send Welcome Message\n    await bot.startTyping(sender.id);\n    const out1 = await sendWelcomeMessage(sender, message.recipient.id)\n    await Bot.wait(1000);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, out1);\n\n    // Send Main Menu\n    await bot.startTyping(sender.id);\n    const out2 = await sendMainMenu();\n    await Bot.wait(1000);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, out2);\n\n  } catch (error) {\n    console.error('GET_STARTED error:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n// all postbacks are emitted via 'postback'\nbot.on('postback', async (event, message, data) => {\n  console.info(`postback from ${data}, you need to take care of this thing!`);\n  console.info(message);\n});\n\n// all postbacks are emitted via 'postback'\nbot.on('MAIN-MENU', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n    await bot.startTyping(sender.id);\n    if (data === 'CARDAPIO_PAYLOAD') {\n      const out = await sendCardapio(message.recipient.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n\n    } else if (data === 'PEDIDO_PAYLOAD') {\n      // Show saved address or ask for location\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const user = await bot.fetchUser(sender.id);\n      const answer = await confirmAddressOrAskLocation(recipient.id, sender.id, user);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n    } else if (data === 'HORARIO_PAYLOAD') {\n      const out = await sendHorario(message.recipient.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n  } catch (error) {\n    console.error('MAIN_MENU error:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n\n/**\n * clicked \"Fazer Pedido\"\n * gonna ask for QUANTITY\n */\nbot.on('message', async (message) => {\n  const { sender, recipient, location } = message;\n\n  try {\n    if (location) {\n      console.info({ location });\n\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const user = await bot.fetchUser(sender.id);\n      const answer = await confirmLocationAddress(recipient.id, sender.id, location, user);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n    }\n    else if (message.text === 'hello' || message.text === 'hi') {\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const answer = await basicReply();\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n    }\n    else {\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const answer = await confirmTypedText(recipient.id, sender.id, message);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n    }\n  } catch (error) {\n    console.error('on message error:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n/**\n * clicked \"Fazer Pedido\"\n * gonna ask for QUANTITY\n */\nbot.on('quick-reply', async (message, quick_reply) => {\n\n  const { sender, recipient } = message;\n  const { payload } = quick_reply;\n  try {\n    if (payload) {\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const answer = await showPhone(recipient.id, sender.id, payload);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n\n      // next question\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const out = await askForQuantity(recipient.id, sender.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n  } catch (error) {\n    console.error('quick-reply error:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n/**\n * answered CORRECT_SAVED_ADDRESS\n * gonna ask for phone\n */\nbot.on('CORRECT_SAVED_ADDRESS', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n    // show what the user chose\n    await bot.startTyping(sender.id);\n    await Bot.wait(1000);\n    const answer = await showAddress(recipient.id, sender.id, data);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, answer);\n\n    // next question\n    const out = await askForPhone(recipient.id, sender.id);\n    await Bot.wait(1000);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, out);\n  } catch (error) {\n    console.error('CORRECT_SAVED_ADDRESS:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n\n});\n\n/**\n * answered CORRECT_SAVED_ADDRESS\n * gonna ask for phone\n */\nbot.on('LOCATION_ADDRESS', async (message, data) => {\n  const { sender, recipient } = message;\n\n  try {\n    if (data === 'incorrect_address') {\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const answer = await askToTypeAddress(recipient.id, sender.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n    }\n    else {\n      // show what the user chose\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const answer = await showAddress(recipient.id, sender.id, data);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n\n      // next question\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const out = await showOrderOrAskForPhone(recipient.id, sender.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n  } catch (error) {\n    console.error('LOCATION_ADDRESS:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n\n/**\n * answered CORRECT_SAVED_ADDRESS\n * gonna ask for phone\n */\nbot.on('WRONG_SAVED_ADDRESS', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n    const out = await askForLocation();\n    await Bot.wait(1000);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, out);\n  } catch (error) {\n    console.error('WRONG_SAVED_ADDRESS:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\nbot.on('PHONE_CONFIRMED', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n    if (data === 'change_phone') {\n      // next question\n      const out = await askToTypePhone(recipient.id, sender.id);\n      await Bot.wait(1000);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n    else {\n      // show what the user typed\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const answer = await showPhone(recipient.id, sender.id, data);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n\n      // next question\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const out = await askForQuantity(recipient.id, sender.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n  } catch (error) {\n    console.error('PHONE_CONFIRMED:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n\n});\n\n\n/**\n * answered ORDER_QTY\n * gonna ask for SIZE\n */\nbot.on('ORDER_QTY', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n    if (data && data === 'qty_more') {\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const out = await askForQuantityMore();\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n    else {\n      // show what the user chose\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const answer = await showQuantity(recipient.id, sender.id, data);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n      // next question\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const out = await askForSize(recipient.id, sender.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n  } catch (error) {\n    console.error('ORDER_QTY:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n/**\n * answered ORDER_SIZE\n * gonna ask for FLAVOR\n */\nbot.on('ORDER_SIZE', async (message, data) => {\n  const { sender, recipient } = message;\n\n  try {\n    // show what the user chose\n    await bot.startTyping(sender.id);\n    await Bot.wait(1000);\n    const answer = await showSize(recipient.id, sender.id, data);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, answer);\n\n    // next question\n    await bot.startTyping(sender.id);\n    await Bot.wait(1000);\n    const out = await askForFlavorOrConfirm(message.recipient.id, sender.id, 1);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, out);\n  } catch (error) {\n    console.error('ORDER_SIZE:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n/**\n * answered ORDER_FLAVOR\n * gonna ask for confirmation\n */\nbot.on('ORDER_FLAVOR', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n    if (data && data.option && data.option === 'flavors_more') {\n      // next question\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const out = await askForFlavor(message.recipient.id, sender.id, data.multiple);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n    else {\n      // show what the user chose\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const answer = await showFlavor(recipient.id, sender.id, data);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, answer);\n\n\n      // show summary\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const summary = await showOrderOrNextItem(recipient.id, sender.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, summary);\n    }\n  } catch (error) {\n    console.error('ORDER_FLAVOR:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n\n/**\n * answered ORDER_CONFIRMATION\n */\nbot.on('ORDER_CONFIRMATION', async (message, data) => {\n  const { sender, recipient } = message;\n\n  try {\n    if (data === 'confirmation_yes') {\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const out = await confirmOrder(recipient.id, sender.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n      delete global.pagesKeyID[recipient.id];\n    }\n    else if (data === 'confirmation_no') {\n      await bot.startTyping(sender.id);\n      await Bot.wait(1000);\n      const out = await askForChangeOrder(recipient.id, sender.id);\n      await bot.stopTyping(sender.id);\n      await bot.send(sender.id, out);\n    }\n  } catch (error) {\n    console.error('ORDER_CONFIRMATION:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n\n});\n\n/**\n * answered wants change something in the order\n */\nbot.on('ORDER_WANT_CHANGE', async (message, data) => {\n  const { sender, recipient } = message;\n\n  try {\n    await bot.startTyping(sender.id);\n    await Bot.wait(1000);\n    const out = await askForSpecificItem(recipient.id, sender.id);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, out);\n  } catch (error) {\n    console.error('ORDER_WANT_CHANGE:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n\n});\n\nbot.on('ORDER_CHANGE', async (message, data) => {\n  const { sender, recipient } = message;\n\n  try {\n    await bot.startTyping(sender.id);\n    await Bot.wait(1000);\n    let out;\n    if (data === 'change_quantity') {\n      out = await askForQuantity(recipient.id, sender.id);\n    }\n    else if (data === 'change_size') {\n      out = await askForSize(recipient.id, sender.id);\n    }\n    else if (data === 'change_flavor') {\n      out = await askForFlavor(message.recipient.id, sender.id, 1);\n    }\n    else if (data === 'change_address') {\n      out = await askForLocation();\n    }\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, out);\n  } catch (error) {\n    console.error('ORDER_CHANGE:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\nbot.on('ORDER_CHANGE_SELECT_ITEM', async (message, data) => {\n  const { sender, recipient } = message;\n  try {\n    await bot.startTyping(sender.id);\n    await Bot.wait(1000);\n    const out = await updateItemAskOptions(recipient.id, sender.id, data);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, out);\n  } catch (error) {\n    console.error('ORDER_CHANGE_SELECT_ITEM:', error.message);\n    const outError = await sendErrorMsg(error.message);\n    await bot.stopTyping(sender.id);\n    await bot.send(sender.id, outError);\n  }\n});\n\n\n"],"file":"server-bot.js"}